
Divide_by_zero.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012ec  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001d4  080014bc  080014bc  000114bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001690  08001690  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001690  08001690  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001690  08001690  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001690  08001690  00011690  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001694  08001694  00011694  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001698  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  080016fc  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  080016fc  00020090  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000217a  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000624  00000000  00000000  0002220e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000140  00000000  00000000  00022838  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000108  00000000  00000000  00022978  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002a7a  00000000  00000000  00022a80  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000138a  00000000  00000000  000254fa  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000090af  00000000  00000000  00026884  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002f933  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b30  00000000  00000000  0002f9b0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080014a4 	.word	0x080014a4

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	080014a4 	.word	0x080014a4

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <main>:
#include<stdio.h>
#include<stdint.h>

int div_test(int x,int y);
int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b082      	sub	sp, #8
 80002b4:	af00      	add	r7, sp, #0
	// access the SCB and then the SHSCR for the cortex M4 processor
	uint32_t *pSHCRS=(uint32_t *)0xE000ED24; // pointer that points to a memory location at 0xE000ED24
 80002b6:	4b12      	ldr	r3, [pc, #72]	; (8000300 <main+0x50>)
 80002b8:	607b      	str	r3, [r7, #4]

	// enable the bits for mem manage,bus fault and usage fault
	*pSHCRS |= (1<<16);
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	601a      	str	r2, [r3, #0]
	*pSHCRS |= (1<<17);
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	601a      	str	r2, [r3, #0]
	*pSHCRS |= (1<<18);
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	601a      	str	r2, [r3, #0]

	// enable the divide by zero trap - control and configuration regsiter
	uint32_t *pDivZero=(uint32_t *)0xE000ED14; // pointer to base address of ccr
 80002de:	4b09      	ldr	r3, [pc, #36]	; (8000304 <main+0x54>)
 80002e0:	603b      	str	r3, [r7, #0]
	*pDivZero |= (1<<4);
 80002e2:	683b      	ldr	r3, [r7, #0]
 80002e4:	681b      	ldr	r3, [r3, #0]
 80002e6:	f043 0210 	orr.w	r2, r3, #16
 80002ea:	683b      	ldr	r3, [r7, #0]
 80002ec:	601a      	str	r2, [r3, #0]

	// call a function to test
	div_test(5,0);
 80002ee:	2100      	movs	r1, #0
 80002f0:	2005      	movs	r0, #5
 80002f2:	f000 f88b 	bl	800040c <div_test>
 80002f6:	2300      	movs	r3, #0

}
 80002f8:	4618      	mov	r0, r3
 80002fa:	3708      	adds	r7, #8
 80002fc:	46bd      	mov	sp, r7
 80002fe:	bd80      	pop	{r7, pc}
 8000300:	e000ed24 	.word	0xe000ed24
 8000304:	e000ed14 	.word	0xe000ed14

08000308 <BusFault_Handler>:

void BusFault_Handler()
{
 8000308:	b580      	push	{r7, lr}
 800030a:	af00      	add	r7, sp, #0
	printf("Exception: Bus fault");
 800030c:	4801      	ldr	r0, [pc, #4]	; (8000314 <BusFault_Handler+0xc>)
 800030e:	f000 f981 	bl	8000614 <iprintf>
	while(1);
 8000312:	e7fe      	b.n	8000312 <BusFault_Handler+0xa>
 8000314:	080014bc 	.word	0x080014bc

08000318 <MemManage_Handler>:
}

void MemManage_Handler()
{
 8000318:	b580      	push	{r7, lr}
 800031a:	af00      	add	r7, sp, #0
	printf("Exception: Mem manage");
 800031c:	4801      	ldr	r0, [pc, #4]	; (8000324 <MemManage_Handler+0xc>)
 800031e:	f000 f979 	bl	8000614 <iprintf>
	while(1);
 8000322:	e7fe      	b.n	8000322 <MemManage_Handler+0xa>
 8000324:	080014d4 	.word	0x080014d4

08000328 <UsageFault_Handler>:
// code in assembly avoids the epilogue and the prologue to the function

__attribute__((naked)) void UsageFault_Handler(void)
{
	// this function contains code in only assembly
	__asm("MRS r0,MSP");
 8000328:	f3ef 8008 	mrs	r0, MSP
	__asm("B UsageFault_Handler_c"); // branches to UsageFault_Handler_c function pBaseStack contains the value of r0 which is the base address of the MSP
 800032c:	f000 b802 	b.w	8000334 <UsageFault_Handler_c>
}
 8000330:	bf00      	nop
	...

08000334 <UsageFault_Handler_c>:

void UsageFault_Handler_c(uint32_t *pBaseStack)
{
 8000334:	b580      	push	{r7, lr}
 8000336:	b084      	sub	sp, #16
 8000338:	af00      	add	r7, sp, #0
 800033a:	6078      	str	r0, [r7, #4]
	uint32_t *pUFSR=(uint32_t *)0xE000ED2A;
 800033c:	4b23      	ldr	r3, [pc, #140]	; (80003cc <UsageFault_Handler_c+0x98>)
 800033e:	60fb      	str	r3, [r7, #12]
	printf("Exception: Usage fault\n");
 8000340:	4823      	ldr	r0, [pc, #140]	; (80003d0 <UsageFault_Handler_c+0x9c>)
 8000342:	f000 f9db 	bl	80006fc <puts>
	printf("Status register for Usage fault = %lx\n",((*pUFSR)&0xFFFF));
 8000346:	68fb      	ldr	r3, [r7, #12]
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	b29b      	uxth	r3, r3
 800034c:	4619      	mov	r1, r3
 800034e:	4821      	ldr	r0, [pc, #132]	; (80003d4 <UsageFault_Handler_c+0xa0>)
 8000350:	f000 f960 	bl	8000614 <iprintf>
	printf("MSP value = %p\n",pBaseStack);
 8000354:	6879      	ldr	r1, [r7, #4]
 8000356:	4820      	ldr	r0, [pc, #128]	; (80003d8 <UsageFault_Handler_c+0xa4>)
 8000358:	f000 f95c 	bl	8000614 <iprintf>
	printf("Value of r0 = %lx\n",pBaseStack[0]);
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	4619      	mov	r1, r3
 8000362:	481e      	ldr	r0, [pc, #120]	; (80003dc <UsageFault_Handler_c+0xa8>)
 8000364:	f000 f956 	bl	8000614 <iprintf>
	printf("Value of r1 = %lx\n",pBaseStack[1]);
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	3304      	adds	r3, #4
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	4619      	mov	r1, r3
 8000370:	481b      	ldr	r0, [pc, #108]	; (80003e0 <UsageFault_Handler_c+0xac>)
 8000372:	f000 f94f 	bl	8000614 <iprintf>
	printf("Value of r2 = %lx\n",pBaseStack[2]);
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	3308      	adds	r3, #8
 800037a:	681b      	ldr	r3, [r3, #0]
 800037c:	4619      	mov	r1, r3
 800037e:	4819      	ldr	r0, [pc, #100]	; (80003e4 <UsageFault_Handler_c+0xb0>)
 8000380:	f000 f948 	bl	8000614 <iprintf>
	printf("Value of r3 = %lx\n",pBaseStack[3]);
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	330c      	adds	r3, #12
 8000388:	681b      	ldr	r3, [r3, #0]
 800038a:	4619      	mov	r1, r3
 800038c:	4816      	ldr	r0, [pc, #88]	; (80003e8 <UsageFault_Handler_c+0xb4>)
 800038e:	f000 f941 	bl	8000614 <iprintf>
	printf("Value of r12 = %lx\n",pBaseStack[4]);
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	3310      	adds	r3, #16
 8000396:	681b      	ldr	r3, [r3, #0]
 8000398:	4619      	mov	r1, r3
 800039a:	4814      	ldr	r0, [pc, #80]	; (80003ec <UsageFault_Handler_c+0xb8>)
 800039c:	f000 f93a 	bl	8000614 <iprintf>
	printf("Value of LR = %lx\n",pBaseStack[5]);
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	3314      	adds	r3, #20
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	4619      	mov	r1, r3
 80003a8:	4811      	ldr	r0, [pc, #68]	; (80003f0 <UsageFault_Handler_c+0xbc>)
 80003aa:	f000 f933 	bl	8000614 <iprintf>
	printf("Value of PC = %lx\n",pBaseStack[6]);
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	3318      	adds	r3, #24
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	4619      	mov	r1, r3
 80003b6:	480f      	ldr	r0, [pc, #60]	; (80003f4 <UsageFault_Handler_c+0xc0>)
 80003b8:	f000 f92c 	bl	8000614 <iprintf>
	printf("Value of XPSR = %lx\n",pBaseStack[7]);
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	331c      	adds	r3, #28
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	4619      	mov	r1, r3
 80003c4:	480c      	ldr	r0, [pc, #48]	; (80003f8 <UsageFault_Handler_c+0xc4>)
 80003c6:	f000 f925 	bl	8000614 <iprintf>

	while(1);
 80003ca:	e7fe      	b.n	80003ca <UsageFault_Handler_c+0x96>
 80003cc:	e000ed2a 	.word	0xe000ed2a
 80003d0:	080014ec 	.word	0x080014ec
 80003d4:	08001504 	.word	0x08001504
 80003d8:	0800152c 	.word	0x0800152c
 80003dc:	0800153c 	.word	0x0800153c
 80003e0:	08001550 	.word	0x08001550
 80003e4:	08001564 	.word	0x08001564
 80003e8:	08001578 	.word	0x08001578
 80003ec:	0800158c 	.word	0x0800158c
 80003f0:	080015a0 	.word	0x080015a0
 80003f4:	080015b4 	.word	0x080015b4
 80003f8:	080015c8 	.word	0x080015c8

080003fc <HardFault_Handler>:
}

void HardFault_Handler()
{
 80003fc:	b580      	push	{r7, lr}
 80003fe:	af00      	add	r7, sp, #0
	printf("Exception: Hard fault");
 8000400:	4801      	ldr	r0, [pc, #4]	; (8000408 <HardFault_Handler+0xc>)
 8000402:	f000 f907 	bl	8000614 <iprintf>
	while(1);
 8000406:	e7fe      	b.n	8000406 <HardFault_Handler+0xa>
 8000408:	080015e0 	.word	0x080015e0

0800040c <div_test>:
}

int div_test(int x,int y)
{
 800040c:	b480      	push	{r7}
 800040e:	b083      	sub	sp, #12
 8000410:	af00      	add	r7, sp, #0
 8000412:	6078      	str	r0, [r7, #4]
 8000414:	6039      	str	r1, [r7, #0]
	return x/y;
 8000416:	687a      	ldr	r2, [r7, #4]
 8000418:	683b      	ldr	r3, [r7, #0]
 800041a:	fb92 f3f3 	sdiv	r3, r2, r3
}
 800041e:	4618      	mov	r0, r3
 8000420:	370c      	adds	r7, #12
 8000422:	46bd      	mov	sp, r7
 8000424:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000428:	4770      	bx	lr

0800042a <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800042a:	b580      	push	{r7, lr}
 800042c:	b086      	sub	sp, #24
 800042e:	af00      	add	r7, sp, #0
 8000430:	60f8      	str	r0, [r7, #12]
 8000432:	60b9      	str	r1, [r7, #8]
 8000434:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000436:	2300      	movs	r3, #0
 8000438:	617b      	str	r3, [r7, #20]
 800043a:	e00a      	b.n	8000452 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800043c:	f3af 8000 	nop.w
 8000440:	4601      	mov	r1, r0
 8000442:	68bb      	ldr	r3, [r7, #8]
 8000444:	1c5a      	adds	r2, r3, #1
 8000446:	60ba      	str	r2, [r7, #8]
 8000448:	b2ca      	uxtb	r2, r1
 800044a:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800044c:	697b      	ldr	r3, [r7, #20]
 800044e:	3301      	adds	r3, #1
 8000450:	617b      	str	r3, [r7, #20]
 8000452:	697a      	ldr	r2, [r7, #20]
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	429a      	cmp	r2, r3
 8000458:	dbf0      	blt.n	800043c <_read+0x12>
	}

return len;
 800045a:	687b      	ldr	r3, [r7, #4]
}
 800045c:	4618      	mov	r0, r3
 800045e:	3718      	adds	r7, #24
 8000460:	46bd      	mov	sp, r7
 8000462:	bd80      	pop	{r7, pc}

08000464 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000464:	b580      	push	{r7, lr}
 8000466:	b086      	sub	sp, #24
 8000468:	af00      	add	r7, sp, #0
 800046a:	60f8      	str	r0, [r7, #12]
 800046c:	60b9      	str	r1, [r7, #8]
 800046e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000470:	2300      	movs	r3, #0
 8000472:	617b      	str	r3, [r7, #20]
 8000474:	e009      	b.n	800048a <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000476:	68bb      	ldr	r3, [r7, #8]
 8000478:	1c5a      	adds	r2, r3, #1
 800047a:	60ba      	str	r2, [r7, #8]
 800047c:	781b      	ldrb	r3, [r3, #0]
 800047e:	4618      	mov	r0, r3
 8000480:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000484:	697b      	ldr	r3, [r7, #20]
 8000486:	3301      	adds	r3, #1
 8000488:	617b      	str	r3, [r7, #20]
 800048a:	697a      	ldr	r2, [r7, #20]
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	429a      	cmp	r2, r3
 8000490:	dbf1      	blt.n	8000476 <_write+0x12>
	}
	return len;
 8000492:	687b      	ldr	r3, [r7, #4]
}
 8000494:	4618      	mov	r0, r3
 8000496:	3718      	adds	r7, #24
 8000498:	46bd      	mov	sp, r7
 800049a:	bd80      	pop	{r7, pc}

0800049c <_close>:

int _close(int file)
{
 800049c:	b480      	push	{r7}
 800049e:	b083      	sub	sp, #12
 80004a0:	af00      	add	r7, sp, #0
 80004a2:	6078      	str	r0, [r7, #4]
	return -1;
 80004a4:	f04f 33ff 	mov.w	r3, #4294967295
}
 80004a8:	4618      	mov	r0, r3
 80004aa:	370c      	adds	r7, #12
 80004ac:	46bd      	mov	sp, r7
 80004ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004b2:	4770      	bx	lr

080004b4 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004b4:	b480      	push	{r7}
 80004b6:	b083      	sub	sp, #12
 80004b8:	af00      	add	r7, sp, #0
 80004ba:	6078      	str	r0, [r7, #4]
 80004bc:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80004be:	683b      	ldr	r3, [r7, #0]
 80004c0:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80004c4:	605a      	str	r2, [r3, #4]
	return 0;
 80004c6:	2300      	movs	r3, #0
}
 80004c8:	4618      	mov	r0, r3
 80004ca:	370c      	adds	r7, #12
 80004cc:	46bd      	mov	sp, r7
 80004ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d2:	4770      	bx	lr

080004d4 <_isatty>:

int _isatty(int file)
{
 80004d4:	b480      	push	{r7}
 80004d6:	b083      	sub	sp, #12
 80004d8:	af00      	add	r7, sp, #0
 80004da:	6078      	str	r0, [r7, #4]
	return 1;
 80004dc:	2301      	movs	r3, #1
}
 80004de:	4618      	mov	r0, r3
 80004e0:	370c      	adds	r7, #12
 80004e2:	46bd      	mov	sp, r7
 80004e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004e8:	4770      	bx	lr

080004ea <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004ea:	b480      	push	{r7}
 80004ec:	b085      	sub	sp, #20
 80004ee:	af00      	add	r7, sp, #0
 80004f0:	60f8      	str	r0, [r7, #12]
 80004f2:	60b9      	str	r1, [r7, #8]
 80004f4:	607a      	str	r2, [r7, #4]
	return 0;
 80004f6:	2300      	movs	r3, #0
}
 80004f8:	4618      	mov	r0, r3
 80004fa:	3714      	adds	r7, #20
 80004fc:	46bd      	mov	sp, r7
 80004fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000502:	4770      	bx	lr

08000504 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8000504:	b580      	push	{r7, lr}
 8000506:	b084      	sub	sp, #16
 8000508:	af00      	add	r7, sp, #0
 800050a:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800050c:	4b11      	ldr	r3, [pc, #68]	; (8000554 <_sbrk+0x50>)
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	2b00      	cmp	r3, #0
 8000512:	d102      	bne.n	800051a <_sbrk+0x16>
		heap_end = &end;
 8000514:	4b0f      	ldr	r3, [pc, #60]	; (8000554 <_sbrk+0x50>)
 8000516:	4a10      	ldr	r2, [pc, #64]	; (8000558 <_sbrk+0x54>)
 8000518:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 800051a:	4b0e      	ldr	r3, [pc, #56]	; (8000554 <_sbrk+0x50>)
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8000520:	4b0c      	ldr	r3, [pc, #48]	; (8000554 <_sbrk+0x50>)
 8000522:	681a      	ldr	r2, [r3, #0]
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	4413      	add	r3, r2
 8000528:	466a      	mov	r2, sp
 800052a:	4293      	cmp	r3, r2
 800052c:	d907      	bls.n	800053e <_sbrk+0x3a>
	{
		errno = ENOMEM;
 800052e:	f000 f83f 	bl	80005b0 <__errno>
 8000532:	4602      	mov	r2, r0
 8000534:	230c      	movs	r3, #12
 8000536:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 8000538:	f04f 33ff 	mov.w	r3, #4294967295
 800053c:	e006      	b.n	800054c <_sbrk+0x48>
	}

	heap_end += incr;
 800053e:	4b05      	ldr	r3, [pc, #20]	; (8000554 <_sbrk+0x50>)
 8000540:	681a      	ldr	r2, [r3, #0]
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	4413      	add	r3, r2
 8000546:	4a03      	ldr	r2, [pc, #12]	; (8000554 <_sbrk+0x50>)
 8000548:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800054a:	68fb      	ldr	r3, [r7, #12]
}
 800054c:	4618      	mov	r0, r3
 800054e:	3710      	adds	r7, #16
 8000550:	46bd      	mov	sp, r7
 8000552:	bd80      	pop	{r7, pc}
 8000554:	20000080 	.word	0x20000080
 8000558:	20000090 	.word	0x20000090

0800055c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800055c:	480d      	ldr	r0, [pc, #52]	; (8000594 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800055e:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000560:	480d      	ldr	r0, [pc, #52]	; (8000598 <LoopForever+0x6>)
  ldr r1, =_edata
 8000562:	490e      	ldr	r1, [pc, #56]	; (800059c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000564:	4a0e      	ldr	r2, [pc, #56]	; (80005a0 <LoopForever+0xe>)
  movs r3, #0
 8000566:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000568:	e002      	b.n	8000570 <LoopCopyDataInit>

0800056a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800056a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800056c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800056e:	3304      	adds	r3, #4

08000570 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000570:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000572:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000574:	d3f9      	bcc.n	800056a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000576:	4a0b      	ldr	r2, [pc, #44]	; (80005a4 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000578:	4c0b      	ldr	r4, [pc, #44]	; (80005a8 <LoopForever+0x16>)
  movs r3, #0
 800057a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800057c:	e001      	b.n	8000582 <LoopFillZerobss>

0800057e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800057e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000580:	3204      	adds	r2, #4

08000582 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000582:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000584:	d3fb      	bcc.n	800057e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000586:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800058a:	f000 f817 	bl	80005bc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800058e:	f7ff fe8f 	bl	80002b0 <main>

08000592 <LoopForever>:

LoopForever:
    b LoopForever
 8000592:	e7fe      	b.n	8000592 <LoopForever>
  ldr   r0, =_estack
 8000594:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000598:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800059c:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80005a0:	08001698 	.word	0x08001698
  ldr r2, =_sbss
 80005a4:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80005a8:	20000090 	.word	0x20000090

080005ac <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005ac:	e7fe      	b.n	80005ac <ADC_IRQHandler>
	...

080005b0 <__errno>:
 80005b0:	4b01      	ldr	r3, [pc, #4]	; (80005b8 <__errno+0x8>)
 80005b2:	6818      	ldr	r0, [r3, #0]
 80005b4:	4770      	bx	lr
 80005b6:	bf00      	nop
 80005b8:	20000000 	.word	0x20000000

080005bc <__libc_init_array>:
 80005bc:	b570      	push	{r4, r5, r6, lr}
 80005be:	4e0d      	ldr	r6, [pc, #52]	; (80005f4 <__libc_init_array+0x38>)
 80005c0:	4c0d      	ldr	r4, [pc, #52]	; (80005f8 <__libc_init_array+0x3c>)
 80005c2:	1ba4      	subs	r4, r4, r6
 80005c4:	10a4      	asrs	r4, r4, #2
 80005c6:	2500      	movs	r5, #0
 80005c8:	42a5      	cmp	r5, r4
 80005ca:	d109      	bne.n	80005e0 <__libc_init_array+0x24>
 80005cc:	4e0b      	ldr	r6, [pc, #44]	; (80005fc <__libc_init_array+0x40>)
 80005ce:	4c0c      	ldr	r4, [pc, #48]	; (8000600 <__libc_init_array+0x44>)
 80005d0:	f000 ff68 	bl	80014a4 <_init>
 80005d4:	1ba4      	subs	r4, r4, r6
 80005d6:	10a4      	asrs	r4, r4, #2
 80005d8:	2500      	movs	r5, #0
 80005da:	42a5      	cmp	r5, r4
 80005dc:	d105      	bne.n	80005ea <__libc_init_array+0x2e>
 80005de:	bd70      	pop	{r4, r5, r6, pc}
 80005e0:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005e4:	4798      	blx	r3
 80005e6:	3501      	adds	r5, #1
 80005e8:	e7ee      	b.n	80005c8 <__libc_init_array+0xc>
 80005ea:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005ee:	4798      	blx	r3
 80005f0:	3501      	adds	r5, #1
 80005f2:	e7f2      	b.n	80005da <__libc_init_array+0x1e>
 80005f4:	08001690 	.word	0x08001690
 80005f8:	08001690 	.word	0x08001690
 80005fc:	08001690 	.word	0x08001690
 8000600:	08001694 	.word	0x08001694

08000604 <memset>:
 8000604:	4402      	add	r2, r0
 8000606:	4603      	mov	r3, r0
 8000608:	4293      	cmp	r3, r2
 800060a:	d100      	bne.n	800060e <memset+0xa>
 800060c:	4770      	bx	lr
 800060e:	f803 1b01 	strb.w	r1, [r3], #1
 8000612:	e7f9      	b.n	8000608 <memset+0x4>

08000614 <iprintf>:
 8000614:	b40f      	push	{r0, r1, r2, r3}
 8000616:	4b0a      	ldr	r3, [pc, #40]	; (8000640 <iprintf+0x2c>)
 8000618:	b513      	push	{r0, r1, r4, lr}
 800061a:	681c      	ldr	r4, [r3, #0]
 800061c:	b124      	cbz	r4, 8000628 <iprintf+0x14>
 800061e:	69a3      	ldr	r3, [r4, #24]
 8000620:	b913      	cbnz	r3, 8000628 <iprintf+0x14>
 8000622:	4620      	mov	r0, r4
 8000624:	f000 fa22 	bl	8000a6c <__sinit>
 8000628:	ab05      	add	r3, sp, #20
 800062a:	9a04      	ldr	r2, [sp, #16]
 800062c:	68a1      	ldr	r1, [r4, #8]
 800062e:	9301      	str	r3, [sp, #4]
 8000630:	4620      	mov	r0, r4
 8000632:	f000 fbdb 	bl	8000dec <_vfiprintf_r>
 8000636:	b002      	add	sp, #8
 8000638:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800063c:	b004      	add	sp, #16
 800063e:	4770      	bx	lr
 8000640:	20000000 	.word	0x20000000

08000644 <_puts_r>:
 8000644:	b570      	push	{r4, r5, r6, lr}
 8000646:	460e      	mov	r6, r1
 8000648:	4605      	mov	r5, r0
 800064a:	b118      	cbz	r0, 8000654 <_puts_r+0x10>
 800064c:	6983      	ldr	r3, [r0, #24]
 800064e:	b90b      	cbnz	r3, 8000654 <_puts_r+0x10>
 8000650:	f000 fa0c 	bl	8000a6c <__sinit>
 8000654:	69ab      	ldr	r3, [r5, #24]
 8000656:	68ac      	ldr	r4, [r5, #8]
 8000658:	b913      	cbnz	r3, 8000660 <_puts_r+0x1c>
 800065a:	4628      	mov	r0, r5
 800065c:	f000 fa06 	bl	8000a6c <__sinit>
 8000660:	4b23      	ldr	r3, [pc, #140]	; (80006f0 <_puts_r+0xac>)
 8000662:	429c      	cmp	r4, r3
 8000664:	d117      	bne.n	8000696 <_puts_r+0x52>
 8000666:	686c      	ldr	r4, [r5, #4]
 8000668:	89a3      	ldrh	r3, [r4, #12]
 800066a:	071b      	lsls	r3, r3, #28
 800066c:	d51d      	bpl.n	80006aa <_puts_r+0x66>
 800066e:	6923      	ldr	r3, [r4, #16]
 8000670:	b1db      	cbz	r3, 80006aa <_puts_r+0x66>
 8000672:	3e01      	subs	r6, #1
 8000674:	68a3      	ldr	r3, [r4, #8]
 8000676:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800067a:	3b01      	subs	r3, #1
 800067c:	60a3      	str	r3, [r4, #8]
 800067e:	b9e9      	cbnz	r1, 80006bc <_puts_r+0x78>
 8000680:	2b00      	cmp	r3, #0
 8000682:	da2e      	bge.n	80006e2 <_puts_r+0x9e>
 8000684:	4622      	mov	r2, r4
 8000686:	210a      	movs	r1, #10
 8000688:	4628      	mov	r0, r5
 800068a:	f000 f83f 	bl	800070c <__swbuf_r>
 800068e:	3001      	adds	r0, #1
 8000690:	d011      	beq.n	80006b6 <_puts_r+0x72>
 8000692:	200a      	movs	r0, #10
 8000694:	e011      	b.n	80006ba <_puts_r+0x76>
 8000696:	4b17      	ldr	r3, [pc, #92]	; (80006f4 <_puts_r+0xb0>)
 8000698:	429c      	cmp	r4, r3
 800069a:	d101      	bne.n	80006a0 <_puts_r+0x5c>
 800069c:	68ac      	ldr	r4, [r5, #8]
 800069e:	e7e3      	b.n	8000668 <_puts_r+0x24>
 80006a0:	4b15      	ldr	r3, [pc, #84]	; (80006f8 <_puts_r+0xb4>)
 80006a2:	429c      	cmp	r4, r3
 80006a4:	bf08      	it	eq
 80006a6:	68ec      	ldreq	r4, [r5, #12]
 80006a8:	e7de      	b.n	8000668 <_puts_r+0x24>
 80006aa:	4621      	mov	r1, r4
 80006ac:	4628      	mov	r0, r5
 80006ae:	f000 f87f 	bl	80007b0 <__swsetup_r>
 80006b2:	2800      	cmp	r0, #0
 80006b4:	d0dd      	beq.n	8000672 <_puts_r+0x2e>
 80006b6:	f04f 30ff 	mov.w	r0, #4294967295
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	2b00      	cmp	r3, #0
 80006be:	da04      	bge.n	80006ca <_puts_r+0x86>
 80006c0:	69a2      	ldr	r2, [r4, #24]
 80006c2:	429a      	cmp	r2, r3
 80006c4:	dc06      	bgt.n	80006d4 <_puts_r+0x90>
 80006c6:	290a      	cmp	r1, #10
 80006c8:	d004      	beq.n	80006d4 <_puts_r+0x90>
 80006ca:	6823      	ldr	r3, [r4, #0]
 80006cc:	1c5a      	adds	r2, r3, #1
 80006ce:	6022      	str	r2, [r4, #0]
 80006d0:	7019      	strb	r1, [r3, #0]
 80006d2:	e7cf      	b.n	8000674 <_puts_r+0x30>
 80006d4:	4622      	mov	r2, r4
 80006d6:	4628      	mov	r0, r5
 80006d8:	f000 f818 	bl	800070c <__swbuf_r>
 80006dc:	3001      	adds	r0, #1
 80006de:	d1c9      	bne.n	8000674 <_puts_r+0x30>
 80006e0:	e7e9      	b.n	80006b6 <_puts_r+0x72>
 80006e2:	6823      	ldr	r3, [r4, #0]
 80006e4:	200a      	movs	r0, #10
 80006e6:	1c5a      	adds	r2, r3, #1
 80006e8:	6022      	str	r2, [r4, #0]
 80006ea:	7018      	strb	r0, [r3, #0]
 80006ec:	e7e5      	b.n	80006ba <_puts_r+0x76>
 80006ee:	bf00      	nop
 80006f0:	0800161c 	.word	0x0800161c
 80006f4:	0800163c 	.word	0x0800163c
 80006f8:	080015fc 	.word	0x080015fc

080006fc <puts>:
 80006fc:	4b02      	ldr	r3, [pc, #8]	; (8000708 <puts+0xc>)
 80006fe:	4601      	mov	r1, r0
 8000700:	6818      	ldr	r0, [r3, #0]
 8000702:	f7ff bf9f 	b.w	8000644 <_puts_r>
 8000706:	bf00      	nop
 8000708:	20000000 	.word	0x20000000

0800070c <__swbuf_r>:
 800070c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800070e:	460e      	mov	r6, r1
 8000710:	4614      	mov	r4, r2
 8000712:	4605      	mov	r5, r0
 8000714:	b118      	cbz	r0, 800071e <__swbuf_r+0x12>
 8000716:	6983      	ldr	r3, [r0, #24]
 8000718:	b90b      	cbnz	r3, 800071e <__swbuf_r+0x12>
 800071a:	f000 f9a7 	bl	8000a6c <__sinit>
 800071e:	4b21      	ldr	r3, [pc, #132]	; (80007a4 <__swbuf_r+0x98>)
 8000720:	429c      	cmp	r4, r3
 8000722:	d12a      	bne.n	800077a <__swbuf_r+0x6e>
 8000724:	686c      	ldr	r4, [r5, #4]
 8000726:	69a3      	ldr	r3, [r4, #24]
 8000728:	60a3      	str	r3, [r4, #8]
 800072a:	89a3      	ldrh	r3, [r4, #12]
 800072c:	071a      	lsls	r2, r3, #28
 800072e:	d52e      	bpl.n	800078e <__swbuf_r+0x82>
 8000730:	6923      	ldr	r3, [r4, #16]
 8000732:	b363      	cbz	r3, 800078e <__swbuf_r+0x82>
 8000734:	6923      	ldr	r3, [r4, #16]
 8000736:	6820      	ldr	r0, [r4, #0]
 8000738:	1ac0      	subs	r0, r0, r3
 800073a:	6963      	ldr	r3, [r4, #20]
 800073c:	b2f6      	uxtb	r6, r6
 800073e:	4283      	cmp	r3, r0
 8000740:	4637      	mov	r7, r6
 8000742:	dc04      	bgt.n	800074e <__swbuf_r+0x42>
 8000744:	4621      	mov	r1, r4
 8000746:	4628      	mov	r0, r5
 8000748:	f000 f926 	bl	8000998 <_fflush_r>
 800074c:	bb28      	cbnz	r0, 800079a <__swbuf_r+0x8e>
 800074e:	68a3      	ldr	r3, [r4, #8]
 8000750:	3b01      	subs	r3, #1
 8000752:	60a3      	str	r3, [r4, #8]
 8000754:	6823      	ldr	r3, [r4, #0]
 8000756:	1c5a      	adds	r2, r3, #1
 8000758:	6022      	str	r2, [r4, #0]
 800075a:	701e      	strb	r6, [r3, #0]
 800075c:	6963      	ldr	r3, [r4, #20]
 800075e:	3001      	adds	r0, #1
 8000760:	4283      	cmp	r3, r0
 8000762:	d004      	beq.n	800076e <__swbuf_r+0x62>
 8000764:	89a3      	ldrh	r3, [r4, #12]
 8000766:	07db      	lsls	r3, r3, #31
 8000768:	d519      	bpl.n	800079e <__swbuf_r+0x92>
 800076a:	2e0a      	cmp	r6, #10
 800076c:	d117      	bne.n	800079e <__swbuf_r+0x92>
 800076e:	4621      	mov	r1, r4
 8000770:	4628      	mov	r0, r5
 8000772:	f000 f911 	bl	8000998 <_fflush_r>
 8000776:	b190      	cbz	r0, 800079e <__swbuf_r+0x92>
 8000778:	e00f      	b.n	800079a <__swbuf_r+0x8e>
 800077a:	4b0b      	ldr	r3, [pc, #44]	; (80007a8 <__swbuf_r+0x9c>)
 800077c:	429c      	cmp	r4, r3
 800077e:	d101      	bne.n	8000784 <__swbuf_r+0x78>
 8000780:	68ac      	ldr	r4, [r5, #8]
 8000782:	e7d0      	b.n	8000726 <__swbuf_r+0x1a>
 8000784:	4b09      	ldr	r3, [pc, #36]	; (80007ac <__swbuf_r+0xa0>)
 8000786:	429c      	cmp	r4, r3
 8000788:	bf08      	it	eq
 800078a:	68ec      	ldreq	r4, [r5, #12]
 800078c:	e7cb      	b.n	8000726 <__swbuf_r+0x1a>
 800078e:	4621      	mov	r1, r4
 8000790:	4628      	mov	r0, r5
 8000792:	f000 f80d 	bl	80007b0 <__swsetup_r>
 8000796:	2800      	cmp	r0, #0
 8000798:	d0cc      	beq.n	8000734 <__swbuf_r+0x28>
 800079a:	f04f 37ff 	mov.w	r7, #4294967295
 800079e:	4638      	mov	r0, r7
 80007a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007a2:	bf00      	nop
 80007a4:	0800161c 	.word	0x0800161c
 80007a8:	0800163c 	.word	0x0800163c
 80007ac:	080015fc 	.word	0x080015fc

080007b0 <__swsetup_r>:
 80007b0:	4b32      	ldr	r3, [pc, #200]	; (800087c <__swsetup_r+0xcc>)
 80007b2:	b570      	push	{r4, r5, r6, lr}
 80007b4:	681d      	ldr	r5, [r3, #0]
 80007b6:	4606      	mov	r6, r0
 80007b8:	460c      	mov	r4, r1
 80007ba:	b125      	cbz	r5, 80007c6 <__swsetup_r+0x16>
 80007bc:	69ab      	ldr	r3, [r5, #24]
 80007be:	b913      	cbnz	r3, 80007c6 <__swsetup_r+0x16>
 80007c0:	4628      	mov	r0, r5
 80007c2:	f000 f953 	bl	8000a6c <__sinit>
 80007c6:	4b2e      	ldr	r3, [pc, #184]	; (8000880 <__swsetup_r+0xd0>)
 80007c8:	429c      	cmp	r4, r3
 80007ca:	d10f      	bne.n	80007ec <__swsetup_r+0x3c>
 80007cc:	686c      	ldr	r4, [r5, #4]
 80007ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007d2:	b29a      	uxth	r2, r3
 80007d4:	0715      	lsls	r5, r2, #28
 80007d6:	d42c      	bmi.n	8000832 <__swsetup_r+0x82>
 80007d8:	06d0      	lsls	r0, r2, #27
 80007da:	d411      	bmi.n	8000800 <__swsetup_r+0x50>
 80007dc:	2209      	movs	r2, #9
 80007de:	6032      	str	r2, [r6, #0]
 80007e0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80007e4:	81a3      	strh	r3, [r4, #12]
 80007e6:	f04f 30ff 	mov.w	r0, #4294967295
 80007ea:	e03e      	b.n	800086a <__swsetup_r+0xba>
 80007ec:	4b25      	ldr	r3, [pc, #148]	; (8000884 <__swsetup_r+0xd4>)
 80007ee:	429c      	cmp	r4, r3
 80007f0:	d101      	bne.n	80007f6 <__swsetup_r+0x46>
 80007f2:	68ac      	ldr	r4, [r5, #8]
 80007f4:	e7eb      	b.n	80007ce <__swsetup_r+0x1e>
 80007f6:	4b24      	ldr	r3, [pc, #144]	; (8000888 <__swsetup_r+0xd8>)
 80007f8:	429c      	cmp	r4, r3
 80007fa:	bf08      	it	eq
 80007fc:	68ec      	ldreq	r4, [r5, #12]
 80007fe:	e7e6      	b.n	80007ce <__swsetup_r+0x1e>
 8000800:	0751      	lsls	r1, r2, #29
 8000802:	d512      	bpl.n	800082a <__swsetup_r+0x7a>
 8000804:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000806:	b141      	cbz	r1, 800081a <__swsetup_r+0x6a>
 8000808:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800080c:	4299      	cmp	r1, r3
 800080e:	d002      	beq.n	8000816 <__swsetup_r+0x66>
 8000810:	4630      	mov	r0, r6
 8000812:	f000 fa19 	bl	8000c48 <_free_r>
 8000816:	2300      	movs	r3, #0
 8000818:	6363      	str	r3, [r4, #52]	; 0x34
 800081a:	89a3      	ldrh	r3, [r4, #12]
 800081c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000820:	81a3      	strh	r3, [r4, #12]
 8000822:	2300      	movs	r3, #0
 8000824:	6063      	str	r3, [r4, #4]
 8000826:	6923      	ldr	r3, [r4, #16]
 8000828:	6023      	str	r3, [r4, #0]
 800082a:	89a3      	ldrh	r3, [r4, #12]
 800082c:	f043 0308 	orr.w	r3, r3, #8
 8000830:	81a3      	strh	r3, [r4, #12]
 8000832:	6923      	ldr	r3, [r4, #16]
 8000834:	b94b      	cbnz	r3, 800084a <__swsetup_r+0x9a>
 8000836:	89a3      	ldrh	r3, [r4, #12]
 8000838:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800083c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000840:	d003      	beq.n	800084a <__swsetup_r+0x9a>
 8000842:	4621      	mov	r1, r4
 8000844:	4630      	mov	r0, r6
 8000846:	f000 f9bf 	bl	8000bc8 <__smakebuf_r>
 800084a:	89a2      	ldrh	r2, [r4, #12]
 800084c:	f012 0301 	ands.w	r3, r2, #1
 8000850:	d00c      	beq.n	800086c <__swsetup_r+0xbc>
 8000852:	2300      	movs	r3, #0
 8000854:	60a3      	str	r3, [r4, #8]
 8000856:	6963      	ldr	r3, [r4, #20]
 8000858:	425b      	negs	r3, r3
 800085a:	61a3      	str	r3, [r4, #24]
 800085c:	6923      	ldr	r3, [r4, #16]
 800085e:	b953      	cbnz	r3, 8000876 <__swsetup_r+0xc6>
 8000860:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000864:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8000868:	d1ba      	bne.n	80007e0 <__swsetup_r+0x30>
 800086a:	bd70      	pop	{r4, r5, r6, pc}
 800086c:	0792      	lsls	r2, r2, #30
 800086e:	bf58      	it	pl
 8000870:	6963      	ldrpl	r3, [r4, #20]
 8000872:	60a3      	str	r3, [r4, #8]
 8000874:	e7f2      	b.n	800085c <__swsetup_r+0xac>
 8000876:	2000      	movs	r0, #0
 8000878:	e7f7      	b.n	800086a <__swsetup_r+0xba>
 800087a:	bf00      	nop
 800087c:	20000000 	.word	0x20000000
 8000880:	0800161c 	.word	0x0800161c
 8000884:	0800163c 	.word	0x0800163c
 8000888:	080015fc 	.word	0x080015fc

0800088c <__sflush_r>:
 800088c:	898a      	ldrh	r2, [r1, #12]
 800088e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000892:	4605      	mov	r5, r0
 8000894:	0710      	lsls	r0, r2, #28
 8000896:	460c      	mov	r4, r1
 8000898:	d458      	bmi.n	800094c <__sflush_r+0xc0>
 800089a:	684b      	ldr	r3, [r1, #4]
 800089c:	2b00      	cmp	r3, #0
 800089e:	dc05      	bgt.n	80008ac <__sflush_r+0x20>
 80008a0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80008a2:	2b00      	cmp	r3, #0
 80008a4:	dc02      	bgt.n	80008ac <__sflush_r+0x20>
 80008a6:	2000      	movs	r0, #0
 80008a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80008ac:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008ae:	2e00      	cmp	r6, #0
 80008b0:	d0f9      	beq.n	80008a6 <__sflush_r+0x1a>
 80008b2:	2300      	movs	r3, #0
 80008b4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80008b8:	682f      	ldr	r7, [r5, #0]
 80008ba:	6a21      	ldr	r1, [r4, #32]
 80008bc:	602b      	str	r3, [r5, #0]
 80008be:	d032      	beq.n	8000926 <__sflush_r+0x9a>
 80008c0:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80008c2:	89a3      	ldrh	r3, [r4, #12]
 80008c4:	075a      	lsls	r2, r3, #29
 80008c6:	d505      	bpl.n	80008d4 <__sflush_r+0x48>
 80008c8:	6863      	ldr	r3, [r4, #4]
 80008ca:	1ac0      	subs	r0, r0, r3
 80008cc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80008ce:	b10b      	cbz	r3, 80008d4 <__sflush_r+0x48>
 80008d0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80008d2:	1ac0      	subs	r0, r0, r3
 80008d4:	2300      	movs	r3, #0
 80008d6:	4602      	mov	r2, r0
 80008d8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008da:	6a21      	ldr	r1, [r4, #32]
 80008dc:	4628      	mov	r0, r5
 80008de:	47b0      	blx	r6
 80008e0:	1c43      	adds	r3, r0, #1
 80008e2:	89a3      	ldrh	r3, [r4, #12]
 80008e4:	d106      	bne.n	80008f4 <__sflush_r+0x68>
 80008e6:	6829      	ldr	r1, [r5, #0]
 80008e8:	291d      	cmp	r1, #29
 80008ea:	d848      	bhi.n	800097e <__sflush_r+0xf2>
 80008ec:	4a29      	ldr	r2, [pc, #164]	; (8000994 <__sflush_r+0x108>)
 80008ee:	40ca      	lsrs	r2, r1
 80008f0:	07d6      	lsls	r6, r2, #31
 80008f2:	d544      	bpl.n	800097e <__sflush_r+0xf2>
 80008f4:	2200      	movs	r2, #0
 80008f6:	6062      	str	r2, [r4, #4]
 80008f8:	04d9      	lsls	r1, r3, #19
 80008fa:	6922      	ldr	r2, [r4, #16]
 80008fc:	6022      	str	r2, [r4, #0]
 80008fe:	d504      	bpl.n	800090a <__sflush_r+0x7e>
 8000900:	1c42      	adds	r2, r0, #1
 8000902:	d101      	bne.n	8000908 <__sflush_r+0x7c>
 8000904:	682b      	ldr	r3, [r5, #0]
 8000906:	b903      	cbnz	r3, 800090a <__sflush_r+0x7e>
 8000908:	6560      	str	r0, [r4, #84]	; 0x54
 800090a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800090c:	602f      	str	r7, [r5, #0]
 800090e:	2900      	cmp	r1, #0
 8000910:	d0c9      	beq.n	80008a6 <__sflush_r+0x1a>
 8000912:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000916:	4299      	cmp	r1, r3
 8000918:	d002      	beq.n	8000920 <__sflush_r+0x94>
 800091a:	4628      	mov	r0, r5
 800091c:	f000 f994 	bl	8000c48 <_free_r>
 8000920:	2000      	movs	r0, #0
 8000922:	6360      	str	r0, [r4, #52]	; 0x34
 8000924:	e7c0      	b.n	80008a8 <__sflush_r+0x1c>
 8000926:	2301      	movs	r3, #1
 8000928:	4628      	mov	r0, r5
 800092a:	47b0      	blx	r6
 800092c:	1c41      	adds	r1, r0, #1
 800092e:	d1c8      	bne.n	80008c2 <__sflush_r+0x36>
 8000930:	682b      	ldr	r3, [r5, #0]
 8000932:	2b00      	cmp	r3, #0
 8000934:	d0c5      	beq.n	80008c2 <__sflush_r+0x36>
 8000936:	2b1d      	cmp	r3, #29
 8000938:	d001      	beq.n	800093e <__sflush_r+0xb2>
 800093a:	2b16      	cmp	r3, #22
 800093c:	d101      	bne.n	8000942 <__sflush_r+0xb6>
 800093e:	602f      	str	r7, [r5, #0]
 8000940:	e7b1      	b.n	80008a6 <__sflush_r+0x1a>
 8000942:	89a3      	ldrh	r3, [r4, #12]
 8000944:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000948:	81a3      	strh	r3, [r4, #12]
 800094a:	e7ad      	b.n	80008a8 <__sflush_r+0x1c>
 800094c:	690f      	ldr	r7, [r1, #16]
 800094e:	2f00      	cmp	r7, #0
 8000950:	d0a9      	beq.n	80008a6 <__sflush_r+0x1a>
 8000952:	0793      	lsls	r3, r2, #30
 8000954:	680e      	ldr	r6, [r1, #0]
 8000956:	bf08      	it	eq
 8000958:	694b      	ldreq	r3, [r1, #20]
 800095a:	600f      	str	r7, [r1, #0]
 800095c:	bf18      	it	ne
 800095e:	2300      	movne	r3, #0
 8000960:	eba6 0807 	sub.w	r8, r6, r7
 8000964:	608b      	str	r3, [r1, #8]
 8000966:	f1b8 0f00 	cmp.w	r8, #0
 800096a:	dd9c      	ble.n	80008a6 <__sflush_r+0x1a>
 800096c:	4643      	mov	r3, r8
 800096e:	463a      	mov	r2, r7
 8000970:	6a21      	ldr	r1, [r4, #32]
 8000972:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000974:	4628      	mov	r0, r5
 8000976:	47b0      	blx	r6
 8000978:	2800      	cmp	r0, #0
 800097a:	dc06      	bgt.n	800098a <__sflush_r+0xfe>
 800097c:	89a3      	ldrh	r3, [r4, #12]
 800097e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000982:	81a3      	strh	r3, [r4, #12]
 8000984:	f04f 30ff 	mov.w	r0, #4294967295
 8000988:	e78e      	b.n	80008a8 <__sflush_r+0x1c>
 800098a:	4407      	add	r7, r0
 800098c:	eba8 0800 	sub.w	r8, r8, r0
 8000990:	e7e9      	b.n	8000966 <__sflush_r+0xda>
 8000992:	bf00      	nop
 8000994:	20400001 	.word	0x20400001

08000998 <_fflush_r>:
 8000998:	b538      	push	{r3, r4, r5, lr}
 800099a:	690b      	ldr	r3, [r1, #16]
 800099c:	4605      	mov	r5, r0
 800099e:	460c      	mov	r4, r1
 80009a0:	b1db      	cbz	r3, 80009da <_fflush_r+0x42>
 80009a2:	b118      	cbz	r0, 80009ac <_fflush_r+0x14>
 80009a4:	6983      	ldr	r3, [r0, #24]
 80009a6:	b90b      	cbnz	r3, 80009ac <_fflush_r+0x14>
 80009a8:	f000 f860 	bl	8000a6c <__sinit>
 80009ac:	4b0c      	ldr	r3, [pc, #48]	; (80009e0 <_fflush_r+0x48>)
 80009ae:	429c      	cmp	r4, r3
 80009b0:	d109      	bne.n	80009c6 <_fflush_r+0x2e>
 80009b2:	686c      	ldr	r4, [r5, #4]
 80009b4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80009b8:	b17b      	cbz	r3, 80009da <_fflush_r+0x42>
 80009ba:	4621      	mov	r1, r4
 80009bc:	4628      	mov	r0, r5
 80009be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80009c2:	f7ff bf63 	b.w	800088c <__sflush_r>
 80009c6:	4b07      	ldr	r3, [pc, #28]	; (80009e4 <_fflush_r+0x4c>)
 80009c8:	429c      	cmp	r4, r3
 80009ca:	d101      	bne.n	80009d0 <_fflush_r+0x38>
 80009cc:	68ac      	ldr	r4, [r5, #8]
 80009ce:	e7f1      	b.n	80009b4 <_fflush_r+0x1c>
 80009d0:	4b05      	ldr	r3, [pc, #20]	; (80009e8 <_fflush_r+0x50>)
 80009d2:	429c      	cmp	r4, r3
 80009d4:	bf08      	it	eq
 80009d6:	68ec      	ldreq	r4, [r5, #12]
 80009d8:	e7ec      	b.n	80009b4 <_fflush_r+0x1c>
 80009da:	2000      	movs	r0, #0
 80009dc:	bd38      	pop	{r3, r4, r5, pc}
 80009de:	bf00      	nop
 80009e0:	0800161c 	.word	0x0800161c
 80009e4:	0800163c 	.word	0x0800163c
 80009e8:	080015fc 	.word	0x080015fc

080009ec <std>:
 80009ec:	2300      	movs	r3, #0
 80009ee:	b510      	push	{r4, lr}
 80009f0:	4604      	mov	r4, r0
 80009f2:	e9c0 3300 	strd	r3, r3, [r0]
 80009f6:	6083      	str	r3, [r0, #8]
 80009f8:	8181      	strh	r1, [r0, #12]
 80009fa:	6643      	str	r3, [r0, #100]	; 0x64
 80009fc:	81c2      	strh	r2, [r0, #14]
 80009fe:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000a02:	6183      	str	r3, [r0, #24]
 8000a04:	4619      	mov	r1, r3
 8000a06:	2208      	movs	r2, #8
 8000a08:	305c      	adds	r0, #92	; 0x5c
 8000a0a:	f7ff fdfb 	bl	8000604 <memset>
 8000a0e:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <std+0x38>)
 8000a10:	6263      	str	r3, [r4, #36]	; 0x24
 8000a12:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <std+0x3c>)
 8000a14:	62a3      	str	r3, [r4, #40]	; 0x28
 8000a16:	4b05      	ldr	r3, [pc, #20]	; (8000a2c <std+0x40>)
 8000a18:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a1a:	4b05      	ldr	r3, [pc, #20]	; (8000a30 <std+0x44>)
 8000a1c:	6224      	str	r4, [r4, #32]
 8000a1e:	6323      	str	r3, [r4, #48]	; 0x30
 8000a20:	bd10      	pop	{r4, pc}
 8000a22:	bf00      	nop
 8000a24:	08001349 	.word	0x08001349
 8000a28:	0800136b 	.word	0x0800136b
 8000a2c:	080013a3 	.word	0x080013a3
 8000a30:	080013c7 	.word	0x080013c7

08000a34 <_cleanup_r>:
 8000a34:	4901      	ldr	r1, [pc, #4]	; (8000a3c <_cleanup_r+0x8>)
 8000a36:	f000 b885 	b.w	8000b44 <_fwalk_reent>
 8000a3a:	bf00      	nop
 8000a3c:	08000999 	.word	0x08000999

08000a40 <__sfmoreglue>:
 8000a40:	b570      	push	{r4, r5, r6, lr}
 8000a42:	1e4a      	subs	r2, r1, #1
 8000a44:	2568      	movs	r5, #104	; 0x68
 8000a46:	4355      	muls	r5, r2
 8000a48:	460e      	mov	r6, r1
 8000a4a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000a4e:	f000 f949 	bl	8000ce4 <_malloc_r>
 8000a52:	4604      	mov	r4, r0
 8000a54:	b140      	cbz	r0, 8000a68 <__sfmoreglue+0x28>
 8000a56:	2100      	movs	r1, #0
 8000a58:	e9c0 1600 	strd	r1, r6, [r0]
 8000a5c:	300c      	adds	r0, #12
 8000a5e:	60a0      	str	r0, [r4, #8]
 8000a60:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000a64:	f7ff fdce 	bl	8000604 <memset>
 8000a68:	4620      	mov	r0, r4
 8000a6a:	bd70      	pop	{r4, r5, r6, pc}

08000a6c <__sinit>:
 8000a6c:	6983      	ldr	r3, [r0, #24]
 8000a6e:	b510      	push	{r4, lr}
 8000a70:	4604      	mov	r4, r0
 8000a72:	bb33      	cbnz	r3, 8000ac2 <__sinit+0x56>
 8000a74:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000a78:	6503      	str	r3, [r0, #80]	; 0x50
 8000a7a:	4b12      	ldr	r3, [pc, #72]	; (8000ac4 <__sinit+0x58>)
 8000a7c:	4a12      	ldr	r2, [pc, #72]	; (8000ac8 <__sinit+0x5c>)
 8000a7e:	681b      	ldr	r3, [r3, #0]
 8000a80:	6282      	str	r2, [r0, #40]	; 0x28
 8000a82:	4298      	cmp	r0, r3
 8000a84:	bf04      	itt	eq
 8000a86:	2301      	moveq	r3, #1
 8000a88:	6183      	streq	r3, [r0, #24]
 8000a8a:	f000 f81f 	bl	8000acc <__sfp>
 8000a8e:	6060      	str	r0, [r4, #4]
 8000a90:	4620      	mov	r0, r4
 8000a92:	f000 f81b 	bl	8000acc <__sfp>
 8000a96:	60a0      	str	r0, [r4, #8]
 8000a98:	4620      	mov	r0, r4
 8000a9a:	f000 f817 	bl	8000acc <__sfp>
 8000a9e:	2200      	movs	r2, #0
 8000aa0:	60e0      	str	r0, [r4, #12]
 8000aa2:	2104      	movs	r1, #4
 8000aa4:	6860      	ldr	r0, [r4, #4]
 8000aa6:	f7ff ffa1 	bl	80009ec <std>
 8000aaa:	2201      	movs	r2, #1
 8000aac:	2109      	movs	r1, #9
 8000aae:	68a0      	ldr	r0, [r4, #8]
 8000ab0:	f7ff ff9c 	bl	80009ec <std>
 8000ab4:	2202      	movs	r2, #2
 8000ab6:	2112      	movs	r1, #18
 8000ab8:	68e0      	ldr	r0, [r4, #12]
 8000aba:	f7ff ff97 	bl	80009ec <std>
 8000abe:	2301      	movs	r3, #1
 8000ac0:	61a3      	str	r3, [r4, #24]
 8000ac2:	bd10      	pop	{r4, pc}
 8000ac4:	080015f8 	.word	0x080015f8
 8000ac8:	08000a35 	.word	0x08000a35

08000acc <__sfp>:
 8000acc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ace:	4b1b      	ldr	r3, [pc, #108]	; (8000b3c <__sfp+0x70>)
 8000ad0:	681e      	ldr	r6, [r3, #0]
 8000ad2:	69b3      	ldr	r3, [r6, #24]
 8000ad4:	4607      	mov	r7, r0
 8000ad6:	b913      	cbnz	r3, 8000ade <__sfp+0x12>
 8000ad8:	4630      	mov	r0, r6
 8000ada:	f7ff ffc7 	bl	8000a6c <__sinit>
 8000ade:	3648      	adds	r6, #72	; 0x48
 8000ae0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000ae4:	3b01      	subs	r3, #1
 8000ae6:	d503      	bpl.n	8000af0 <__sfp+0x24>
 8000ae8:	6833      	ldr	r3, [r6, #0]
 8000aea:	b133      	cbz	r3, 8000afa <__sfp+0x2e>
 8000aec:	6836      	ldr	r6, [r6, #0]
 8000aee:	e7f7      	b.n	8000ae0 <__sfp+0x14>
 8000af0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000af4:	b16d      	cbz	r5, 8000b12 <__sfp+0x46>
 8000af6:	3468      	adds	r4, #104	; 0x68
 8000af8:	e7f4      	b.n	8000ae4 <__sfp+0x18>
 8000afa:	2104      	movs	r1, #4
 8000afc:	4638      	mov	r0, r7
 8000afe:	f7ff ff9f 	bl	8000a40 <__sfmoreglue>
 8000b02:	6030      	str	r0, [r6, #0]
 8000b04:	2800      	cmp	r0, #0
 8000b06:	d1f1      	bne.n	8000aec <__sfp+0x20>
 8000b08:	230c      	movs	r3, #12
 8000b0a:	603b      	str	r3, [r7, #0]
 8000b0c:	4604      	mov	r4, r0
 8000b0e:	4620      	mov	r0, r4
 8000b10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b12:	4b0b      	ldr	r3, [pc, #44]	; (8000b40 <__sfp+0x74>)
 8000b14:	6665      	str	r5, [r4, #100]	; 0x64
 8000b16:	e9c4 5500 	strd	r5, r5, [r4]
 8000b1a:	60a5      	str	r5, [r4, #8]
 8000b1c:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000b20:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000b24:	2208      	movs	r2, #8
 8000b26:	4629      	mov	r1, r5
 8000b28:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000b2c:	f7ff fd6a 	bl	8000604 <memset>
 8000b30:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000b34:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000b38:	e7e9      	b.n	8000b0e <__sfp+0x42>
 8000b3a:	bf00      	nop
 8000b3c:	080015f8 	.word	0x080015f8
 8000b40:	ffff0001 	.word	0xffff0001

08000b44 <_fwalk_reent>:
 8000b44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b48:	4680      	mov	r8, r0
 8000b4a:	4689      	mov	r9, r1
 8000b4c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000b50:	2600      	movs	r6, #0
 8000b52:	b914      	cbnz	r4, 8000b5a <_fwalk_reent+0x16>
 8000b54:	4630      	mov	r0, r6
 8000b56:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b5a:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000b5e:	3f01      	subs	r7, #1
 8000b60:	d501      	bpl.n	8000b66 <_fwalk_reent+0x22>
 8000b62:	6824      	ldr	r4, [r4, #0]
 8000b64:	e7f5      	b.n	8000b52 <_fwalk_reent+0xe>
 8000b66:	89ab      	ldrh	r3, [r5, #12]
 8000b68:	2b01      	cmp	r3, #1
 8000b6a:	d907      	bls.n	8000b7c <_fwalk_reent+0x38>
 8000b6c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000b70:	3301      	adds	r3, #1
 8000b72:	d003      	beq.n	8000b7c <_fwalk_reent+0x38>
 8000b74:	4629      	mov	r1, r5
 8000b76:	4640      	mov	r0, r8
 8000b78:	47c8      	blx	r9
 8000b7a:	4306      	orrs	r6, r0
 8000b7c:	3568      	adds	r5, #104	; 0x68
 8000b7e:	e7ee      	b.n	8000b5e <_fwalk_reent+0x1a>

08000b80 <__swhatbuf_r>:
 8000b80:	b570      	push	{r4, r5, r6, lr}
 8000b82:	460e      	mov	r6, r1
 8000b84:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b88:	2900      	cmp	r1, #0
 8000b8a:	b096      	sub	sp, #88	; 0x58
 8000b8c:	4614      	mov	r4, r2
 8000b8e:	461d      	mov	r5, r3
 8000b90:	da07      	bge.n	8000ba2 <__swhatbuf_r+0x22>
 8000b92:	2300      	movs	r3, #0
 8000b94:	602b      	str	r3, [r5, #0]
 8000b96:	89b3      	ldrh	r3, [r6, #12]
 8000b98:	061a      	lsls	r2, r3, #24
 8000b9a:	d410      	bmi.n	8000bbe <__swhatbuf_r+0x3e>
 8000b9c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000ba0:	e00e      	b.n	8000bc0 <__swhatbuf_r+0x40>
 8000ba2:	466a      	mov	r2, sp
 8000ba4:	f000 fc36 	bl	8001414 <_fstat_r>
 8000ba8:	2800      	cmp	r0, #0
 8000baa:	dbf2      	blt.n	8000b92 <__swhatbuf_r+0x12>
 8000bac:	9a01      	ldr	r2, [sp, #4]
 8000bae:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000bb2:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000bb6:	425a      	negs	r2, r3
 8000bb8:	415a      	adcs	r2, r3
 8000bba:	602a      	str	r2, [r5, #0]
 8000bbc:	e7ee      	b.n	8000b9c <__swhatbuf_r+0x1c>
 8000bbe:	2340      	movs	r3, #64	; 0x40
 8000bc0:	2000      	movs	r0, #0
 8000bc2:	6023      	str	r3, [r4, #0]
 8000bc4:	b016      	add	sp, #88	; 0x58
 8000bc6:	bd70      	pop	{r4, r5, r6, pc}

08000bc8 <__smakebuf_r>:
 8000bc8:	898b      	ldrh	r3, [r1, #12]
 8000bca:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000bcc:	079d      	lsls	r5, r3, #30
 8000bce:	4606      	mov	r6, r0
 8000bd0:	460c      	mov	r4, r1
 8000bd2:	d507      	bpl.n	8000be4 <__smakebuf_r+0x1c>
 8000bd4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000bd8:	6023      	str	r3, [r4, #0]
 8000bda:	6123      	str	r3, [r4, #16]
 8000bdc:	2301      	movs	r3, #1
 8000bde:	6163      	str	r3, [r4, #20]
 8000be0:	b002      	add	sp, #8
 8000be2:	bd70      	pop	{r4, r5, r6, pc}
 8000be4:	ab01      	add	r3, sp, #4
 8000be6:	466a      	mov	r2, sp
 8000be8:	f7ff ffca 	bl	8000b80 <__swhatbuf_r>
 8000bec:	9900      	ldr	r1, [sp, #0]
 8000bee:	4605      	mov	r5, r0
 8000bf0:	4630      	mov	r0, r6
 8000bf2:	f000 f877 	bl	8000ce4 <_malloc_r>
 8000bf6:	b948      	cbnz	r0, 8000c0c <__smakebuf_r+0x44>
 8000bf8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000bfc:	059a      	lsls	r2, r3, #22
 8000bfe:	d4ef      	bmi.n	8000be0 <__smakebuf_r+0x18>
 8000c00:	f023 0303 	bic.w	r3, r3, #3
 8000c04:	f043 0302 	orr.w	r3, r3, #2
 8000c08:	81a3      	strh	r3, [r4, #12]
 8000c0a:	e7e3      	b.n	8000bd4 <__smakebuf_r+0xc>
 8000c0c:	4b0d      	ldr	r3, [pc, #52]	; (8000c44 <__smakebuf_r+0x7c>)
 8000c0e:	62b3      	str	r3, [r6, #40]	; 0x28
 8000c10:	89a3      	ldrh	r3, [r4, #12]
 8000c12:	6020      	str	r0, [r4, #0]
 8000c14:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c18:	81a3      	strh	r3, [r4, #12]
 8000c1a:	9b00      	ldr	r3, [sp, #0]
 8000c1c:	6163      	str	r3, [r4, #20]
 8000c1e:	9b01      	ldr	r3, [sp, #4]
 8000c20:	6120      	str	r0, [r4, #16]
 8000c22:	b15b      	cbz	r3, 8000c3c <__smakebuf_r+0x74>
 8000c24:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c28:	4630      	mov	r0, r6
 8000c2a:	f000 fc05 	bl	8001438 <_isatty_r>
 8000c2e:	b128      	cbz	r0, 8000c3c <__smakebuf_r+0x74>
 8000c30:	89a3      	ldrh	r3, [r4, #12]
 8000c32:	f023 0303 	bic.w	r3, r3, #3
 8000c36:	f043 0301 	orr.w	r3, r3, #1
 8000c3a:	81a3      	strh	r3, [r4, #12]
 8000c3c:	89a3      	ldrh	r3, [r4, #12]
 8000c3e:	431d      	orrs	r5, r3
 8000c40:	81a5      	strh	r5, [r4, #12]
 8000c42:	e7cd      	b.n	8000be0 <__smakebuf_r+0x18>
 8000c44:	08000a35 	.word	0x08000a35

08000c48 <_free_r>:
 8000c48:	b538      	push	{r3, r4, r5, lr}
 8000c4a:	4605      	mov	r5, r0
 8000c4c:	2900      	cmp	r1, #0
 8000c4e:	d045      	beq.n	8000cdc <_free_r+0x94>
 8000c50:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000c54:	1f0c      	subs	r4, r1, #4
 8000c56:	2b00      	cmp	r3, #0
 8000c58:	bfb8      	it	lt
 8000c5a:	18e4      	addlt	r4, r4, r3
 8000c5c:	f000 fc0e 	bl	800147c <__malloc_lock>
 8000c60:	4a1f      	ldr	r2, [pc, #124]	; (8000ce0 <_free_r+0x98>)
 8000c62:	6813      	ldr	r3, [r2, #0]
 8000c64:	4610      	mov	r0, r2
 8000c66:	b933      	cbnz	r3, 8000c76 <_free_r+0x2e>
 8000c68:	6063      	str	r3, [r4, #4]
 8000c6a:	6014      	str	r4, [r2, #0]
 8000c6c:	4628      	mov	r0, r5
 8000c6e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c72:	f000 bc04 	b.w	800147e <__malloc_unlock>
 8000c76:	42a3      	cmp	r3, r4
 8000c78:	d90c      	bls.n	8000c94 <_free_r+0x4c>
 8000c7a:	6821      	ldr	r1, [r4, #0]
 8000c7c:	1862      	adds	r2, r4, r1
 8000c7e:	4293      	cmp	r3, r2
 8000c80:	bf04      	itt	eq
 8000c82:	681a      	ldreq	r2, [r3, #0]
 8000c84:	685b      	ldreq	r3, [r3, #4]
 8000c86:	6063      	str	r3, [r4, #4]
 8000c88:	bf04      	itt	eq
 8000c8a:	1852      	addeq	r2, r2, r1
 8000c8c:	6022      	streq	r2, [r4, #0]
 8000c8e:	6004      	str	r4, [r0, #0]
 8000c90:	e7ec      	b.n	8000c6c <_free_r+0x24>
 8000c92:	4613      	mov	r3, r2
 8000c94:	685a      	ldr	r2, [r3, #4]
 8000c96:	b10a      	cbz	r2, 8000c9c <_free_r+0x54>
 8000c98:	42a2      	cmp	r2, r4
 8000c9a:	d9fa      	bls.n	8000c92 <_free_r+0x4a>
 8000c9c:	6819      	ldr	r1, [r3, #0]
 8000c9e:	1858      	adds	r0, r3, r1
 8000ca0:	42a0      	cmp	r0, r4
 8000ca2:	d10b      	bne.n	8000cbc <_free_r+0x74>
 8000ca4:	6820      	ldr	r0, [r4, #0]
 8000ca6:	4401      	add	r1, r0
 8000ca8:	1858      	adds	r0, r3, r1
 8000caa:	4282      	cmp	r2, r0
 8000cac:	6019      	str	r1, [r3, #0]
 8000cae:	d1dd      	bne.n	8000c6c <_free_r+0x24>
 8000cb0:	6810      	ldr	r0, [r2, #0]
 8000cb2:	6852      	ldr	r2, [r2, #4]
 8000cb4:	605a      	str	r2, [r3, #4]
 8000cb6:	4401      	add	r1, r0
 8000cb8:	6019      	str	r1, [r3, #0]
 8000cba:	e7d7      	b.n	8000c6c <_free_r+0x24>
 8000cbc:	d902      	bls.n	8000cc4 <_free_r+0x7c>
 8000cbe:	230c      	movs	r3, #12
 8000cc0:	602b      	str	r3, [r5, #0]
 8000cc2:	e7d3      	b.n	8000c6c <_free_r+0x24>
 8000cc4:	6820      	ldr	r0, [r4, #0]
 8000cc6:	1821      	adds	r1, r4, r0
 8000cc8:	428a      	cmp	r2, r1
 8000cca:	bf04      	itt	eq
 8000ccc:	6811      	ldreq	r1, [r2, #0]
 8000cce:	6852      	ldreq	r2, [r2, #4]
 8000cd0:	6062      	str	r2, [r4, #4]
 8000cd2:	bf04      	itt	eq
 8000cd4:	1809      	addeq	r1, r1, r0
 8000cd6:	6021      	streq	r1, [r4, #0]
 8000cd8:	605c      	str	r4, [r3, #4]
 8000cda:	e7c7      	b.n	8000c6c <_free_r+0x24>
 8000cdc:	bd38      	pop	{r3, r4, r5, pc}
 8000cde:	bf00      	nop
 8000ce0:	20000084 	.word	0x20000084

08000ce4 <_malloc_r>:
 8000ce4:	b570      	push	{r4, r5, r6, lr}
 8000ce6:	1ccd      	adds	r5, r1, #3
 8000ce8:	f025 0503 	bic.w	r5, r5, #3
 8000cec:	3508      	adds	r5, #8
 8000cee:	2d0c      	cmp	r5, #12
 8000cf0:	bf38      	it	cc
 8000cf2:	250c      	movcc	r5, #12
 8000cf4:	2d00      	cmp	r5, #0
 8000cf6:	4606      	mov	r6, r0
 8000cf8:	db01      	blt.n	8000cfe <_malloc_r+0x1a>
 8000cfa:	42a9      	cmp	r1, r5
 8000cfc:	d903      	bls.n	8000d06 <_malloc_r+0x22>
 8000cfe:	230c      	movs	r3, #12
 8000d00:	6033      	str	r3, [r6, #0]
 8000d02:	2000      	movs	r0, #0
 8000d04:	bd70      	pop	{r4, r5, r6, pc}
 8000d06:	f000 fbb9 	bl	800147c <__malloc_lock>
 8000d0a:	4a21      	ldr	r2, [pc, #132]	; (8000d90 <_malloc_r+0xac>)
 8000d0c:	6814      	ldr	r4, [r2, #0]
 8000d0e:	4621      	mov	r1, r4
 8000d10:	b991      	cbnz	r1, 8000d38 <_malloc_r+0x54>
 8000d12:	4c20      	ldr	r4, [pc, #128]	; (8000d94 <_malloc_r+0xb0>)
 8000d14:	6823      	ldr	r3, [r4, #0]
 8000d16:	b91b      	cbnz	r3, 8000d20 <_malloc_r+0x3c>
 8000d18:	4630      	mov	r0, r6
 8000d1a:	f000 fb05 	bl	8001328 <_sbrk_r>
 8000d1e:	6020      	str	r0, [r4, #0]
 8000d20:	4629      	mov	r1, r5
 8000d22:	4630      	mov	r0, r6
 8000d24:	f000 fb00 	bl	8001328 <_sbrk_r>
 8000d28:	1c43      	adds	r3, r0, #1
 8000d2a:	d124      	bne.n	8000d76 <_malloc_r+0x92>
 8000d2c:	230c      	movs	r3, #12
 8000d2e:	6033      	str	r3, [r6, #0]
 8000d30:	4630      	mov	r0, r6
 8000d32:	f000 fba4 	bl	800147e <__malloc_unlock>
 8000d36:	e7e4      	b.n	8000d02 <_malloc_r+0x1e>
 8000d38:	680b      	ldr	r3, [r1, #0]
 8000d3a:	1b5b      	subs	r3, r3, r5
 8000d3c:	d418      	bmi.n	8000d70 <_malloc_r+0x8c>
 8000d3e:	2b0b      	cmp	r3, #11
 8000d40:	d90f      	bls.n	8000d62 <_malloc_r+0x7e>
 8000d42:	600b      	str	r3, [r1, #0]
 8000d44:	50cd      	str	r5, [r1, r3]
 8000d46:	18cc      	adds	r4, r1, r3
 8000d48:	4630      	mov	r0, r6
 8000d4a:	f000 fb98 	bl	800147e <__malloc_unlock>
 8000d4e:	f104 000b 	add.w	r0, r4, #11
 8000d52:	1d23      	adds	r3, r4, #4
 8000d54:	f020 0007 	bic.w	r0, r0, #7
 8000d58:	1ac3      	subs	r3, r0, r3
 8000d5a:	d0d3      	beq.n	8000d04 <_malloc_r+0x20>
 8000d5c:	425a      	negs	r2, r3
 8000d5e:	50e2      	str	r2, [r4, r3]
 8000d60:	e7d0      	b.n	8000d04 <_malloc_r+0x20>
 8000d62:	428c      	cmp	r4, r1
 8000d64:	684b      	ldr	r3, [r1, #4]
 8000d66:	bf16      	itet	ne
 8000d68:	6063      	strne	r3, [r4, #4]
 8000d6a:	6013      	streq	r3, [r2, #0]
 8000d6c:	460c      	movne	r4, r1
 8000d6e:	e7eb      	b.n	8000d48 <_malloc_r+0x64>
 8000d70:	460c      	mov	r4, r1
 8000d72:	6849      	ldr	r1, [r1, #4]
 8000d74:	e7cc      	b.n	8000d10 <_malloc_r+0x2c>
 8000d76:	1cc4      	adds	r4, r0, #3
 8000d78:	f024 0403 	bic.w	r4, r4, #3
 8000d7c:	42a0      	cmp	r0, r4
 8000d7e:	d005      	beq.n	8000d8c <_malloc_r+0xa8>
 8000d80:	1a21      	subs	r1, r4, r0
 8000d82:	4630      	mov	r0, r6
 8000d84:	f000 fad0 	bl	8001328 <_sbrk_r>
 8000d88:	3001      	adds	r0, #1
 8000d8a:	d0cf      	beq.n	8000d2c <_malloc_r+0x48>
 8000d8c:	6025      	str	r5, [r4, #0]
 8000d8e:	e7db      	b.n	8000d48 <_malloc_r+0x64>
 8000d90:	20000084 	.word	0x20000084
 8000d94:	20000088 	.word	0x20000088

08000d98 <__sfputc_r>:
 8000d98:	6893      	ldr	r3, [r2, #8]
 8000d9a:	3b01      	subs	r3, #1
 8000d9c:	2b00      	cmp	r3, #0
 8000d9e:	b410      	push	{r4}
 8000da0:	6093      	str	r3, [r2, #8]
 8000da2:	da08      	bge.n	8000db6 <__sfputc_r+0x1e>
 8000da4:	6994      	ldr	r4, [r2, #24]
 8000da6:	42a3      	cmp	r3, r4
 8000da8:	db01      	blt.n	8000dae <__sfputc_r+0x16>
 8000daa:	290a      	cmp	r1, #10
 8000dac:	d103      	bne.n	8000db6 <__sfputc_r+0x1e>
 8000dae:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000db2:	f7ff bcab 	b.w	800070c <__swbuf_r>
 8000db6:	6813      	ldr	r3, [r2, #0]
 8000db8:	1c58      	adds	r0, r3, #1
 8000dba:	6010      	str	r0, [r2, #0]
 8000dbc:	7019      	strb	r1, [r3, #0]
 8000dbe:	4608      	mov	r0, r1
 8000dc0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000dc4:	4770      	bx	lr

08000dc6 <__sfputs_r>:
 8000dc6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dc8:	4606      	mov	r6, r0
 8000dca:	460f      	mov	r7, r1
 8000dcc:	4614      	mov	r4, r2
 8000dce:	18d5      	adds	r5, r2, r3
 8000dd0:	42ac      	cmp	r4, r5
 8000dd2:	d101      	bne.n	8000dd8 <__sfputs_r+0x12>
 8000dd4:	2000      	movs	r0, #0
 8000dd6:	e007      	b.n	8000de8 <__sfputs_r+0x22>
 8000dd8:	463a      	mov	r2, r7
 8000dda:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000dde:	4630      	mov	r0, r6
 8000de0:	f7ff ffda 	bl	8000d98 <__sfputc_r>
 8000de4:	1c43      	adds	r3, r0, #1
 8000de6:	d1f3      	bne.n	8000dd0 <__sfputs_r+0xa>
 8000de8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000dec <_vfiprintf_r>:
 8000dec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000df0:	460c      	mov	r4, r1
 8000df2:	b09d      	sub	sp, #116	; 0x74
 8000df4:	4617      	mov	r7, r2
 8000df6:	461d      	mov	r5, r3
 8000df8:	4606      	mov	r6, r0
 8000dfa:	b118      	cbz	r0, 8000e04 <_vfiprintf_r+0x18>
 8000dfc:	6983      	ldr	r3, [r0, #24]
 8000dfe:	b90b      	cbnz	r3, 8000e04 <_vfiprintf_r+0x18>
 8000e00:	f7ff fe34 	bl	8000a6c <__sinit>
 8000e04:	4b7c      	ldr	r3, [pc, #496]	; (8000ff8 <_vfiprintf_r+0x20c>)
 8000e06:	429c      	cmp	r4, r3
 8000e08:	d158      	bne.n	8000ebc <_vfiprintf_r+0xd0>
 8000e0a:	6874      	ldr	r4, [r6, #4]
 8000e0c:	89a3      	ldrh	r3, [r4, #12]
 8000e0e:	0718      	lsls	r0, r3, #28
 8000e10:	d55e      	bpl.n	8000ed0 <_vfiprintf_r+0xe4>
 8000e12:	6923      	ldr	r3, [r4, #16]
 8000e14:	2b00      	cmp	r3, #0
 8000e16:	d05b      	beq.n	8000ed0 <_vfiprintf_r+0xe4>
 8000e18:	2300      	movs	r3, #0
 8000e1a:	9309      	str	r3, [sp, #36]	; 0x24
 8000e1c:	2320      	movs	r3, #32
 8000e1e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000e22:	2330      	movs	r3, #48	; 0x30
 8000e24:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000e28:	9503      	str	r5, [sp, #12]
 8000e2a:	f04f 0b01 	mov.w	fp, #1
 8000e2e:	46b8      	mov	r8, r7
 8000e30:	4645      	mov	r5, r8
 8000e32:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000e36:	b10b      	cbz	r3, 8000e3c <_vfiprintf_r+0x50>
 8000e38:	2b25      	cmp	r3, #37	; 0x25
 8000e3a:	d154      	bne.n	8000ee6 <_vfiprintf_r+0xfa>
 8000e3c:	ebb8 0a07 	subs.w	sl, r8, r7
 8000e40:	d00b      	beq.n	8000e5a <_vfiprintf_r+0x6e>
 8000e42:	4653      	mov	r3, sl
 8000e44:	463a      	mov	r2, r7
 8000e46:	4621      	mov	r1, r4
 8000e48:	4630      	mov	r0, r6
 8000e4a:	f7ff ffbc 	bl	8000dc6 <__sfputs_r>
 8000e4e:	3001      	adds	r0, #1
 8000e50:	f000 80c2 	beq.w	8000fd8 <_vfiprintf_r+0x1ec>
 8000e54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000e56:	4453      	add	r3, sl
 8000e58:	9309      	str	r3, [sp, #36]	; 0x24
 8000e5a:	f898 3000 	ldrb.w	r3, [r8]
 8000e5e:	2b00      	cmp	r3, #0
 8000e60:	f000 80ba 	beq.w	8000fd8 <_vfiprintf_r+0x1ec>
 8000e64:	2300      	movs	r3, #0
 8000e66:	f04f 32ff 	mov.w	r2, #4294967295
 8000e6a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000e6e:	9304      	str	r3, [sp, #16]
 8000e70:	9307      	str	r3, [sp, #28]
 8000e72:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000e76:	931a      	str	r3, [sp, #104]	; 0x68
 8000e78:	46a8      	mov	r8, r5
 8000e7a:	2205      	movs	r2, #5
 8000e7c:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000e80:	485e      	ldr	r0, [pc, #376]	; (8000ffc <_vfiprintf_r+0x210>)
 8000e82:	f7ff f9c5 	bl	8000210 <memchr>
 8000e86:	9b04      	ldr	r3, [sp, #16]
 8000e88:	bb78      	cbnz	r0, 8000eea <_vfiprintf_r+0xfe>
 8000e8a:	06d9      	lsls	r1, r3, #27
 8000e8c:	bf44      	itt	mi
 8000e8e:	2220      	movmi	r2, #32
 8000e90:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000e94:	071a      	lsls	r2, r3, #28
 8000e96:	bf44      	itt	mi
 8000e98:	222b      	movmi	r2, #43	; 0x2b
 8000e9a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000e9e:	782a      	ldrb	r2, [r5, #0]
 8000ea0:	2a2a      	cmp	r2, #42	; 0x2a
 8000ea2:	d02a      	beq.n	8000efa <_vfiprintf_r+0x10e>
 8000ea4:	9a07      	ldr	r2, [sp, #28]
 8000ea6:	46a8      	mov	r8, r5
 8000ea8:	2000      	movs	r0, #0
 8000eaa:	250a      	movs	r5, #10
 8000eac:	4641      	mov	r1, r8
 8000eae:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000eb2:	3b30      	subs	r3, #48	; 0x30
 8000eb4:	2b09      	cmp	r3, #9
 8000eb6:	d969      	bls.n	8000f8c <_vfiprintf_r+0x1a0>
 8000eb8:	b360      	cbz	r0, 8000f14 <_vfiprintf_r+0x128>
 8000eba:	e024      	b.n	8000f06 <_vfiprintf_r+0x11a>
 8000ebc:	4b50      	ldr	r3, [pc, #320]	; (8001000 <_vfiprintf_r+0x214>)
 8000ebe:	429c      	cmp	r4, r3
 8000ec0:	d101      	bne.n	8000ec6 <_vfiprintf_r+0xda>
 8000ec2:	68b4      	ldr	r4, [r6, #8]
 8000ec4:	e7a2      	b.n	8000e0c <_vfiprintf_r+0x20>
 8000ec6:	4b4f      	ldr	r3, [pc, #316]	; (8001004 <_vfiprintf_r+0x218>)
 8000ec8:	429c      	cmp	r4, r3
 8000eca:	bf08      	it	eq
 8000ecc:	68f4      	ldreq	r4, [r6, #12]
 8000ece:	e79d      	b.n	8000e0c <_vfiprintf_r+0x20>
 8000ed0:	4621      	mov	r1, r4
 8000ed2:	4630      	mov	r0, r6
 8000ed4:	f7ff fc6c 	bl	80007b0 <__swsetup_r>
 8000ed8:	2800      	cmp	r0, #0
 8000eda:	d09d      	beq.n	8000e18 <_vfiprintf_r+0x2c>
 8000edc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ee0:	b01d      	add	sp, #116	; 0x74
 8000ee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000ee6:	46a8      	mov	r8, r5
 8000ee8:	e7a2      	b.n	8000e30 <_vfiprintf_r+0x44>
 8000eea:	4a44      	ldr	r2, [pc, #272]	; (8000ffc <_vfiprintf_r+0x210>)
 8000eec:	1a80      	subs	r0, r0, r2
 8000eee:	fa0b f000 	lsl.w	r0, fp, r0
 8000ef2:	4318      	orrs	r0, r3
 8000ef4:	9004      	str	r0, [sp, #16]
 8000ef6:	4645      	mov	r5, r8
 8000ef8:	e7be      	b.n	8000e78 <_vfiprintf_r+0x8c>
 8000efa:	9a03      	ldr	r2, [sp, #12]
 8000efc:	1d11      	adds	r1, r2, #4
 8000efe:	6812      	ldr	r2, [r2, #0]
 8000f00:	9103      	str	r1, [sp, #12]
 8000f02:	2a00      	cmp	r2, #0
 8000f04:	db01      	blt.n	8000f0a <_vfiprintf_r+0x11e>
 8000f06:	9207      	str	r2, [sp, #28]
 8000f08:	e004      	b.n	8000f14 <_vfiprintf_r+0x128>
 8000f0a:	4252      	negs	r2, r2
 8000f0c:	f043 0302 	orr.w	r3, r3, #2
 8000f10:	9207      	str	r2, [sp, #28]
 8000f12:	9304      	str	r3, [sp, #16]
 8000f14:	f898 3000 	ldrb.w	r3, [r8]
 8000f18:	2b2e      	cmp	r3, #46	; 0x2e
 8000f1a:	d10e      	bne.n	8000f3a <_vfiprintf_r+0x14e>
 8000f1c:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000f20:	2b2a      	cmp	r3, #42	; 0x2a
 8000f22:	d138      	bne.n	8000f96 <_vfiprintf_r+0x1aa>
 8000f24:	9b03      	ldr	r3, [sp, #12]
 8000f26:	1d1a      	adds	r2, r3, #4
 8000f28:	681b      	ldr	r3, [r3, #0]
 8000f2a:	9203      	str	r2, [sp, #12]
 8000f2c:	2b00      	cmp	r3, #0
 8000f2e:	bfb8      	it	lt
 8000f30:	f04f 33ff 	movlt.w	r3, #4294967295
 8000f34:	f108 0802 	add.w	r8, r8, #2
 8000f38:	9305      	str	r3, [sp, #20]
 8000f3a:	4d33      	ldr	r5, [pc, #204]	; (8001008 <_vfiprintf_r+0x21c>)
 8000f3c:	f898 1000 	ldrb.w	r1, [r8]
 8000f40:	2203      	movs	r2, #3
 8000f42:	4628      	mov	r0, r5
 8000f44:	f7ff f964 	bl	8000210 <memchr>
 8000f48:	b140      	cbz	r0, 8000f5c <_vfiprintf_r+0x170>
 8000f4a:	2340      	movs	r3, #64	; 0x40
 8000f4c:	1b40      	subs	r0, r0, r5
 8000f4e:	fa03 f000 	lsl.w	r0, r3, r0
 8000f52:	9b04      	ldr	r3, [sp, #16]
 8000f54:	4303      	orrs	r3, r0
 8000f56:	f108 0801 	add.w	r8, r8, #1
 8000f5a:	9304      	str	r3, [sp, #16]
 8000f5c:	f898 1000 	ldrb.w	r1, [r8]
 8000f60:	482a      	ldr	r0, [pc, #168]	; (800100c <_vfiprintf_r+0x220>)
 8000f62:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000f66:	2206      	movs	r2, #6
 8000f68:	f108 0701 	add.w	r7, r8, #1
 8000f6c:	f7ff f950 	bl	8000210 <memchr>
 8000f70:	2800      	cmp	r0, #0
 8000f72:	d037      	beq.n	8000fe4 <_vfiprintf_r+0x1f8>
 8000f74:	4b26      	ldr	r3, [pc, #152]	; (8001010 <_vfiprintf_r+0x224>)
 8000f76:	bb1b      	cbnz	r3, 8000fc0 <_vfiprintf_r+0x1d4>
 8000f78:	9b03      	ldr	r3, [sp, #12]
 8000f7a:	3307      	adds	r3, #7
 8000f7c:	f023 0307 	bic.w	r3, r3, #7
 8000f80:	3308      	adds	r3, #8
 8000f82:	9303      	str	r3, [sp, #12]
 8000f84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000f86:	444b      	add	r3, r9
 8000f88:	9309      	str	r3, [sp, #36]	; 0x24
 8000f8a:	e750      	b.n	8000e2e <_vfiprintf_r+0x42>
 8000f8c:	fb05 3202 	mla	r2, r5, r2, r3
 8000f90:	2001      	movs	r0, #1
 8000f92:	4688      	mov	r8, r1
 8000f94:	e78a      	b.n	8000eac <_vfiprintf_r+0xc0>
 8000f96:	2300      	movs	r3, #0
 8000f98:	f108 0801 	add.w	r8, r8, #1
 8000f9c:	9305      	str	r3, [sp, #20]
 8000f9e:	4619      	mov	r1, r3
 8000fa0:	250a      	movs	r5, #10
 8000fa2:	4640      	mov	r0, r8
 8000fa4:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000fa8:	3a30      	subs	r2, #48	; 0x30
 8000faa:	2a09      	cmp	r2, #9
 8000fac:	d903      	bls.n	8000fb6 <_vfiprintf_r+0x1ca>
 8000fae:	2b00      	cmp	r3, #0
 8000fb0:	d0c3      	beq.n	8000f3a <_vfiprintf_r+0x14e>
 8000fb2:	9105      	str	r1, [sp, #20]
 8000fb4:	e7c1      	b.n	8000f3a <_vfiprintf_r+0x14e>
 8000fb6:	fb05 2101 	mla	r1, r5, r1, r2
 8000fba:	2301      	movs	r3, #1
 8000fbc:	4680      	mov	r8, r0
 8000fbe:	e7f0      	b.n	8000fa2 <_vfiprintf_r+0x1b6>
 8000fc0:	ab03      	add	r3, sp, #12
 8000fc2:	9300      	str	r3, [sp, #0]
 8000fc4:	4622      	mov	r2, r4
 8000fc6:	4b13      	ldr	r3, [pc, #76]	; (8001014 <_vfiprintf_r+0x228>)
 8000fc8:	a904      	add	r1, sp, #16
 8000fca:	4630      	mov	r0, r6
 8000fcc:	f3af 8000 	nop.w
 8000fd0:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000fd4:	4681      	mov	r9, r0
 8000fd6:	d1d5      	bne.n	8000f84 <_vfiprintf_r+0x198>
 8000fd8:	89a3      	ldrh	r3, [r4, #12]
 8000fda:	065b      	lsls	r3, r3, #25
 8000fdc:	f53f af7e 	bmi.w	8000edc <_vfiprintf_r+0xf0>
 8000fe0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000fe2:	e77d      	b.n	8000ee0 <_vfiprintf_r+0xf4>
 8000fe4:	ab03      	add	r3, sp, #12
 8000fe6:	9300      	str	r3, [sp, #0]
 8000fe8:	4622      	mov	r2, r4
 8000fea:	4b0a      	ldr	r3, [pc, #40]	; (8001014 <_vfiprintf_r+0x228>)
 8000fec:	a904      	add	r1, sp, #16
 8000fee:	4630      	mov	r0, r6
 8000ff0:	f000 f888 	bl	8001104 <_printf_i>
 8000ff4:	e7ec      	b.n	8000fd0 <_vfiprintf_r+0x1e4>
 8000ff6:	bf00      	nop
 8000ff8:	0800161c 	.word	0x0800161c
 8000ffc:	0800165c 	.word	0x0800165c
 8001000:	0800163c 	.word	0x0800163c
 8001004:	080015fc 	.word	0x080015fc
 8001008:	08001662 	.word	0x08001662
 800100c:	08001666 	.word	0x08001666
 8001010:	00000000 	.word	0x00000000
 8001014:	08000dc7 	.word	0x08000dc7

08001018 <_printf_common>:
 8001018:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800101c:	4691      	mov	r9, r2
 800101e:	461f      	mov	r7, r3
 8001020:	688a      	ldr	r2, [r1, #8]
 8001022:	690b      	ldr	r3, [r1, #16]
 8001024:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001028:	4293      	cmp	r3, r2
 800102a:	bfb8      	it	lt
 800102c:	4613      	movlt	r3, r2
 800102e:	f8c9 3000 	str.w	r3, [r9]
 8001032:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001036:	4606      	mov	r6, r0
 8001038:	460c      	mov	r4, r1
 800103a:	b112      	cbz	r2, 8001042 <_printf_common+0x2a>
 800103c:	3301      	adds	r3, #1
 800103e:	f8c9 3000 	str.w	r3, [r9]
 8001042:	6823      	ldr	r3, [r4, #0]
 8001044:	0699      	lsls	r1, r3, #26
 8001046:	bf42      	ittt	mi
 8001048:	f8d9 3000 	ldrmi.w	r3, [r9]
 800104c:	3302      	addmi	r3, #2
 800104e:	f8c9 3000 	strmi.w	r3, [r9]
 8001052:	6825      	ldr	r5, [r4, #0]
 8001054:	f015 0506 	ands.w	r5, r5, #6
 8001058:	d107      	bne.n	800106a <_printf_common+0x52>
 800105a:	f104 0a19 	add.w	sl, r4, #25
 800105e:	68e3      	ldr	r3, [r4, #12]
 8001060:	f8d9 2000 	ldr.w	r2, [r9]
 8001064:	1a9b      	subs	r3, r3, r2
 8001066:	42ab      	cmp	r3, r5
 8001068:	dc28      	bgt.n	80010bc <_printf_common+0xa4>
 800106a:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 800106e:	6822      	ldr	r2, [r4, #0]
 8001070:	3300      	adds	r3, #0
 8001072:	bf18      	it	ne
 8001074:	2301      	movne	r3, #1
 8001076:	0692      	lsls	r2, r2, #26
 8001078:	d42d      	bmi.n	80010d6 <_printf_common+0xbe>
 800107a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800107e:	4639      	mov	r1, r7
 8001080:	4630      	mov	r0, r6
 8001082:	47c0      	blx	r8
 8001084:	3001      	adds	r0, #1
 8001086:	d020      	beq.n	80010ca <_printf_common+0xb2>
 8001088:	6823      	ldr	r3, [r4, #0]
 800108a:	68e5      	ldr	r5, [r4, #12]
 800108c:	f8d9 2000 	ldr.w	r2, [r9]
 8001090:	f003 0306 	and.w	r3, r3, #6
 8001094:	2b04      	cmp	r3, #4
 8001096:	bf08      	it	eq
 8001098:	1aad      	subeq	r5, r5, r2
 800109a:	68a3      	ldr	r3, [r4, #8]
 800109c:	6922      	ldr	r2, [r4, #16]
 800109e:	bf0c      	ite	eq
 80010a0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80010a4:	2500      	movne	r5, #0
 80010a6:	4293      	cmp	r3, r2
 80010a8:	bfc4      	itt	gt
 80010aa:	1a9b      	subgt	r3, r3, r2
 80010ac:	18ed      	addgt	r5, r5, r3
 80010ae:	f04f 0900 	mov.w	r9, #0
 80010b2:	341a      	adds	r4, #26
 80010b4:	454d      	cmp	r5, r9
 80010b6:	d11a      	bne.n	80010ee <_printf_common+0xd6>
 80010b8:	2000      	movs	r0, #0
 80010ba:	e008      	b.n	80010ce <_printf_common+0xb6>
 80010bc:	2301      	movs	r3, #1
 80010be:	4652      	mov	r2, sl
 80010c0:	4639      	mov	r1, r7
 80010c2:	4630      	mov	r0, r6
 80010c4:	47c0      	blx	r8
 80010c6:	3001      	adds	r0, #1
 80010c8:	d103      	bne.n	80010d2 <_printf_common+0xba>
 80010ca:	f04f 30ff 	mov.w	r0, #4294967295
 80010ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010d2:	3501      	adds	r5, #1
 80010d4:	e7c3      	b.n	800105e <_printf_common+0x46>
 80010d6:	18e1      	adds	r1, r4, r3
 80010d8:	1c5a      	adds	r2, r3, #1
 80010da:	2030      	movs	r0, #48	; 0x30
 80010dc:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80010e0:	4422      	add	r2, r4
 80010e2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80010e6:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80010ea:	3302      	adds	r3, #2
 80010ec:	e7c5      	b.n	800107a <_printf_common+0x62>
 80010ee:	2301      	movs	r3, #1
 80010f0:	4622      	mov	r2, r4
 80010f2:	4639      	mov	r1, r7
 80010f4:	4630      	mov	r0, r6
 80010f6:	47c0      	blx	r8
 80010f8:	3001      	adds	r0, #1
 80010fa:	d0e6      	beq.n	80010ca <_printf_common+0xb2>
 80010fc:	f109 0901 	add.w	r9, r9, #1
 8001100:	e7d8      	b.n	80010b4 <_printf_common+0x9c>
	...

08001104 <_printf_i>:
 8001104:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001108:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 800110c:	460c      	mov	r4, r1
 800110e:	7e09      	ldrb	r1, [r1, #24]
 8001110:	b085      	sub	sp, #20
 8001112:	296e      	cmp	r1, #110	; 0x6e
 8001114:	4617      	mov	r7, r2
 8001116:	4606      	mov	r6, r0
 8001118:	4698      	mov	r8, r3
 800111a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800111c:	f000 80b3 	beq.w	8001286 <_printf_i+0x182>
 8001120:	d822      	bhi.n	8001168 <_printf_i+0x64>
 8001122:	2963      	cmp	r1, #99	; 0x63
 8001124:	d036      	beq.n	8001194 <_printf_i+0x90>
 8001126:	d80a      	bhi.n	800113e <_printf_i+0x3a>
 8001128:	2900      	cmp	r1, #0
 800112a:	f000 80b9 	beq.w	80012a0 <_printf_i+0x19c>
 800112e:	2958      	cmp	r1, #88	; 0x58
 8001130:	f000 8083 	beq.w	800123a <_printf_i+0x136>
 8001134:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001138:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 800113c:	e032      	b.n	80011a4 <_printf_i+0xa0>
 800113e:	2964      	cmp	r1, #100	; 0x64
 8001140:	d001      	beq.n	8001146 <_printf_i+0x42>
 8001142:	2969      	cmp	r1, #105	; 0x69
 8001144:	d1f6      	bne.n	8001134 <_printf_i+0x30>
 8001146:	6820      	ldr	r0, [r4, #0]
 8001148:	6813      	ldr	r3, [r2, #0]
 800114a:	0605      	lsls	r5, r0, #24
 800114c:	f103 0104 	add.w	r1, r3, #4
 8001150:	d52a      	bpl.n	80011a8 <_printf_i+0xa4>
 8001152:	681b      	ldr	r3, [r3, #0]
 8001154:	6011      	str	r1, [r2, #0]
 8001156:	2b00      	cmp	r3, #0
 8001158:	da03      	bge.n	8001162 <_printf_i+0x5e>
 800115a:	222d      	movs	r2, #45	; 0x2d
 800115c:	425b      	negs	r3, r3
 800115e:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8001162:	486f      	ldr	r0, [pc, #444]	; (8001320 <_printf_i+0x21c>)
 8001164:	220a      	movs	r2, #10
 8001166:	e039      	b.n	80011dc <_printf_i+0xd8>
 8001168:	2973      	cmp	r1, #115	; 0x73
 800116a:	f000 809d 	beq.w	80012a8 <_printf_i+0x1a4>
 800116e:	d808      	bhi.n	8001182 <_printf_i+0x7e>
 8001170:	296f      	cmp	r1, #111	; 0x6f
 8001172:	d020      	beq.n	80011b6 <_printf_i+0xb2>
 8001174:	2970      	cmp	r1, #112	; 0x70
 8001176:	d1dd      	bne.n	8001134 <_printf_i+0x30>
 8001178:	6823      	ldr	r3, [r4, #0]
 800117a:	f043 0320 	orr.w	r3, r3, #32
 800117e:	6023      	str	r3, [r4, #0]
 8001180:	e003      	b.n	800118a <_printf_i+0x86>
 8001182:	2975      	cmp	r1, #117	; 0x75
 8001184:	d017      	beq.n	80011b6 <_printf_i+0xb2>
 8001186:	2978      	cmp	r1, #120	; 0x78
 8001188:	d1d4      	bne.n	8001134 <_printf_i+0x30>
 800118a:	2378      	movs	r3, #120	; 0x78
 800118c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001190:	4864      	ldr	r0, [pc, #400]	; (8001324 <_printf_i+0x220>)
 8001192:	e055      	b.n	8001240 <_printf_i+0x13c>
 8001194:	6813      	ldr	r3, [r2, #0]
 8001196:	1d19      	adds	r1, r3, #4
 8001198:	681b      	ldr	r3, [r3, #0]
 800119a:	6011      	str	r1, [r2, #0]
 800119c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80011a0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80011a4:	2301      	movs	r3, #1
 80011a6:	e08c      	b.n	80012c2 <_printf_i+0x1be>
 80011a8:	681b      	ldr	r3, [r3, #0]
 80011aa:	6011      	str	r1, [r2, #0]
 80011ac:	f010 0f40 	tst.w	r0, #64	; 0x40
 80011b0:	bf18      	it	ne
 80011b2:	b21b      	sxthne	r3, r3
 80011b4:	e7cf      	b.n	8001156 <_printf_i+0x52>
 80011b6:	6813      	ldr	r3, [r2, #0]
 80011b8:	6825      	ldr	r5, [r4, #0]
 80011ba:	1d18      	adds	r0, r3, #4
 80011bc:	6010      	str	r0, [r2, #0]
 80011be:	0628      	lsls	r0, r5, #24
 80011c0:	d501      	bpl.n	80011c6 <_printf_i+0xc2>
 80011c2:	681b      	ldr	r3, [r3, #0]
 80011c4:	e002      	b.n	80011cc <_printf_i+0xc8>
 80011c6:	0668      	lsls	r0, r5, #25
 80011c8:	d5fb      	bpl.n	80011c2 <_printf_i+0xbe>
 80011ca:	881b      	ldrh	r3, [r3, #0]
 80011cc:	4854      	ldr	r0, [pc, #336]	; (8001320 <_printf_i+0x21c>)
 80011ce:	296f      	cmp	r1, #111	; 0x6f
 80011d0:	bf14      	ite	ne
 80011d2:	220a      	movne	r2, #10
 80011d4:	2208      	moveq	r2, #8
 80011d6:	2100      	movs	r1, #0
 80011d8:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80011dc:	6865      	ldr	r5, [r4, #4]
 80011de:	60a5      	str	r5, [r4, #8]
 80011e0:	2d00      	cmp	r5, #0
 80011e2:	f2c0 8095 	blt.w	8001310 <_printf_i+0x20c>
 80011e6:	6821      	ldr	r1, [r4, #0]
 80011e8:	f021 0104 	bic.w	r1, r1, #4
 80011ec:	6021      	str	r1, [r4, #0]
 80011ee:	2b00      	cmp	r3, #0
 80011f0:	d13d      	bne.n	800126e <_printf_i+0x16a>
 80011f2:	2d00      	cmp	r5, #0
 80011f4:	f040 808e 	bne.w	8001314 <_printf_i+0x210>
 80011f8:	4665      	mov	r5, ip
 80011fa:	2a08      	cmp	r2, #8
 80011fc:	d10b      	bne.n	8001216 <_printf_i+0x112>
 80011fe:	6823      	ldr	r3, [r4, #0]
 8001200:	07db      	lsls	r3, r3, #31
 8001202:	d508      	bpl.n	8001216 <_printf_i+0x112>
 8001204:	6923      	ldr	r3, [r4, #16]
 8001206:	6862      	ldr	r2, [r4, #4]
 8001208:	429a      	cmp	r2, r3
 800120a:	bfde      	ittt	le
 800120c:	2330      	movle	r3, #48	; 0x30
 800120e:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001212:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001216:	ebac 0305 	sub.w	r3, ip, r5
 800121a:	6123      	str	r3, [r4, #16]
 800121c:	f8cd 8000 	str.w	r8, [sp]
 8001220:	463b      	mov	r3, r7
 8001222:	aa03      	add	r2, sp, #12
 8001224:	4621      	mov	r1, r4
 8001226:	4630      	mov	r0, r6
 8001228:	f7ff fef6 	bl	8001018 <_printf_common>
 800122c:	3001      	adds	r0, #1
 800122e:	d14d      	bne.n	80012cc <_printf_i+0x1c8>
 8001230:	f04f 30ff 	mov.w	r0, #4294967295
 8001234:	b005      	add	sp, #20
 8001236:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800123a:	4839      	ldr	r0, [pc, #228]	; (8001320 <_printf_i+0x21c>)
 800123c:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8001240:	6813      	ldr	r3, [r2, #0]
 8001242:	6821      	ldr	r1, [r4, #0]
 8001244:	1d1d      	adds	r5, r3, #4
 8001246:	681b      	ldr	r3, [r3, #0]
 8001248:	6015      	str	r5, [r2, #0]
 800124a:	060a      	lsls	r2, r1, #24
 800124c:	d50b      	bpl.n	8001266 <_printf_i+0x162>
 800124e:	07ca      	lsls	r2, r1, #31
 8001250:	bf44      	itt	mi
 8001252:	f041 0120 	orrmi.w	r1, r1, #32
 8001256:	6021      	strmi	r1, [r4, #0]
 8001258:	b91b      	cbnz	r3, 8001262 <_printf_i+0x15e>
 800125a:	6822      	ldr	r2, [r4, #0]
 800125c:	f022 0220 	bic.w	r2, r2, #32
 8001260:	6022      	str	r2, [r4, #0]
 8001262:	2210      	movs	r2, #16
 8001264:	e7b7      	b.n	80011d6 <_printf_i+0xd2>
 8001266:	064d      	lsls	r5, r1, #25
 8001268:	bf48      	it	mi
 800126a:	b29b      	uxthmi	r3, r3
 800126c:	e7ef      	b.n	800124e <_printf_i+0x14a>
 800126e:	4665      	mov	r5, ip
 8001270:	fbb3 f1f2 	udiv	r1, r3, r2
 8001274:	fb02 3311 	mls	r3, r2, r1, r3
 8001278:	5cc3      	ldrb	r3, [r0, r3]
 800127a:	f805 3d01 	strb.w	r3, [r5, #-1]!
 800127e:	460b      	mov	r3, r1
 8001280:	2900      	cmp	r1, #0
 8001282:	d1f5      	bne.n	8001270 <_printf_i+0x16c>
 8001284:	e7b9      	b.n	80011fa <_printf_i+0xf6>
 8001286:	6813      	ldr	r3, [r2, #0]
 8001288:	6825      	ldr	r5, [r4, #0]
 800128a:	6961      	ldr	r1, [r4, #20]
 800128c:	1d18      	adds	r0, r3, #4
 800128e:	6010      	str	r0, [r2, #0]
 8001290:	0628      	lsls	r0, r5, #24
 8001292:	681b      	ldr	r3, [r3, #0]
 8001294:	d501      	bpl.n	800129a <_printf_i+0x196>
 8001296:	6019      	str	r1, [r3, #0]
 8001298:	e002      	b.n	80012a0 <_printf_i+0x19c>
 800129a:	066a      	lsls	r2, r5, #25
 800129c:	d5fb      	bpl.n	8001296 <_printf_i+0x192>
 800129e:	8019      	strh	r1, [r3, #0]
 80012a0:	2300      	movs	r3, #0
 80012a2:	6123      	str	r3, [r4, #16]
 80012a4:	4665      	mov	r5, ip
 80012a6:	e7b9      	b.n	800121c <_printf_i+0x118>
 80012a8:	6813      	ldr	r3, [r2, #0]
 80012aa:	1d19      	adds	r1, r3, #4
 80012ac:	6011      	str	r1, [r2, #0]
 80012ae:	681d      	ldr	r5, [r3, #0]
 80012b0:	6862      	ldr	r2, [r4, #4]
 80012b2:	2100      	movs	r1, #0
 80012b4:	4628      	mov	r0, r5
 80012b6:	f7fe ffab 	bl	8000210 <memchr>
 80012ba:	b108      	cbz	r0, 80012c0 <_printf_i+0x1bc>
 80012bc:	1b40      	subs	r0, r0, r5
 80012be:	6060      	str	r0, [r4, #4]
 80012c0:	6863      	ldr	r3, [r4, #4]
 80012c2:	6123      	str	r3, [r4, #16]
 80012c4:	2300      	movs	r3, #0
 80012c6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80012ca:	e7a7      	b.n	800121c <_printf_i+0x118>
 80012cc:	6923      	ldr	r3, [r4, #16]
 80012ce:	462a      	mov	r2, r5
 80012d0:	4639      	mov	r1, r7
 80012d2:	4630      	mov	r0, r6
 80012d4:	47c0      	blx	r8
 80012d6:	3001      	adds	r0, #1
 80012d8:	d0aa      	beq.n	8001230 <_printf_i+0x12c>
 80012da:	6823      	ldr	r3, [r4, #0]
 80012dc:	079b      	lsls	r3, r3, #30
 80012de:	d413      	bmi.n	8001308 <_printf_i+0x204>
 80012e0:	68e0      	ldr	r0, [r4, #12]
 80012e2:	9b03      	ldr	r3, [sp, #12]
 80012e4:	4298      	cmp	r0, r3
 80012e6:	bfb8      	it	lt
 80012e8:	4618      	movlt	r0, r3
 80012ea:	e7a3      	b.n	8001234 <_printf_i+0x130>
 80012ec:	2301      	movs	r3, #1
 80012ee:	464a      	mov	r2, r9
 80012f0:	4639      	mov	r1, r7
 80012f2:	4630      	mov	r0, r6
 80012f4:	47c0      	blx	r8
 80012f6:	3001      	adds	r0, #1
 80012f8:	d09a      	beq.n	8001230 <_printf_i+0x12c>
 80012fa:	3501      	adds	r5, #1
 80012fc:	68e3      	ldr	r3, [r4, #12]
 80012fe:	9a03      	ldr	r2, [sp, #12]
 8001300:	1a9b      	subs	r3, r3, r2
 8001302:	42ab      	cmp	r3, r5
 8001304:	dcf2      	bgt.n	80012ec <_printf_i+0x1e8>
 8001306:	e7eb      	b.n	80012e0 <_printf_i+0x1dc>
 8001308:	2500      	movs	r5, #0
 800130a:	f104 0919 	add.w	r9, r4, #25
 800130e:	e7f5      	b.n	80012fc <_printf_i+0x1f8>
 8001310:	2b00      	cmp	r3, #0
 8001312:	d1ac      	bne.n	800126e <_printf_i+0x16a>
 8001314:	7803      	ldrb	r3, [r0, #0]
 8001316:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800131a:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800131e:	e76c      	b.n	80011fa <_printf_i+0xf6>
 8001320:	0800166d 	.word	0x0800166d
 8001324:	0800167e 	.word	0x0800167e

08001328 <_sbrk_r>:
 8001328:	b538      	push	{r3, r4, r5, lr}
 800132a:	4c06      	ldr	r4, [pc, #24]	; (8001344 <_sbrk_r+0x1c>)
 800132c:	2300      	movs	r3, #0
 800132e:	4605      	mov	r5, r0
 8001330:	4608      	mov	r0, r1
 8001332:	6023      	str	r3, [r4, #0]
 8001334:	f7ff f8e6 	bl	8000504 <_sbrk>
 8001338:	1c43      	adds	r3, r0, #1
 800133a:	d102      	bne.n	8001342 <_sbrk_r+0x1a>
 800133c:	6823      	ldr	r3, [r4, #0]
 800133e:	b103      	cbz	r3, 8001342 <_sbrk_r+0x1a>
 8001340:	602b      	str	r3, [r5, #0]
 8001342:	bd38      	pop	{r3, r4, r5, pc}
 8001344:	2000008c 	.word	0x2000008c

08001348 <__sread>:
 8001348:	b510      	push	{r4, lr}
 800134a:	460c      	mov	r4, r1
 800134c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001350:	f000 f896 	bl	8001480 <_read_r>
 8001354:	2800      	cmp	r0, #0
 8001356:	bfab      	itete	ge
 8001358:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800135a:	89a3      	ldrhlt	r3, [r4, #12]
 800135c:	181b      	addge	r3, r3, r0
 800135e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001362:	bfac      	ite	ge
 8001364:	6563      	strge	r3, [r4, #84]	; 0x54
 8001366:	81a3      	strhlt	r3, [r4, #12]
 8001368:	bd10      	pop	{r4, pc}

0800136a <__swrite>:
 800136a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800136e:	461f      	mov	r7, r3
 8001370:	898b      	ldrh	r3, [r1, #12]
 8001372:	05db      	lsls	r3, r3, #23
 8001374:	4605      	mov	r5, r0
 8001376:	460c      	mov	r4, r1
 8001378:	4616      	mov	r6, r2
 800137a:	d505      	bpl.n	8001388 <__swrite+0x1e>
 800137c:	2302      	movs	r3, #2
 800137e:	2200      	movs	r2, #0
 8001380:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001384:	f000 f868 	bl	8001458 <_lseek_r>
 8001388:	89a3      	ldrh	r3, [r4, #12]
 800138a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800138e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001392:	81a3      	strh	r3, [r4, #12]
 8001394:	4632      	mov	r2, r6
 8001396:	463b      	mov	r3, r7
 8001398:	4628      	mov	r0, r5
 800139a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800139e:	f000 b817 	b.w	80013d0 <_write_r>

080013a2 <__sseek>:
 80013a2:	b510      	push	{r4, lr}
 80013a4:	460c      	mov	r4, r1
 80013a6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013aa:	f000 f855 	bl	8001458 <_lseek_r>
 80013ae:	1c43      	adds	r3, r0, #1
 80013b0:	89a3      	ldrh	r3, [r4, #12]
 80013b2:	bf15      	itete	ne
 80013b4:	6560      	strne	r0, [r4, #84]	; 0x54
 80013b6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80013ba:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80013be:	81a3      	strheq	r3, [r4, #12]
 80013c0:	bf18      	it	ne
 80013c2:	81a3      	strhne	r3, [r4, #12]
 80013c4:	bd10      	pop	{r4, pc}

080013c6 <__sclose>:
 80013c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013ca:	f000 b813 	b.w	80013f4 <_close_r>
	...

080013d0 <_write_r>:
 80013d0:	b538      	push	{r3, r4, r5, lr}
 80013d2:	4c07      	ldr	r4, [pc, #28]	; (80013f0 <_write_r+0x20>)
 80013d4:	4605      	mov	r5, r0
 80013d6:	4608      	mov	r0, r1
 80013d8:	4611      	mov	r1, r2
 80013da:	2200      	movs	r2, #0
 80013dc:	6022      	str	r2, [r4, #0]
 80013de:	461a      	mov	r2, r3
 80013e0:	f7ff f840 	bl	8000464 <_write>
 80013e4:	1c43      	adds	r3, r0, #1
 80013e6:	d102      	bne.n	80013ee <_write_r+0x1e>
 80013e8:	6823      	ldr	r3, [r4, #0]
 80013ea:	b103      	cbz	r3, 80013ee <_write_r+0x1e>
 80013ec:	602b      	str	r3, [r5, #0]
 80013ee:	bd38      	pop	{r3, r4, r5, pc}
 80013f0:	2000008c 	.word	0x2000008c

080013f4 <_close_r>:
 80013f4:	b538      	push	{r3, r4, r5, lr}
 80013f6:	4c06      	ldr	r4, [pc, #24]	; (8001410 <_close_r+0x1c>)
 80013f8:	2300      	movs	r3, #0
 80013fa:	4605      	mov	r5, r0
 80013fc:	4608      	mov	r0, r1
 80013fe:	6023      	str	r3, [r4, #0]
 8001400:	f7ff f84c 	bl	800049c <_close>
 8001404:	1c43      	adds	r3, r0, #1
 8001406:	d102      	bne.n	800140e <_close_r+0x1a>
 8001408:	6823      	ldr	r3, [r4, #0]
 800140a:	b103      	cbz	r3, 800140e <_close_r+0x1a>
 800140c:	602b      	str	r3, [r5, #0]
 800140e:	bd38      	pop	{r3, r4, r5, pc}
 8001410:	2000008c 	.word	0x2000008c

08001414 <_fstat_r>:
 8001414:	b538      	push	{r3, r4, r5, lr}
 8001416:	4c07      	ldr	r4, [pc, #28]	; (8001434 <_fstat_r+0x20>)
 8001418:	2300      	movs	r3, #0
 800141a:	4605      	mov	r5, r0
 800141c:	4608      	mov	r0, r1
 800141e:	4611      	mov	r1, r2
 8001420:	6023      	str	r3, [r4, #0]
 8001422:	f7ff f847 	bl	80004b4 <_fstat>
 8001426:	1c43      	adds	r3, r0, #1
 8001428:	d102      	bne.n	8001430 <_fstat_r+0x1c>
 800142a:	6823      	ldr	r3, [r4, #0]
 800142c:	b103      	cbz	r3, 8001430 <_fstat_r+0x1c>
 800142e:	602b      	str	r3, [r5, #0]
 8001430:	bd38      	pop	{r3, r4, r5, pc}
 8001432:	bf00      	nop
 8001434:	2000008c 	.word	0x2000008c

08001438 <_isatty_r>:
 8001438:	b538      	push	{r3, r4, r5, lr}
 800143a:	4c06      	ldr	r4, [pc, #24]	; (8001454 <_isatty_r+0x1c>)
 800143c:	2300      	movs	r3, #0
 800143e:	4605      	mov	r5, r0
 8001440:	4608      	mov	r0, r1
 8001442:	6023      	str	r3, [r4, #0]
 8001444:	f7ff f846 	bl	80004d4 <_isatty>
 8001448:	1c43      	adds	r3, r0, #1
 800144a:	d102      	bne.n	8001452 <_isatty_r+0x1a>
 800144c:	6823      	ldr	r3, [r4, #0]
 800144e:	b103      	cbz	r3, 8001452 <_isatty_r+0x1a>
 8001450:	602b      	str	r3, [r5, #0]
 8001452:	bd38      	pop	{r3, r4, r5, pc}
 8001454:	2000008c 	.word	0x2000008c

08001458 <_lseek_r>:
 8001458:	b538      	push	{r3, r4, r5, lr}
 800145a:	4c07      	ldr	r4, [pc, #28]	; (8001478 <_lseek_r+0x20>)
 800145c:	4605      	mov	r5, r0
 800145e:	4608      	mov	r0, r1
 8001460:	4611      	mov	r1, r2
 8001462:	2200      	movs	r2, #0
 8001464:	6022      	str	r2, [r4, #0]
 8001466:	461a      	mov	r2, r3
 8001468:	f7ff f83f 	bl	80004ea <_lseek>
 800146c:	1c43      	adds	r3, r0, #1
 800146e:	d102      	bne.n	8001476 <_lseek_r+0x1e>
 8001470:	6823      	ldr	r3, [r4, #0]
 8001472:	b103      	cbz	r3, 8001476 <_lseek_r+0x1e>
 8001474:	602b      	str	r3, [r5, #0]
 8001476:	bd38      	pop	{r3, r4, r5, pc}
 8001478:	2000008c 	.word	0x2000008c

0800147c <__malloc_lock>:
 800147c:	4770      	bx	lr

0800147e <__malloc_unlock>:
 800147e:	4770      	bx	lr

08001480 <_read_r>:
 8001480:	b538      	push	{r3, r4, r5, lr}
 8001482:	4c07      	ldr	r4, [pc, #28]	; (80014a0 <_read_r+0x20>)
 8001484:	4605      	mov	r5, r0
 8001486:	4608      	mov	r0, r1
 8001488:	4611      	mov	r1, r2
 800148a:	2200      	movs	r2, #0
 800148c:	6022      	str	r2, [r4, #0]
 800148e:	461a      	mov	r2, r3
 8001490:	f7fe ffcb 	bl	800042a <_read>
 8001494:	1c43      	adds	r3, r0, #1
 8001496:	d102      	bne.n	800149e <_read_r+0x1e>
 8001498:	6823      	ldr	r3, [r4, #0]
 800149a:	b103      	cbz	r3, 800149e <_read_r+0x1e>
 800149c:	602b      	str	r3, [r5, #0]
 800149e:	bd38      	pop	{r3, r4, r5, pc}
 80014a0:	2000008c 	.word	0x2000008c

080014a4 <_init>:
 80014a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014a6:	bf00      	nop
 80014a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014aa:	bc08      	pop	{r3}
 80014ac:	469e      	mov	lr, r3
 80014ae:	4770      	bx	lr

080014b0 <_fini>:
 80014b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014b2:	bf00      	nop
 80014b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014b6:	bc08      	pop	{r3}
 80014b8:	469e      	mov	lr, r3
 80014ba:	4770      	bx	lr
