
SVC_Handler_Arithmetic.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001304  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000120  080014d4  080014d4  000114d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080015f4  080015f4  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080015f4  080015f4  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080015f4  080015f4  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080015f4  080015f4  000115f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080015f8  080015f8  000115f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080015fc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  08001660  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  08001660  00020090  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002271  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000639  00000000  00000000  00022305  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000140  00000000  00000000  00022940  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000108  00000000  00000000  00022a80  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002ba5  00000000  00000000  00022b88  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000138d  00000000  00000000  0002572d  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00009101  00000000  00000000  00026aba  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002fbbb  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b54  00000000  00000000  0002fc38  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080014bc 	.word	0x080014bc

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	080014bc 	.word	0x080014bc

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <add_numbers>:
#include<stdio.h>

void SVC_Handle_c(uint32_t *pBaseStackFrame);

int32_t add_numbers(int32_t x , int32_t y )
{
 80002b0:	b480      	push	{r7}
 80002b2:	b085      	sub	sp, #20
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]
 80002b8:	6039      	str	r1, [r7, #0]
    int32_t res;
    __asm volatile("SVC #36");
 80002ba:	df24      	svc	36	; 0x24
    __asm volatile ("MOV %0,R0": "=r"(res) ::);
 80002bc:	4603      	mov	r3, r0
 80002be:	60fb      	str	r3, [r7, #12]
    return res;
 80002c0:	68fb      	ldr	r3, [r7, #12]

}
 80002c2:	4618      	mov	r0, r3
 80002c4:	3714      	adds	r7, #20
 80002c6:	46bd      	mov	sp, r7
 80002c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002cc:	4770      	bx	lr

080002ce <sub_numbers>:


int32_t sub_numbers(int32_t x , int32_t y )
{
 80002ce:	b480      	push	{r7}
 80002d0:	b085      	sub	sp, #20
 80002d2:	af00      	add	r7, sp, #0
 80002d4:	6078      	str	r0, [r7, #4]
 80002d6:	6039      	str	r1, [r7, #0]
	  int32_t res;
	    __asm volatile("SVC #37");
 80002d8:	df25      	svc	37	; 0x25
	    __asm volatile ("MOV %0,R0": "=r"(res) ::);
 80002da:	4603      	mov	r3, r0
 80002dc:	60fb      	str	r3, [r7, #12]
	    return res;
 80002de:	68fb      	ldr	r3, [r7, #12]


}
 80002e0:	4618      	mov	r0, r3
 80002e2:	3714      	adds	r7, #20
 80002e4:	46bd      	mov	sp, r7
 80002e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ea:	4770      	bx	lr

080002ec <mul_numbers>:

int32_t mul_numbers(int32_t x , int32_t y )
{
 80002ec:	b480      	push	{r7}
 80002ee:	b085      	sub	sp, #20
 80002f0:	af00      	add	r7, sp, #0
 80002f2:	6078      	str	r0, [r7, #4]
 80002f4:	6039      	str	r1, [r7, #0]
		int32_t res;
	    __asm volatile("SVC #38");
 80002f6:	df26      	svc	38	; 0x26
	    __asm volatile ("MOV %0,R0": "=r"(res) ::);
 80002f8:	4603      	mov	r3, r0
 80002fa:	60fb      	str	r3, [r7, #12]
	    return res;
 80002fc:	68fb      	ldr	r3, [r7, #12]

}
 80002fe:	4618      	mov	r0, r3
 8000300:	3714      	adds	r7, #20
 8000302:	46bd      	mov	sp, r7
 8000304:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000308:	4770      	bx	lr

0800030a <div_numbers>:

int32_t div_numbers(int32_t x , int32_t y )
{
 800030a:	b480      	push	{r7}
 800030c:	b085      	sub	sp, #20
 800030e:	af00      	add	r7, sp, #0
 8000310:	6078      	str	r0, [r7, #4]
 8000312:	6039      	str	r1, [r7, #0]
	  int32_t res;
	    __asm volatile("SVC #39");
 8000314:	df27      	svc	39	; 0x27
	    __asm volatile ("MOV %0,R0": "=r"(res) ::);
 8000316:	4603      	mov	r3, r0
 8000318:	60fb      	str	r3, [r7, #12]
	    return res;
 800031a:	68fb      	ldr	r3, [r7, #12]


}
 800031c:	4618      	mov	r0, r3
 800031e:	3714      	adds	r7, #20
 8000320:	46bd      	mov	sp, r7
 8000322:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000326:	4770      	bx	lr

08000328 <main>:


int main(void)
{
 8000328:	b580      	push	{r7, lr}
 800032a:	b082      	sub	sp, #8
 800032c:	af00      	add	r7, sp, #0
    int32_t res;

    res = add_numbers(40, -90);
 800032e:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8000332:	2028      	movs	r0, #40	; 0x28
 8000334:	f7ff ffbc 	bl	80002b0 <add_numbers>
 8000338:	6078      	str	r0, [r7, #4]
    printf("Add result = %ld\n",res);
 800033a:	6879      	ldr	r1, [r7, #4]
 800033c:	4810      	ldr	r0, [pc, #64]	; (8000380 <main+0x58>)
 800033e:	f000 f975 	bl	800062c <iprintf>

    res = sub_numbers(25,150);
 8000342:	2196      	movs	r1, #150	; 0x96
 8000344:	2019      	movs	r0, #25
 8000346:	f7ff ffc2 	bl	80002ce <sub_numbers>
 800034a:	6078      	str	r0, [r7, #4]
    printf("Sub result = %ld\n",res);
 800034c:	6879      	ldr	r1, [r7, #4]
 800034e:	480d      	ldr	r0, [pc, #52]	; (8000384 <main+0x5c>)
 8000350:	f000 f96c 	bl	800062c <iprintf>

    res = mul_numbers(374,890);
 8000354:	f240 317a 	movw	r1, #890	; 0x37a
 8000358:	f44f 70bb 	mov.w	r0, #374	; 0x176
 800035c:	f7ff ffc6 	bl	80002ec <mul_numbers>
 8000360:	6078      	str	r0, [r7, #4]
    printf("mul result = %ld\n", res);
 8000362:	6879      	ldr	r1, [r7, #4]
 8000364:	4808      	ldr	r0, [pc, #32]	; (8000388 <main+0x60>)
 8000366:	f000 f961 	bl	800062c <iprintf>

    res = div_numbers(67,-3);
 800036a:	f06f 0102 	mvn.w	r1, #2
 800036e:	2043      	movs	r0, #67	; 0x43
 8000370:	f7ff ffcb 	bl	800030a <div_numbers>
 8000374:	6078      	str	r0, [r7, #4]
    printf("div result = %ld\n",res);
 8000376:	6879      	ldr	r1, [r7, #4]
 8000378:	4804      	ldr	r0, [pc, #16]	; (800038c <main+0x64>)
 800037a:	f000 f957 	bl	800062c <iprintf>

    for(;;);
 800037e:	e7fe      	b.n	800037e <main+0x56>
 8000380:	080014d4 	.word	0x080014d4
 8000384:	080014e8 	.word	0x080014e8
 8000388:	080014fc 	.word	0x080014fc
 800038c:	08001510 	.word	0x08001510

08000390 <SVC_Handler>:
}


__attribute__( ( naked ) ) void SVC_Handler( void )
{
    __asm ("MRS r0,MSP");
 8000390:	f3ef 8008 	mrs	r0, MSP
    __asm( "B SVC_Handler_c");
 8000394:	f000 b802 	b.w	800039c <SVC_Handler_c>
}
 8000398:	bf00      	nop
	...

0800039c <SVC_Handler_c>:


void SVC_Handler_c(uint32_t *pBaseOfStackFrame)
{
 800039c:	b580      	push	{r7, lr}
 800039e:	b088      	sub	sp, #32
 80003a0:	af00      	add	r7, sp, #0
 80003a2:	6078      	str	r0, [r7, #4]
    printf("in SVC handler\n");
 80003a4:	4823      	ldr	r0, [pc, #140]	; (8000434 <SVC_Handler_c+0x98>)
 80003a6:	f000 f9b5 	bl	8000714 <puts>

    uint8_t *pReturn_addr = (uint8_t*)pBaseOfStackFrame[6];
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	3318      	adds	r3, #24
 80003ae:	681b      	ldr	r3, [r3, #0]
 80003b0:	61bb      	str	r3, [r7, #24]

    //2. decrement the return address by 2 to point to
    //opcode of the SVC instruction in the program memory
    pReturn_addr-=2;
 80003b2:	69bb      	ldr	r3, [r7, #24]
 80003b4:	3b02      	subs	r3, #2
 80003b6:	61bb      	str	r3, [r7, #24]


    //3. extract the SVC number (LSByte of the opcode)
    uint8_t svc_number = *pReturn_addr;
 80003b8:	69bb      	ldr	r3, [r7, #24]
 80003ba:	781b      	ldrb	r3, [r3, #0]
 80003bc:	75fb      	strb	r3, [r7, #23]

    printf("Svc number is : %d\n",svc_number);
 80003be:	7dfb      	ldrb	r3, [r7, #23]
 80003c0:	4619      	mov	r1, r3
 80003c2:	481d      	ldr	r0, [pc, #116]	; (8000438 <SVC_Handler_c+0x9c>)
 80003c4:	f000 f932 	bl	800062c <iprintf>
    // extract the operands
    // by the procedure call document, first operand is stored in r0 which is pBaseOfStackFrame[0] i.e 1st element of the MSP
    // similarly first argument is stored in r1 which is pBaseOfStackFrame[1]
    uint32_t arg0,arg1,res;

    arg0=pBaseOfStackFrame[0];
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	613b      	str	r3, [r7, #16]
    arg1=pBaseOfStackFrame[1];
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	685b      	ldr	r3, [r3, #4]
 80003d2:	60fb      	str	r3, [r7, #12]

/*SVC number signifies the type of operation , decode it */
    switch(svc_number)
 80003d4:	7dfb      	ldrb	r3, [r7, #23]
 80003d6:	3b24      	subs	r3, #36	; 0x24
 80003d8:	2b03      	cmp	r3, #3
 80003da:	d821      	bhi.n	8000420 <SVC_Handler_c+0x84>
 80003dc:	a201      	add	r2, pc, #4	; (adr r2, 80003e4 <SVC_Handler_c+0x48>)
 80003de:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80003e2:	bf00      	nop
 80003e4:	080003f5 	.word	0x080003f5
 80003e8:	080003ff 	.word	0x080003ff
 80003ec:	08000409 	.word	0x08000409
 80003f0:	08000415 	.word	0x08000415
    {
    case 36:
        res=arg0 + arg1;
 80003f4:	693a      	ldr	r2, [r7, #16]
 80003f6:	68fb      	ldr	r3, [r7, #12]
 80003f8:	4413      	add	r3, r2
 80003fa:	61fb      	str	r3, [r7, #28]
        break;
 80003fc:	e013      	b.n	8000426 <SVC_Handler_c+0x8a>
    case 37:
    	res=arg0 - arg1;
 80003fe:	693a      	ldr	r2, [r7, #16]
 8000400:	68fb      	ldr	r3, [r7, #12]
 8000402:	1ad3      	subs	r3, r2, r3
 8000404:	61fb      	str	r3, [r7, #28]
        break;
 8000406:	e00e      	b.n	8000426 <SVC_Handler_c+0x8a>
    case 38:
    	res=arg0 * arg1;
 8000408:	693b      	ldr	r3, [r7, #16]
 800040a:	68fa      	ldr	r2, [r7, #12]
 800040c:	fb02 f303 	mul.w	r3, r2, r3
 8000410:	61fb      	str	r3, [r7, #28]
        break;
 8000412:	e008      	b.n	8000426 <SVC_Handler_c+0x8a>
    case 39:
    	res=arg0 / arg1;
 8000414:	693a      	ldr	r2, [r7, #16]
 8000416:	68fb      	ldr	r3, [r7, #12]
 8000418:	fbb2 f3f3 	udiv	r3, r2, r3
 800041c:	61fb      	str	r3, [r7, #28]
        break;
 800041e:	e002      	b.n	8000426 <SVC_Handler_c+0x8a>
    default:
        printf("invalid svc code\n");
 8000420:	4806      	ldr	r0, [pc, #24]	; (800043c <SVC_Handler_c+0xa0>)
 8000422:	f000 f977 	bl	8000714 <puts>

    }

/*store the result back to stack frame at R0's position */
    pBaseOfStackFrame[0] = res; //send res via stackframe
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	69fa      	ldr	r2, [r7, #28]
 800042a:	601a      	str	r2, [r3, #0]

}
 800042c:	bf00      	nop
 800042e:	3720      	adds	r7, #32
 8000430:	46bd      	mov	sp, r7
 8000432:	bd80      	pop	{r7, pc}
 8000434:	08001524 	.word	0x08001524
 8000438:	08001534 	.word	0x08001534
 800043c:	08001548 	.word	0x08001548

08000440 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000440:	b580      	push	{r7, lr}
 8000442:	b086      	sub	sp, #24
 8000444:	af00      	add	r7, sp, #0
 8000446:	60f8      	str	r0, [r7, #12]
 8000448:	60b9      	str	r1, [r7, #8]
 800044a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800044c:	2300      	movs	r3, #0
 800044e:	617b      	str	r3, [r7, #20]
 8000450:	e00a      	b.n	8000468 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000452:	f3af 8000 	nop.w
 8000456:	4601      	mov	r1, r0
 8000458:	68bb      	ldr	r3, [r7, #8]
 800045a:	1c5a      	adds	r2, r3, #1
 800045c:	60ba      	str	r2, [r7, #8]
 800045e:	b2ca      	uxtb	r2, r1
 8000460:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000462:	697b      	ldr	r3, [r7, #20]
 8000464:	3301      	adds	r3, #1
 8000466:	617b      	str	r3, [r7, #20]
 8000468:	697a      	ldr	r2, [r7, #20]
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	429a      	cmp	r2, r3
 800046e:	dbf0      	blt.n	8000452 <_read+0x12>
	}

return len;
 8000470:	687b      	ldr	r3, [r7, #4]
}
 8000472:	4618      	mov	r0, r3
 8000474:	3718      	adds	r7, #24
 8000476:	46bd      	mov	sp, r7
 8000478:	bd80      	pop	{r7, pc}

0800047a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800047a:	b580      	push	{r7, lr}
 800047c:	b086      	sub	sp, #24
 800047e:	af00      	add	r7, sp, #0
 8000480:	60f8      	str	r0, [r7, #12]
 8000482:	60b9      	str	r1, [r7, #8]
 8000484:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000486:	2300      	movs	r3, #0
 8000488:	617b      	str	r3, [r7, #20]
 800048a:	e009      	b.n	80004a0 <_write+0x26>
	{
		__io_putchar(*ptr++);
 800048c:	68bb      	ldr	r3, [r7, #8]
 800048e:	1c5a      	adds	r2, r3, #1
 8000490:	60ba      	str	r2, [r7, #8]
 8000492:	781b      	ldrb	r3, [r3, #0]
 8000494:	4618      	mov	r0, r3
 8000496:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800049a:	697b      	ldr	r3, [r7, #20]
 800049c:	3301      	adds	r3, #1
 800049e:	617b      	str	r3, [r7, #20]
 80004a0:	697a      	ldr	r2, [r7, #20]
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	429a      	cmp	r2, r3
 80004a6:	dbf1      	blt.n	800048c <_write+0x12>
	}
	return len;
 80004a8:	687b      	ldr	r3, [r7, #4]
}
 80004aa:	4618      	mov	r0, r3
 80004ac:	3718      	adds	r7, #24
 80004ae:	46bd      	mov	sp, r7
 80004b0:	bd80      	pop	{r7, pc}

080004b2 <_close>:

int _close(int file)
{
 80004b2:	b480      	push	{r7}
 80004b4:	b083      	sub	sp, #12
 80004b6:	af00      	add	r7, sp, #0
 80004b8:	6078      	str	r0, [r7, #4]
	return -1;
 80004ba:	f04f 33ff 	mov.w	r3, #4294967295
}
 80004be:	4618      	mov	r0, r3
 80004c0:	370c      	adds	r7, #12
 80004c2:	46bd      	mov	sp, r7
 80004c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004c8:	4770      	bx	lr

080004ca <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004ca:	b480      	push	{r7}
 80004cc:	b083      	sub	sp, #12
 80004ce:	af00      	add	r7, sp, #0
 80004d0:	6078      	str	r0, [r7, #4]
 80004d2:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80004d4:	683b      	ldr	r3, [r7, #0]
 80004d6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80004da:	605a      	str	r2, [r3, #4]
	return 0;
 80004dc:	2300      	movs	r3, #0
}
 80004de:	4618      	mov	r0, r3
 80004e0:	370c      	adds	r7, #12
 80004e2:	46bd      	mov	sp, r7
 80004e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004e8:	4770      	bx	lr

080004ea <_isatty>:

int _isatty(int file)
{
 80004ea:	b480      	push	{r7}
 80004ec:	b083      	sub	sp, #12
 80004ee:	af00      	add	r7, sp, #0
 80004f0:	6078      	str	r0, [r7, #4]
	return 1;
 80004f2:	2301      	movs	r3, #1
}
 80004f4:	4618      	mov	r0, r3
 80004f6:	370c      	adds	r7, #12
 80004f8:	46bd      	mov	sp, r7
 80004fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004fe:	4770      	bx	lr

08000500 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000500:	b480      	push	{r7}
 8000502:	b085      	sub	sp, #20
 8000504:	af00      	add	r7, sp, #0
 8000506:	60f8      	str	r0, [r7, #12]
 8000508:	60b9      	str	r1, [r7, #8]
 800050a:	607a      	str	r2, [r7, #4]
	return 0;
 800050c:	2300      	movs	r3, #0
}
 800050e:	4618      	mov	r0, r3
 8000510:	3714      	adds	r7, #20
 8000512:	46bd      	mov	sp, r7
 8000514:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000518:	4770      	bx	lr
	...

0800051c <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 800051c:	b580      	push	{r7, lr}
 800051e:	b084      	sub	sp, #16
 8000520:	af00      	add	r7, sp, #0
 8000522:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8000524:	4b11      	ldr	r3, [pc, #68]	; (800056c <_sbrk+0x50>)
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	2b00      	cmp	r3, #0
 800052a:	d102      	bne.n	8000532 <_sbrk+0x16>
		heap_end = &end;
 800052c:	4b0f      	ldr	r3, [pc, #60]	; (800056c <_sbrk+0x50>)
 800052e:	4a10      	ldr	r2, [pc, #64]	; (8000570 <_sbrk+0x54>)
 8000530:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 8000532:	4b0e      	ldr	r3, [pc, #56]	; (800056c <_sbrk+0x50>)
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8000538:	4b0c      	ldr	r3, [pc, #48]	; (800056c <_sbrk+0x50>)
 800053a:	681a      	ldr	r2, [r3, #0]
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	4413      	add	r3, r2
 8000540:	466a      	mov	r2, sp
 8000542:	4293      	cmp	r3, r2
 8000544:	d907      	bls.n	8000556 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 8000546:	f000 f83f 	bl	80005c8 <__errno>
 800054a:	4602      	mov	r2, r0
 800054c:	230c      	movs	r3, #12
 800054e:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 8000550:	f04f 33ff 	mov.w	r3, #4294967295
 8000554:	e006      	b.n	8000564 <_sbrk+0x48>
	}

	heap_end += incr;
 8000556:	4b05      	ldr	r3, [pc, #20]	; (800056c <_sbrk+0x50>)
 8000558:	681a      	ldr	r2, [r3, #0]
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	4413      	add	r3, r2
 800055e:	4a03      	ldr	r2, [pc, #12]	; (800056c <_sbrk+0x50>)
 8000560:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 8000562:	68fb      	ldr	r3, [r7, #12]
}
 8000564:	4618      	mov	r0, r3
 8000566:	3710      	adds	r7, #16
 8000568:	46bd      	mov	sp, r7
 800056a:	bd80      	pop	{r7, pc}
 800056c:	20000080 	.word	0x20000080
 8000570:	20000090 	.word	0x20000090

08000574 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000574:	480d      	ldr	r0, [pc, #52]	; (80005ac <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000576:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000578:	480d      	ldr	r0, [pc, #52]	; (80005b0 <LoopForever+0x6>)
  ldr r1, =_edata
 800057a:	490e      	ldr	r1, [pc, #56]	; (80005b4 <LoopForever+0xa>)
  ldr r2, =_sidata
 800057c:	4a0e      	ldr	r2, [pc, #56]	; (80005b8 <LoopForever+0xe>)
  movs r3, #0
 800057e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000580:	e002      	b.n	8000588 <LoopCopyDataInit>

08000582 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000582:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000584:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000586:	3304      	adds	r3, #4

08000588 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000588:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800058a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800058c:	d3f9      	bcc.n	8000582 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800058e:	4a0b      	ldr	r2, [pc, #44]	; (80005bc <LoopForever+0x12>)
  ldr r4, =_ebss
 8000590:	4c0b      	ldr	r4, [pc, #44]	; (80005c0 <LoopForever+0x16>)
  movs r3, #0
 8000592:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000594:	e001      	b.n	800059a <LoopFillZerobss>

08000596 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000596:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000598:	3204      	adds	r2, #4

0800059a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800059a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800059c:	d3fb      	bcc.n	8000596 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800059e:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80005a2:	f000 f817 	bl	80005d4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005a6:	f7ff febf 	bl	8000328 <main>

080005aa <LoopForever>:

LoopForever:
    b LoopForever
 80005aa:	e7fe      	b.n	80005aa <LoopForever>
  ldr   r0, =_estack
 80005ac:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80005b0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005b4:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80005b8:	080015fc 	.word	0x080015fc
  ldr r2, =_sbss
 80005bc:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80005c0:	20000090 	.word	0x20000090

080005c4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005c4:	e7fe      	b.n	80005c4 <ADC_IRQHandler>
	...

080005c8 <__errno>:
 80005c8:	4b01      	ldr	r3, [pc, #4]	; (80005d0 <__errno+0x8>)
 80005ca:	6818      	ldr	r0, [r3, #0]
 80005cc:	4770      	bx	lr
 80005ce:	bf00      	nop
 80005d0:	20000000 	.word	0x20000000

080005d4 <__libc_init_array>:
 80005d4:	b570      	push	{r4, r5, r6, lr}
 80005d6:	4e0d      	ldr	r6, [pc, #52]	; (800060c <__libc_init_array+0x38>)
 80005d8:	4c0d      	ldr	r4, [pc, #52]	; (8000610 <__libc_init_array+0x3c>)
 80005da:	1ba4      	subs	r4, r4, r6
 80005dc:	10a4      	asrs	r4, r4, #2
 80005de:	2500      	movs	r5, #0
 80005e0:	42a5      	cmp	r5, r4
 80005e2:	d109      	bne.n	80005f8 <__libc_init_array+0x24>
 80005e4:	4e0b      	ldr	r6, [pc, #44]	; (8000614 <__libc_init_array+0x40>)
 80005e6:	4c0c      	ldr	r4, [pc, #48]	; (8000618 <__libc_init_array+0x44>)
 80005e8:	f000 ff68 	bl	80014bc <_init>
 80005ec:	1ba4      	subs	r4, r4, r6
 80005ee:	10a4      	asrs	r4, r4, #2
 80005f0:	2500      	movs	r5, #0
 80005f2:	42a5      	cmp	r5, r4
 80005f4:	d105      	bne.n	8000602 <__libc_init_array+0x2e>
 80005f6:	bd70      	pop	{r4, r5, r6, pc}
 80005f8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005fc:	4798      	blx	r3
 80005fe:	3501      	adds	r5, #1
 8000600:	e7ee      	b.n	80005e0 <__libc_init_array+0xc>
 8000602:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000606:	4798      	blx	r3
 8000608:	3501      	adds	r5, #1
 800060a:	e7f2      	b.n	80005f2 <__libc_init_array+0x1e>
 800060c:	080015f4 	.word	0x080015f4
 8000610:	080015f4 	.word	0x080015f4
 8000614:	080015f4 	.word	0x080015f4
 8000618:	080015f8 	.word	0x080015f8

0800061c <memset>:
 800061c:	4402      	add	r2, r0
 800061e:	4603      	mov	r3, r0
 8000620:	4293      	cmp	r3, r2
 8000622:	d100      	bne.n	8000626 <memset+0xa>
 8000624:	4770      	bx	lr
 8000626:	f803 1b01 	strb.w	r1, [r3], #1
 800062a:	e7f9      	b.n	8000620 <memset+0x4>

0800062c <iprintf>:
 800062c:	b40f      	push	{r0, r1, r2, r3}
 800062e:	4b0a      	ldr	r3, [pc, #40]	; (8000658 <iprintf+0x2c>)
 8000630:	b513      	push	{r0, r1, r4, lr}
 8000632:	681c      	ldr	r4, [r3, #0]
 8000634:	b124      	cbz	r4, 8000640 <iprintf+0x14>
 8000636:	69a3      	ldr	r3, [r4, #24]
 8000638:	b913      	cbnz	r3, 8000640 <iprintf+0x14>
 800063a:	4620      	mov	r0, r4
 800063c:	f000 fa22 	bl	8000a84 <__sinit>
 8000640:	ab05      	add	r3, sp, #20
 8000642:	9a04      	ldr	r2, [sp, #16]
 8000644:	68a1      	ldr	r1, [r4, #8]
 8000646:	9301      	str	r3, [sp, #4]
 8000648:	4620      	mov	r0, r4
 800064a:	f000 fbdb 	bl	8000e04 <_vfiprintf_r>
 800064e:	b002      	add	sp, #8
 8000650:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000654:	b004      	add	sp, #16
 8000656:	4770      	bx	lr
 8000658:	20000000 	.word	0x20000000

0800065c <_puts_r>:
 800065c:	b570      	push	{r4, r5, r6, lr}
 800065e:	460e      	mov	r6, r1
 8000660:	4605      	mov	r5, r0
 8000662:	b118      	cbz	r0, 800066c <_puts_r+0x10>
 8000664:	6983      	ldr	r3, [r0, #24]
 8000666:	b90b      	cbnz	r3, 800066c <_puts_r+0x10>
 8000668:	f000 fa0c 	bl	8000a84 <__sinit>
 800066c:	69ab      	ldr	r3, [r5, #24]
 800066e:	68ac      	ldr	r4, [r5, #8]
 8000670:	b913      	cbnz	r3, 8000678 <_puts_r+0x1c>
 8000672:	4628      	mov	r0, r5
 8000674:	f000 fa06 	bl	8000a84 <__sinit>
 8000678:	4b23      	ldr	r3, [pc, #140]	; (8000708 <_puts_r+0xac>)
 800067a:	429c      	cmp	r4, r3
 800067c:	d117      	bne.n	80006ae <_puts_r+0x52>
 800067e:	686c      	ldr	r4, [r5, #4]
 8000680:	89a3      	ldrh	r3, [r4, #12]
 8000682:	071b      	lsls	r3, r3, #28
 8000684:	d51d      	bpl.n	80006c2 <_puts_r+0x66>
 8000686:	6923      	ldr	r3, [r4, #16]
 8000688:	b1db      	cbz	r3, 80006c2 <_puts_r+0x66>
 800068a:	3e01      	subs	r6, #1
 800068c:	68a3      	ldr	r3, [r4, #8]
 800068e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000692:	3b01      	subs	r3, #1
 8000694:	60a3      	str	r3, [r4, #8]
 8000696:	b9e9      	cbnz	r1, 80006d4 <_puts_r+0x78>
 8000698:	2b00      	cmp	r3, #0
 800069a:	da2e      	bge.n	80006fa <_puts_r+0x9e>
 800069c:	4622      	mov	r2, r4
 800069e:	210a      	movs	r1, #10
 80006a0:	4628      	mov	r0, r5
 80006a2:	f000 f83f 	bl	8000724 <__swbuf_r>
 80006a6:	3001      	adds	r0, #1
 80006a8:	d011      	beq.n	80006ce <_puts_r+0x72>
 80006aa:	200a      	movs	r0, #10
 80006ac:	e011      	b.n	80006d2 <_puts_r+0x76>
 80006ae:	4b17      	ldr	r3, [pc, #92]	; (800070c <_puts_r+0xb0>)
 80006b0:	429c      	cmp	r4, r3
 80006b2:	d101      	bne.n	80006b8 <_puts_r+0x5c>
 80006b4:	68ac      	ldr	r4, [r5, #8]
 80006b6:	e7e3      	b.n	8000680 <_puts_r+0x24>
 80006b8:	4b15      	ldr	r3, [pc, #84]	; (8000710 <_puts_r+0xb4>)
 80006ba:	429c      	cmp	r4, r3
 80006bc:	bf08      	it	eq
 80006be:	68ec      	ldreq	r4, [r5, #12]
 80006c0:	e7de      	b.n	8000680 <_puts_r+0x24>
 80006c2:	4621      	mov	r1, r4
 80006c4:	4628      	mov	r0, r5
 80006c6:	f000 f87f 	bl	80007c8 <__swsetup_r>
 80006ca:	2800      	cmp	r0, #0
 80006cc:	d0dd      	beq.n	800068a <_puts_r+0x2e>
 80006ce:	f04f 30ff 	mov.w	r0, #4294967295
 80006d2:	bd70      	pop	{r4, r5, r6, pc}
 80006d4:	2b00      	cmp	r3, #0
 80006d6:	da04      	bge.n	80006e2 <_puts_r+0x86>
 80006d8:	69a2      	ldr	r2, [r4, #24]
 80006da:	429a      	cmp	r2, r3
 80006dc:	dc06      	bgt.n	80006ec <_puts_r+0x90>
 80006de:	290a      	cmp	r1, #10
 80006e0:	d004      	beq.n	80006ec <_puts_r+0x90>
 80006e2:	6823      	ldr	r3, [r4, #0]
 80006e4:	1c5a      	adds	r2, r3, #1
 80006e6:	6022      	str	r2, [r4, #0]
 80006e8:	7019      	strb	r1, [r3, #0]
 80006ea:	e7cf      	b.n	800068c <_puts_r+0x30>
 80006ec:	4622      	mov	r2, r4
 80006ee:	4628      	mov	r0, r5
 80006f0:	f000 f818 	bl	8000724 <__swbuf_r>
 80006f4:	3001      	adds	r0, #1
 80006f6:	d1c9      	bne.n	800068c <_puts_r+0x30>
 80006f8:	e7e9      	b.n	80006ce <_puts_r+0x72>
 80006fa:	6823      	ldr	r3, [r4, #0]
 80006fc:	200a      	movs	r0, #10
 80006fe:	1c5a      	adds	r2, r3, #1
 8000700:	6022      	str	r2, [r4, #0]
 8000702:	7018      	strb	r0, [r3, #0]
 8000704:	e7e5      	b.n	80006d2 <_puts_r+0x76>
 8000706:	bf00      	nop
 8000708:	08001580 	.word	0x08001580
 800070c:	080015a0 	.word	0x080015a0
 8000710:	08001560 	.word	0x08001560

08000714 <puts>:
 8000714:	4b02      	ldr	r3, [pc, #8]	; (8000720 <puts+0xc>)
 8000716:	4601      	mov	r1, r0
 8000718:	6818      	ldr	r0, [r3, #0]
 800071a:	f7ff bf9f 	b.w	800065c <_puts_r>
 800071e:	bf00      	nop
 8000720:	20000000 	.word	0x20000000

08000724 <__swbuf_r>:
 8000724:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000726:	460e      	mov	r6, r1
 8000728:	4614      	mov	r4, r2
 800072a:	4605      	mov	r5, r0
 800072c:	b118      	cbz	r0, 8000736 <__swbuf_r+0x12>
 800072e:	6983      	ldr	r3, [r0, #24]
 8000730:	b90b      	cbnz	r3, 8000736 <__swbuf_r+0x12>
 8000732:	f000 f9a7 	bl	8000a84 <__sinit>
 8000736:	4b21      	ldr	r3, [pc, #132]	; (80007bc <__swbuf_r+0x98>)
 8000738:	429c      	cmp	r4, r3
 800073a:	d12a      	bne.n	8000792 <__swbuf_r+0x6e>
 800073c:	686c      	ldr	r4, [r5, #4]
 800073e:	69a3      	ldr	r3, [r4, #24]
 8000740:	60a3      	str	r3, [r4, #8]
 8000742:	89a3      	ldrh	r3, [r4, #12]
 8000744:	071a      	lsls	r2, r3, #28
 8000746:	d52e      	bpl.n	80007a6 <__swbuf_r+0x82>
 8000748:	6923      	ldr	r3, [r4, #16]
 800074a:	b363      	cbz	r3, 80007a6 <__swbuf_r+0x82>
 800074c:	6923      	ldr	r3, [r4, #16]
 800074e:	6820      	ldr	r0, [r4, #0]
 8000750:	1ac0      	subs	r0, r0, r3
 8000752:	6963      	ldr	r3, [r4, #20]
 8000754:	b2f6      	uxtb	r6, r6
 8000756:	4283      	cmp	r3, r0
 8000758:	4637      	mov	r7, r6
 800075a:	dc04      	bgt.n	8000766 <__swbuf_r+0x42>
 800075c:	4621      	mov	r1, r4
 800075e:	4628      	mov	r0, r5
 8000760:	f000 f926 	bl	80009b0 <_fflush_r>
 8000764:	bb28      	cbnz	r0, 80007b2 <__swbuf_r+0x8e>
 8000766:	68a3      	ldr	r3, [r4, #8]
 8000768:	3b01      	subs	r3, #1
 800076a:	60a3      	str	r3, [r4, #8]
 800076c:	6823      	ldr	r3, [r4, #0]
 800076e:	1c5a      	adds	r2, r3, #1
 8000770:	6022      	str	r2, [r4, #0]
 8000772:	701e      	strb	r6, [r3, #0]
 8000774:	6963      	ldr	r3, [r4, #20]
 8000776:	3001      	adds	r0, #1
 8000778:	4283      	cmp	r3, r0
 800077a:	d004      	beq.n	8000786 <__swbuf_r+0x62>
 800077c:	89a3      	ldrh	r3, [r4, #12]
 800077e:	07db      	lsls	r3, r3, #31
 8000780:	d519      	bpl.n	80007b6 <__swbuf_r+0x92>
 8000782:	2e0a      	cmp	r6, #10
 8000784:	d117      	bne.n	80007b6 <__swbuf_r+0x92>
 8000786:	4621      	mov	r1, r4
 8000788:	4628      	mov	r0, r5
 800078a:	f000 f911 	bl	80009b0 <_fflush_r>
 800078e:	b190      	cbz	r0, 80007b6 <__swbuf_r+0x92>
 8000790:	e00f      	b.n	80007b2 <__swbuf_r+0x8e>
 8000792:	4b0b      	ldr	r3, [pc, #44]	; (80007c0 <__swbuf_r+0x9c>)
 8000794:	429c      	cmp	r4, r3
 8000796:	d101      	bne.n	800079c <__swbuf_r+0x78>
 8000798:	68ac      	ldr	r4, [r5, #8]
 800079a:	e7d0      	b.n	800073e <__swbuf_r+0x1a>
 800079c:	4b09      	ldr	r3, [pc, #36]	; (80007c4 <__swbuf_r+0xa0>)
 800079e:	429c      	cmp	r4, r3
 80007a0:	bf08      	it	eq
 80007a2:	68ec      	ldreq	r4, [r5, #12]
 80007a4:	e7cb      	b.n	800073e <__swbuf_r+0x1a>
 80007a6:	4621      	mov	r1, r4
 80007a8:	4628      	mov	r0, r5
 80007aa:	f000 f80d 	bl	80007c8 <__swsetup_r>
 80007ae:	2800      	cmp	r0, #0
 80007b0:	d0cc      	beq.n	800074c <__swbuf_r+0x28>
 80007b2:	f04f 37ff 	mov.w	r7, #4294967295
 80007b6:	4638      	mov	r0, r7
 80007b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007ba:	bf00      	nop
 80007bc:	08001580 	.word	0x08001580
 80007c0:	080015a0 	.word	0x080015a0
 80007c4:	08001560 	.word	0x08001560

080007c8 <__swsetup_r>:
 80007c8:	4b32      	ldr	r3, [pc, #200]	; (8000894 <__swsetup_r+0xcc>)
 80007ca:	b570      	push	{r4, r5, r6, lr}
 80007cc:	681d      	ldr	r5, [r3, #0]
 80007ce:	4606      	mov	r6, r0
 80007d0:	460c      	mov	r4, r1
 80007d2:	b125      	cbz	r5, 80007de <__swsetup_r+0x16>
 80007d4:	69ab      	ldr	r3, [r5, #24]
 80007d6:	b913      	cbnz	r3, 80007de <__swsetup_r+0x16>
 80007d8:	4628      	mov	r0, r5
 80007da:	f000 f953 	bl	8000a84 <__sinit>
 80007de:	4b2e      	ldr	r3, [pc, #184]	; (8000898 <__swsetup_r+0xd0>)
 80007e0:	429c      	cmp	r4, r3
 80007e2:	d10f      	bne.n	8000804 <__swsetup_r+0x3c>
 80007e4:	686c      	ldr	r4, [r5, #4]
 80007e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007ea:	b29a      	uxth	r2, r3
 80007ec:	0715      	lsls	r5, r2, #28
 80007ee:	d42c      	bmi.n	800084a <__swsetup_r+0x82>
 80007f0:	06d0      	lsls	r0, r2, #27
 80007f2:	d411      	bmi.n	8000818 <__swsetup_r+0x50>
 80007f4:	2209      	movs	r2, #9
 80007f6:	6032      	str	r2, [r6, #0]
 80007f8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80007fc:	81a3      	strh	r3, [r4, #12]
 80007fe:	f04f 30ff 	mov.w	r0, #4294967295
 8000802:	e03e      	b.n	8000882 <__swsetup_r+0xba>
 8000804:	4b25      	ldr	r3, [pc, #148]	; (800089c <__swsetup_r+0xd4>)
 8000806:	429c      	cmp	r4, r3
 8000808:	d101      	bne.n	800080e <__swsetup_r+0x46>
 800080a:	68ac      	ldr	r4, [r5, #8]
 800080c:	e7eb      	b.n	80007e6 <__swsetup_r+0x1e>
 800080e:	4b24      	ldr	r3, [pc, #144]	; (80008a0 <__swsetup_r+0xd8>)
 8000810:	429c      	cmp	r4, r3
 8000812:	bf08      	it	eq
 8000814:	68ec      	ldreq	r4, [r5, #12]
 8000816:	e7e6      	b.n	80007e6 <__swsetup_r+0x1e>
 8000818:	0751      	lsls	r1, r2, #29
 800081a:	d512      	bpl.n	8000842 <__swsetup_r+0x7a>
 800081c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800081e:	b141      	cbz	r1, 8000832 <__swsetup_r+0x6a>
 8000820:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000824:	4299      	cmp	r1, r3
 8000826:	d002      	beq.n	800082e <__swsetup_r+0x66>
 8000828:	4630      	mov	r0, r6
 800082a:	f000 fa19 	bl	8000c60 <_free_r>
 800082e:	2300      	movs	r3, #0
 8000830:	6363      	str	r3, [r4, #52]	; 0x34
 8000832:	89a3      	ldrh	r3, [r4, #12]
 8000834:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000838:	81a3      	strh	r3, [r4, #12]
 800083a:	2300      	movs	r3, #0
 800083c:	6063      	str	r3, [r4, #4]
 800083e:	6923      	ldr	r3, [r4, #16]
 8000840:	6023      	str	r3, [r4, #0]
 8000842:	89a3      	ldrh	r3, [r4, #12]
 8000844:	f043 0308 	orr.w	r3, r3, #8
 8000848:	81a3      	strh	r3, [r4, #12]
 800084a:	6923      	ldr	r3, [r4, #16]
 800084c:	b94b      	cbnz	r3, 8000862 <__swsetup_r+0x9a>
 800084e:	89a3      	ldrh	r3, [r4, #12]
 8000850:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000854:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000858:	d003      	beq.n	8000862 <__swsetup_r+0x9a>
 800085a:	4621      	mov	r1, r4
 800085c:	4630      	mov	r0, r6
 800085e:	f000 f9bf 	bl	8000be0 <__smakebuf_r>
 8000862:	89a2      	ldrh	r2, [r4, #12]
 8000864:	f012 0301 	ands.w	r3, r2, #1
 8000868:	d00c      	beq.n	8000884 <__swsetup_r+0xbc>
 800086a:	2300      	movs	r3, #0
 800086c:	60a3      	str	r3, [r4, #8]
 800086e:	6963      	ldr	r3, [r4, #20]
 8000870:	425b      	negs	r3, r3
 8000872:	61a3      	str	r3, [r4, #24]
 8000874:	6923      	ldr	r3, [r4, #16]
 8000876:	b953      	cbnz	r3, 800088e <__swsetup_r+0xc6>
 8000878:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800087c:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8000880:	d1ba      	bne.n	80007f8 <__swsetup_r+0x30>
 8000882:	bd70      	pop	{r4, r5, r6, pc}
 8000884:	0792      	lsls	r2, r2, #30
 8000886:	bf58      	it	pl
 8000888:	6963      	ldrpl	r3, [r4, #20]
 800088a:	60a3      	str	r3, [r4, #8]
 800088c:	e7f2      	b.n	8000874 <__swsetup_r+0xac>
 800088e:	2000      	movs	r0, #0
 8000890:	e7f7      	b.n	8000882 <__swsetup_r+0xba>
 8000892:	bf00      	nop
 8000894:	20000000 	.word	0x20000000
 8000898:	08001580 	.word	0x08001580
 800089c:	080015a0 	.word	0x080015a0
 80008a0:	08001560 	.word	0x08001560

080008a4 <__sflush_r>:
 80008a4:	898a      	ldrh	r2, [r1, #12]
 80008a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80008aa:	4605      	mov	r5, r0
 80008ac:	0710      	lsls	r0, r2, #28
 80008ae:	460c      	mov	r4, r1
 80008b0:	d458      	bmi.n	8000964 <__sflush_r+0xc0>
 80008b2:	684b      	ldr	r3, [r1, #4]
 80008b4:	2b00      	cmp	r3, #0
 80008b6:	dc05      	bgt.n	80008c4 <__sflush_r+0x20>
 80008b8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80008ba:	2b00      	cmp	r3, #0
 80008bc:	dc02      	bgt.n	80008c4 <__sflush_r+0x20>
 80008be:	2000      	movs	r0, #0
 80008c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80008c4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008c6:	2e00      	cmp	r6, #0
 80008c8:	d0f9      	beq.n	80008be <__sflush_r+0x1a>
 80008ca:	2300      	movs	r3, #0
 80008cc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80008d0:	682f      	ldr	r7, [r5, #0]
 80008d2:	6a21      	ldr	r1, [r4, #32]
 80008d4:	602b      	str	r3, [r5, #0]
 80008d6:	d032      	beq.n	800093e <__sflush_r+0x9a>
 80008d8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80008da:	89a3      	ldrh	r3, [r4, #12]
 80008dc:	075a      	lsls	r2, r3, #29
 80008de:	d505      	bpl.n	80008ec <__sflush_r+0x48>
 80008e0:	6863      	ldr	r3, [r4, #4]
 80008e2:	1ac0      	subs	r0, r0, r3
 80008e4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80008e6:	b10b      	cbz	r3, 80008ec <__sflush_r+0x48>
 80008e8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80008ea:	1ac0      	subs	r0, r0, r3
 80008ec:	2300      	movs	r3, #0
 80008ee:	4602      	mov	r2, r0
 80008f0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008f2:	6a21      	ldr	r1, [r4, #32]
 80008f4:	4628      	mov	r0, r5
 80008f6:	47b0      	blx	r6
 80008f8:	1c43      	adds	r3, r0, #1
 80008fa:	89a3      	ldrh	r3, [r4, #12]
 80008fc:	d106      	bne.n	800090c <__sflush_r+0x68>
 80008fe:	6829      	ldr	r1, [r5, #0]
 8000900:	291d      	cmp	r1, #29
 8000902:	d848      	bhi.n	8000996 <__sflush_r+0xf2>
 8000904:	4a29      	ldr	r2, [pc, #164]	; (80009ac <__sflush_r+0x108>)
 8000906:	40ca      	lsrs	r2, r1
 8000908:	07d6      	lsls	r6, r2, #31
 800090a:	d544      	bpl.n	8000996 <__sflush_r+0xf2>
 800090c:	2200      	movs	r2, #0
 800090e:	6062      	str	r2, [r4, #4]
 8000910:	04d9      	lsls	r1, r3, #19
 8000912:	6922      	ldr	r2, [r4, #16]
 8000914:	6022      	str	r2, [r4, #0]
 8000916:	d504      	bpl.n	8000922 <__sflush_r+0x7e>
 8000918:	1c42      	adds	r2, r0, #1
 800091a:	d101      	bne.n	8000920 <__sflush_r+0x7c>
 800091c:	682b      	ldr	r3, [r5, #0]
 800091e:	b903      	cbnz	r3, 8000922 <__sflush_r+0x7e>
 8000920:	6560      	str	r0, [r4, #84]	; 0x54
 8000922:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000924:	602f      	str	r7, [r5, #0]
 8000926:	2900      	cmp	r1, #0
 8000928:	d0c9      	beq.n	80008be <__sflush_r+0x1a>
 800092a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800092e:	4299      	cmp	r1, r3
 8000930:	d002      	beq.n	8000938 <__sflush_r+0x94>
 8000932:	4628      	mov	r0, r5
 8000934:	f000 f994 	bl	8000c60 <_free_r>
 8000938:	2000      	movs	r0, #0
 800093a:	6360      	str	r0, [r4, #52]	; 0x34
 800093c:	e7c0      	b.n	80008c0 <__sflush_r+0x1c>
 800093e:	2301      	movs	r3, #1
 8000940:	4628      	mov	r0, r5
 8000942:	47b0      	blx	r6
 8000944:	1c41      	adds	r1, r0, #1
 8000946:	d1c8      	bne.n	80008da <__sflush_r+0x36>
 8000948:	682b      	ldr	r3, [r5, #0]
 800094a:	2b00      	cmp	r3, #0
 800094c:	d0c5      	beq.n	80008da <__sflush_r+0x36>
 800094e:	2b1d      	cmp	r3, #29
 8000950:	d001      	beq.n	8000956 <__sflush_r+0xb2>
 8000952:	2b16      	cmp	r3, #22
 8000954:	d101      	bne.n	800095a <__sflush_r+0xb6>
 8000956:	602f      	str	r7, [r5, #0]
 8000958:	e7b1      	b.n	80008be <__sflush_r+0x1a>
 800095a:	89a3      	ldrh	r3, [r4, #12]
 800095c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000960:	81a3      	strh	r3, [r4, #12]
 8000962:	e7ad      	b.n	80008c0 <__sflush_r+0x1c>
 8000964:	690f      	ldr	r7, [r1, #16]
 8000966:	2f00      	cmp	r7, #0
 8000968:	d0a9      	beq.n	80008be <__sflush_r+0x1a>
 800096a:	0793      	lsls	r3, r2, #30
 800096c:	680e      	ldr	r6, [r1, #0]
 800096e:	bf08      	it	eq
 8000970:	694b      	ldreq	r3, [r1, #20]
 8000972:	600f      	str	r7, [r1, #0]
 8000974:	bf18      	it	ne
 8000976:	2300      	movne	r3, #0
 8000978:	eba6 0807 	sub.w	r8, r6, r7
 800097c:	608b      	str	r3, [r1, #8]
 800097e:	f1b8 0f00 	cmp.w	r8, #0
 8000982:	dd9c      	ble.n	80008be <__sflush_r+0x1a>
 8000984:	4643      	mov	r3, r8
 8000986:	463a      	mov	r2, r7
 8000988:	6a21      	ldr	r1, [r4, #32]
 800098a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800098c:	4628      	mov	r0, r5
 800098e:	47b0      	blx	r6
 8000990:	2800      	cmp	r0, #0
 8000992:	dc06      	bgt.n	80009a2 <__sflush_r+0xfe>
 8000994:	89a3      	ldrh	r3, [r4, #12]
 8000996:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800099a:	81a3      	strh	r3, [r4, #12]
 800099c:	f04f 30ff 	mov.w	r0, #4294967295
 80009a0:	e78e      	b.n	80008c0 <__sflush_r+0x1c>
 80009a2:	4407      	add	r7, r0
 80009a4:	eba8 0800 	sub.w	r8, r8, r0
 80009a8:	e7e9      	b.n	800097e <__sflush_r+0xda>
 80009aa:	bf00      	nop
 80009ac:	20400001 	.word	0x20400001

080009b0 <_fflush_r>:
 80009b0:	b538      	push	{r3, r4, r5, lr}
 80009b2:	690b      	ldr	r3, [r1, #16]
 80009b4:	4605      	mov	r5, r0
 80009b6:	460c      	mov	r4, r1
 80009b8:	b1db      	cbz	r3, 80009f2 <_fflush_r+0x42>
 80009ba:	b118      	cbz	r0, 80009c4 <_fflush_r+0x14>
 80009bc:	6983      	ldr	r3, [r0, #24]
 80009be:	b90b      	cbnz	r3, 80009c4 <_fflush_r+0x14>
 80009c0:	f000 f860 	bl	8000a84 <__sinit>
 80009c4:	4b0c      	ldr	r3, [pc, #48]	; (80009f8 <_fflush_r+0x48>)
 80009c6:	429c      	cmp	r4, r3
 80009c8:	d109      	bne.n	80009de <_fflush_r+0x2e>
 80009ca:	686c      	ldr	r4, [r5, #4]
 80009cc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80009d0:	b17b      	cbz	r3, 80009f2 <_fflush_r+0x42>
 80009d2:	4621      	mov	r1, r4
 80009d4:	4628      	mov	r0, r5
 80009d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80009da:	f7ff bf63 	b.w	80008a4 <__sflush_r>
 80009de:	4b07      	ldr	r3, [pc, #28]	; (80009fc <_fflush_r+0x4c>)
 80009e0:	429c      	cmp	r4, r3
 80009e2:	d101      	bne.n	80009e8 <_fflush_r+0x38>
 80009e4:	68ac      	ldr	r4, [r5, #8]
 80009e6:	e7f1      	b.n	80009cc <_fflush_r+0x1c>
 80009e8:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <_fflush_r+0x50>)
 80009ea:	429c      	cmp	r4, r3
 80009ec:	bf08      	it	eq
 80009ee:	68ec      	ldreq	r4, [r5, #12]
 80009f0:	e7ec      	b.n	80009cc <_fflush_r+0x1c>
 80009f2:	2000      	movs	r0, #0
 80009f4:	bd38      	pop	{r3, r4, r5, pc}
 80009f6:	bf00      	nop
 80009f8:	08001580 	.word	0x08001580
 80009fc:	080015a0 	.word	0x080015a0
 8000a00:	08001560 	.word	0x08001560

08000a04 <std>:
 8000a04:	2300      	movs	r3, #0
 8000a06:	b510      	push	{r4, lr}
 8000a08:	4604      	mov	r4, r0
 8000a0a:	e9c0 3300 	strd	r3, r3, [r0]
 8000a0e:	6083      	str	r3, [r0, #8]
 8000a10:	8181      	strh	r1, [r0, #12]
 8000a12:	6643      	str	r3, [r0, #100]	; 0x64
 8000a14:	81c2      	strh	r2, [r0, #14]
 8000a16:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000a1a:	6183      	str	r3, [r0, #24]
 8000a1c:	4619      	mov	r1, r3
 8000a1e:	2208      	movs	r2, #8
 8000a20:	305c      	adds	r0, #92	; 0x5c
 8000a22:	f7ff fdfb 	bl	800061c <memset>
 8000a26:	4b05      	ldr	r3, [pc, #20]	; (8000a3c <std+0x38>)
 8000a28:	6263      	str	r3, [r4, #36]	; 0x24
 8000a2a:	4b05      	ldr	r3, [pc, #20]	; (8000a40 <std+0x3c>)
 8000a2c:	62a3      	str	r3, [r4, #40]	; 0x28
 8000a2e:	4b05      	ldr	r3, [pc, #20]	; (8000a44 <std+0x40>)
 8000a30:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a32:	4b05      	ldr	r3, [pc, #20]	; (8000a48 <std+0x44>)
 8000a34:	6224      	str	r4, [r4, #32]
 8000a36:	6323      	str	r3, [r4, #48]	; 0x30
 8000a38:	bd10      	pop	{r4, pc}
 8000a3a:	bf00      	nop
 8000a3c:	08001361 	.word	0x08001361
 8000a40:	08001383 	.word	0x08001383
 8000a44:	080013bb 	.word	0x080013bb
 8000a48:	080013df 	.word	0x080013df

08000a4c <_cleanup_r>:
 8000a4c:	4901      	ldr	r1, [pc, #4]	; (8000a54 <_cleanup_r+0x8>)
 8000a4e:	f000 b885 	b.w	8000b5c <_fwalk_reent>
 8000a52:	bf00      	nop
 8000a54:	080009b1 	.word	0x080009b1

08000a58 <__sfmoreglue>:
 8000a58:	b570      	push	{r4, r5, r6, lr}
 8000a5a:	1e4a      	subs	r2, r1, #1
 8000a5c:	2568      	movs	r5, #104	; 0x68
 8000a5e:	4355      	muls	r5, r2
 8000a60:	460e      	mov	r6, r1
 8000a62:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000a66:	f000 f949 	bl	8000cfc <_malloc_r>
 8000a6a:	4604      	mov	r4, r0
 8000a6c:	b140      	cbz	r0, 8000a80 <__sfmoreglue+0x28>
 8000a6e:	2100      	movs	r1, #0
 8000a70:	e9c0 1600 	strd	r1, r6, [r0]
 8000a74:	300c      	adds	r0, #12
 8000a76:	60a0      	str	r0, [r4, #8]
 8000a78:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000a7c:	f7ff fdce 	bl	800061c <memset>
 8000a80:	4620      	mov	r0, r4
 8000a82:	bd70      	pop	{r4, r5, r6, pc}

08000a84 <__sinit>:
 8000a84:	6983      	ldr	r3, [r0, #24]
 8000a86:	b510      	push	{r4, lr}
 8000a88:	4604      	mov	r4, r0
 8000a8a:	bb33      	cbnz	r3, 8000ada <__sinit+0x56>
 8000a8c:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000a90:	6503      	str	r3, [r0, #80]	; 0x50
 8000a92:	4b12      	ldr	r3, [pc, #72]	; (8000adc <__sinit+0x58>)
 8000a94:	4a12      	ldr	r2, [pc, #72]	; (8000ae0 <__sinit+0x5c>)
 8000a96:	681b      	ldr	r3, [r3, #0]
 8000a98:	6282      	str	r2, [r0, #40]	; 0x28
 8000a9a:	4298      	cmp	r0, r3
 8000a9c:	bf04      	itt	eq
 8000a9e:	2301      	moveq	r3, #1
 8000aa0:	6183      	streq	r3, [r0, #24]
 8000aa2:	f000 f81f 	bl	8000ae4 <__sfp>
 8000aa6:	6060      	str	r0, [r4, #4]
 8000aa8:	4620      	mov	r0, r4
 8000aaa:	f000 f81b 	bl	8000ae4 <__sfp>
 8000aae:	60a0      	str	r0, [r4, #8]
 8000ab0:	4620      	mov	r0, r4
 8000ab2:	f000 f817 	bl	8000ae4 <__sfp>
 8000ab6:	2200      	movs	r2, #0
 8000ab8:	60e0      	str	r0, [r4, #12]
 8000aba:	2104      	movs	r1, #4
 8000abc:	6860      	ldr	r0, [r4, #4]
 8000abe:	f7ff ffa1 	bl	8000a04 <std>
 8000ac2:	2201      	movs	r2, #1
 8000ac4:	2109      	movs	r1, #9
 8000ac6:	68a0      	ldr	r0, [r4, #8]
 8000ac8:	f7ff ff9c 	bl	8000a04 <std>
 8000acc:	2202      	movs	r2, #2
 8000ace:	2112      	movs	r1, #18
 8000ad0:	68e0      	ldr	r0, [r4, #12]
 8000ad2:	f7ff ff97 	bl	8000a04 <std>
 8000ad6:	2301      	movs	r3, #1
 8000ad8:	61a3      	str	r3, [r4, #24]
 8000ada:	bd10      	pop	{r4, pc}
 8000adc:	0800155c 	.word	0x0800155c
 8000ae0:	08000a4d 	.word	0x08000a4d

08000ae4 <__sfp>:
 8000ae4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ae6:	4b1b      	ldr	r3, [pc, #108]	; (8000b54 <__sfp+0x70>)
 8000ae8:	681e      	ldr	r6, [r3, #0]
 8000aea:	69b3      	ldr	r3, [r6, #24]
 8000aec:	4607      	mov	r7, r0
 8000aee:	b913      	cbnz	r3, 8000af6 <__sfp+0x12>
 8000af0:	4630      	mov	r0, r6
 8000af2:	f7ff ffc7 	bl	8000a84 <__sinit>
 8000af6:	3648      	adds	r6, #72	; 0x48
 8000af8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000afc:	3b01      	subs	r3, #1
 8000afe:	d503      	bpl.n	8000b08 <__sfp+0x24>
 8000b00:	6833      	ldr	r3, [r6, #0]
 8000b02:	b133      	cbz	r3, 8000b12 <__sfp+0x2e>
 8000b04:	6836      	ldr	r6, [r6, #0]
 8000b06:	e7f7      	b.n	8000af8 <__sfp+0x14>
 8000b08:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000b0c:	b16d      	cbz	r5, 8000b2a <__sfp+0x46>
 8000b0e:	3468      	adds	r4, #104	; 0x68
 8000b10:	e7f4      	b.n	8000afc <__sfp+0x18>
 8000b12:	2104      	movs	r1, #4
 8000b14:	4638      	mov	r0, r7
 8000b16:	f7ff ff9f 	bl	8000a58 <__sfmoreglue>
 8000b1a:	6030      	str	r0, [r6, #0]
 8000b1c:	2800      	cmp	r0, #0
 8000b1e:	d1f1      	bne.n	8000b04 <__sfp+0x20>
 8000b20:	230c      	movs	r3, #12
 8000b22:	603b      	str	r3, [r7, #0]
 8000b24:	4604      	mov	r4, r0
 8000b26:	4620      	mov	r0, r4
 8000b28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b2a:	4b0b      	ldr	r3, [pc, #44]	; (8000b58 <__sfp+0x74>)
 8000b2c:	6665      	str	r5, [r4, #100]	; 0x64
 8000b2e:	e9c4 5500 	strd	r5, r5, [r4]
 8000b32:	60a5      	str	r5, [r4, #8]
 8000b34:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000b38:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000b3c:	2208      	movs	r2, #8
 8000b3e:	4629      	mov	r1, r5
 8000b40:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000b44:	f7ff fd6a 	bl	800061c <memset>
 8000b48:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000b4c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000b50:	e7e9      	b.n	8000b26 <__sfp+0x42>
 8000b52:	bf00      	nop
 8000b54:	0800155c 	.word	0x0800155c
 8000b58:	ffff0001 	.word	0xffff0001

08000b5c <_fwalk_reent>:
 8000b5c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b60:	4680      	mov	r8, r0
 8000b62:	4689      	mov	r9, r1
 8000b64:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000b68:	2600      	movs	r6, #0
 8000b6a:	b914      	cbnz	r4, 8000b72 <_fwalk_reent+0x16>
 8000b6c:	4630      	mov	r0, r6
 8000b6e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b72:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000b76:	3f01      	subs	r7, #1
 8000b78:	d501      	bpl.n	8000b7e <_fwalk_reent+0x22>
 8000b7a:	6824      	ldr	r4, [r4, #0]
 8000b7c:	e7f5      	b.n	8000b6a <_fwalk_reent+0xe>
 8000b7e:	89ab      	ldrh	r3, [r5, #12]
 8000b80:	2b01      	cmp	r3, #1
 8000b82:	d907      	bls.n	8000b94 <_fwalk_reent+0x38>
 8000b84:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000b88:	3301      	adds	r3, #1
 8000b8a:	d003      	beq.n	8000b94 <_fwalk_reent+0x38>
 8000b8c:	4629      	mov	r1, r5
 8000b8e:	4640      	mov	r0, r8
 8000b90:	47c8      	blx	r9
 8000b92:	4306      	orrs	r6, r0
 8000b94:	3568      	adds	r5, #104	; 0x68
 8000b96:	e7ee      	b.n	8000b76 <_fwalk_reent+0x1a>

08000b98 <__swhatbuf_r>:
 8000b98:	b570      	push	{r4, r5, r6, lr}
 8000b9a:	460e      	mov	r6, r1
 8000b9c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ba0:	2900      	cmp	r1, #0
 8000ba2:	b096      	sub	sp, #88	; 0x58
 8000ba4:	4614      	mov	r4, r2
 8000ba6:	461d      	mov	r5, r3
 8000ba8:	da07      	bge.n	8000bba <__swhatbuf_r+0x22>
 8000baa:	2300      	movs	r3, #0
 8000bac:	602b      	str	r3, [r5, #0]
 8000bae:	89b3      	ldrh	r3, [r6, #12]
 8000bb0:	061a      	lsls	r2, r3, #24
 8000bb2:	d410      	bmi.n	8000bd6 <__swhatbuf_r+0x3e>
 8000bb4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000bb8:	e00e      	b.n	8000bd8 <__swhatbuf_r+0x40>
 8000bba:	466a      	mov	r2, sp
 8000bbc:	f000 fc36 	bl	800142c <_fstat_r>
 8000bc0:	2800      	cmp	r0, #0
 8000bc2:	dbf2      	blt.n	8000baa <__swhatbuf_r+0x12>
 8000bc4:	9a01      	ldr	r2, [sp, #4]
 8000bc6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000bca:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000bce:	425a      	negs	r2, r3
 8000bd0:	415a      	adcs	r2, r3
 8000bd2:	602a      	str	r2, [r5, #0]
 8000bd4:	e7ee      	b.n	8000bb4 <__swhatbuf_r+0x1c>
 8000bd6:	2340      	movs	r3, #64	; 0x40
 8000bd8:	2000      	movs	r0, #0
 8000bda:	6023      	str	r3, [r4, #0]
 8000bdc:	b016      	add	sp, #88	; 0x58
 8000bde:	bd70      	pop	{r4, r5, r6, pc}

08000be0 <__smakebuf_r>:
 8000be0:	898b      	ldrh	r3, [r1, #12]
 8000be2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000be4:	079d      	lsls	r5, r3, #30
 8000be6:	4606      	mov	r6, r0
 8000be8:	460c      	mov	r4, r1
 8000bea:	d507      	bpl.n	8000bfc <__smakebuf_r+0x1c>
 8000bec:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000bf0:	6023      	str	r3, [r4, #0]
 8000bf2:	6123      	str	r3, [r4, #16]
 8000bf4:	2301      	movs	r3, #1
 8000bf6:	6163      	str	r3, [r4, #20]
 8000bf8:	b002      	add	sp, #8
 8000bfa:	bd70      	pop	{r4, r5, r6, pc}
 8000bfc:	ab01      	add	r3, sp, #4
 8000bfe:	466a      	mov	r2, sp
 8000c00:	f7ff ffca 	bl	8000b98 <__swhatbuf_r>
 8000c04:	9900      	ldr	r1, [sp, #0]
 8000c06:	4605      	mov	r5, r0
 8000c08:	4630      	mov	r0, r6
 8000c0a:	f000 f877 	bl	8000cfc <_malloc_r>
 8000c0e:	b948      	cbnz	r0, 8000c24 <__smakebuf_r+0x44>
 8000c10:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c14:	059a      	lsls	r2, r3, #22
 8000c16:	d4ef      	bmi.n	8000bf8 <__smakebuf_r+0x18>
 8000c18:	f023 0303 	bic.w	r3, r3, #3
 8000c1c:	f043 0302 	orr.w	r3, r3, #2
 8000c20:	81a3      	strh	r3, [r4, #12]
 8000c22:	e7e3      	b.n	8000bec <__smakebuf_r+0xc>
 8000c24:	4b0d      	ldr	r3, [pc, #52]	; (8000c5c <__smakebuf_r+0x7c>)
 8000c26:	62b3      	str	r3, [r6, #40]	; 0x28
 8000c28:	89a3      	ldrh	r3, [r4, #12]
 8000c2a:	6020      	str	r0, [r4, #0]
 8000c2c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c30:	81a3      	strh	r3, [r4, #12]
 8000c32:	9b00      	ldr	r3, [sp, #0]
 8000c34:	6163      	str	r3, [r4, #20]
 8000c36:	9b01      	ldr	r3, [sp, #4]
 8000c38:	6120      	str	r0, [r4, #16]
 8000c3a:	b15b      	cbz	r3, 8000c54 <__smakebuf_r+0x74>
 8000c3c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c40:	4630      	mov	r0, r6
 8000c42:	f000 fc05 	bl	8001450 <_isatty_r>
 8000c46:	b128      	cbz	r0, 8000c54 <__smakebuf_r+0x74>
 8000c48:	89a3      	ldrh	r3, [r4, #12]
 8000c4a:	f023 0303 	bic.w	r3, r3, #3
 8000c4e:	f043 0301 	orr.w	r3, r3, #1
 8000c52:	81a3      	strh	r3, [r4, #12]
 8000c54:	89a3      	ldrh	r3, [r4, #12]
 8000c56:	431d      	orrs	r5, r3
 8000c58:	81a5      	strh	r5, [r4, #12]
 8000c5a:	e7cd      	b.n	8000bf8 <__smakebuf_r+0x18>
 8000c5c:	08000a4d 	.word	0x08000a4d

08000c60 <_free_r>:
 8000c60:	b538      	push	{r3, r4, r5, lr}
 8000c62:	4605      	mov	r5, r0
 8000c64:	2900      	cmp	r1, #0
 8000c66:	d045      	beq.n	8000cf4 <_free_r+0x94>
 8000c68:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000c6c:	1f0c      	subs	r4, r1, #4
 8000c6e:	2b00      	cmp	r3, #0
 8000c70:	bfb8      	it	lt
 8000c72:	18e4      	addlt	r4, r4, r3
 8000c74:	f000 fc0e 	bl	8001494 <__malloc_lock>
 8000c78:	4a1f      	ldr	r2, [pc, #124]	; (8000cf8 <_free_r+0x98>)
 8000c7a:	6813      	ldr	r3, [r2, #0]
 8000c7c:	4610      	mov	r0, r2
 8000c7e:	b933      	cbnz	r3, 8000c8e <_free_r+0x2e>
 8000c80:	6063      	str	r3, [r4, #4]
 8000c82:	6014      	str	r4, [r2, #0]
 8000c84:	4628      	mov	r0, r5
 8000c86:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c8a:	f000 bc04 	b.w	8001496 <__malloc_unlock>
 8000c8e:	42a3      	cmp	r3, r4
 8000c90:	d90c      	bls.n	8000cac <_free_r+0x4c>
 8000c92:	6821      	ldr	r1, [r4, #0]
 8000c94:	1862      	adds	r2, r4, r1
 8000c96:	4293      	cmp	r3, r2
 8000c98:	bf04      	itt	eq
 8000c9a:	681a      	ldreq	r2, [r3, #0]
 8000c9c:	685b      	ldreq	r3, [r3, #4]
 8000c9e:	6063      	str	r3, [r4, #4]
 8000ca0:	bf04      	itt	eq
 8000ca2:	1852      	addeq	r2, r2, r1
 8000ca4:	6022      	streq	r2, [r4, #0]
 8000ca6:	6004      	str	r4, [r0, #0]
 8000ca8:	e7ec      	b.n	8000c84 <_free_r+0x24>
 8000caa:	4613      	mov	r3, r2
 8000cac:	685a      	ldr	r2, [r3, #4]
 8000cae:	b10a      	cbz	r2, 8000cb4 <_free_r+0x54>
 8000cb0:	42a2      	cmp	r2, r4
 8000cb2:	d9fa      	bls.n	8000caa <_free_r+0x4a>
 8000cb4:	6819      	ldr	r1, [r3, #0]
 8000cb6:	1858      	adds	r0, r3, r1
 8000cb8:	42a0      	cmp	r0, r4
 8000cba:	d10b      	bne.n	8000cd4 <_free_r+0x74>
 8000cbc:	6820      	ldr	r0, [r4, #0]
 8000cbe:	4401      	add	r1, r0
 8000cc0:	1858      	adds	r0, r3, r1
 8000cc2:	4282      	cmp	r2, r0
 8000cc4:	6019      	str	r1, [r3, #0]
 8000cc6:	d1dd      	bne.n	8000c84 <_free_r+0x24>
 8000cc8:	6810      	ldr	r0, [r2, #0]
 8000cca:	6852      	ldr	r2, [r2, #4]
 8000ccc:	605a      	str	r2, [r3, #4]
 8000cce:	4401      	add	r1, r0
 8000cd0:	6019      	str	r1, [r3, #0]
 8000cd2:	e7d7      	b.n	8000c84 <_free_r+0x24>
 8000cd4:	d902      	bls.n	8000cdc <_free_r+0x7c>
 8000cd6:	230c      	movs	r3, #12
 8000cd8:	602b      	str	r3, [r5, #0]
 8000cda:	e7d3      	b.n	8000c84 <_free_r+0x24>
 8000cdc:	6820      	ldr	r0, [r4, #0]
 8000cde:	1821      	adds	r1, r4, r0
 8000ce0:	428a      	cmp	r2, r1
 8000ce2:	bf04      	itt	eq
 8000ce4:	6811      	ldreq	r1, [r2, #0]
 8000ce6:	6852      	ldreq	r2, [r2, #4]
 8000ce8:	6062      	str	r2, [r4, #4]
 8000cea:	bf04      	itt	eq
 8000cec:	1809      	addeq	r1, r1, r0
 8000cee:	6021      	streq	r1, [r4, #0]
 8000cf0:	605c      	str	r4, [r3, #4]
 8000cf2:	e7c7      	b.n	8000c84 <_free_r+0x24>
 8000cf4:	bd38      	pop	{r3, r4, r5, pc}
 8000cf6:	bf00      	nop
 8000cf8:	20000084 	.word	0x20000084

08000cfc <_malloc_r>:
 8000cfc:	b570      	push	{r4, r5, r6, lr}
 8000cfe:	1ccd      	adds	r5, r1, #3
 8000d00:	f025 0503 	bic.w	r5, r5, #3
 8000d04:	3508      	adds	r5, #8
 8000d06:	2d0c      	cmp	r5, #12
 8000d08:	bf38      	it	cc
 8000d0a:	250c      	movcc	r5, #12
 8000d0c:	2d00      	cmp	r5, #0
 8000d0e:	4606      	mov	r6, r0
 8000d10:	db01      	blt.n	8000d16 <_malloc_r+0x1a>
 8000d12:	42a9      	cmp	r1, r5
 8000d14:	d903      	bls.n	8000d1e <_malloc_r+0x22>
 8000d16:	230c      	movs	r3, #12
 8000d18:	6033      	str	r3, [r6, #0]
 8000d1a:	2000      	movs	r0, #0
 8000d1c:	bd70      	pop	{r4, r5, r6, pc}
 8000d1e:	f000 fbb9 	bl	8001494 <__malloc_lock>
 8000d22:	4a21      	ldr	r2, [pc, #132]	; (8000da8 <_malloc_r+0xac>)
 8000d24:	6814      	ldr	r4, [r2, #0]
 8000d26:	4621      	mov	r1, r4
 8000d28:	b991      	cbnz	r1, 8000d50 <_malloc_r+0x54>
 8000d2a:	4c20      	ldr	r4, [pc, #128]	; (8000dac <_malloc_r+0xb0>)
 8000d2c:	6823      	ldr	r3, [r4, #0]
 8000d2e:	b91b      	cbnz	r3, 8000d38 <_malloc_r+0x3c>
 8000d30:	4630      	mov	r0, r6
 8000d32:	f000 fb05 	bl	8001340 <_sbrk_r>
 8000d36:	6020      	str	r0, [r4, #0]
 8000d38:	4629      	mov	r1, r5
 8000d3a:	4630      	mov	r0, r6
 8000d3c:	f000 fb00 	bl	8001340 <_sbrk_r>
 8000d40:	1c43      	adds	r3, r0, #1
 8000d42:	d124      	bne.n	8000d8e <_malloc_r+0x92>
 8000d44:	230c      	movs	r3, #12
 8000d46:	6033      	str	r3, [r6, #0]
 8000d48:	4630      	mov	r0, r6
 8000d4a:	f000 fba4 	bl	8001496 <__malloc_unlock>
 8000d4e:	e7e4      	b.n	8000d1a <_malloc_r+0x1e>
 8000d50:	680b      	ldr	r3, [r1, #0]
 8000d52:	1b5b      	subs	r3, r3, r5
 8000d54:	d418      	bmi.n	8000d88 <_malloc_r+0x8c>
 8000d56:	2b0b      	cmp	r3, #11
 8000d58:	d90f      	bls.n	8000d7a <_malloc_r+0x7e>
 8000d5a:	600b      	str	r3, [r1, #0]
 8000d5c:	50cd      	str	r5, [r1, r3]
 8000d5e:	18cc      	adds	r4, r1, r3
 8000d60:	4630      	mov	r0, r6
 8000d62:	f000 fb98 	bl	8001496 <__malloc_unlock>
 8000d66:	f104 000b 	add.w	r0, r4, #11
 8000d6a:	1d23      	adds	r3, r4, #4
 8000d6c:	f020 0007 	bic.w	r0, r0, #7
 8000d70:	1ac3      	subs	r3, r0, r3
 8000d72:	d0d3      	beq.n	8000d1c <_malloc_r+0x20>
 8000d74:	425a      	negs	r2, r3
 8000d76:	50e2      	str	r2, [r4, r3]
 8000d78:	e7d0      	b.n	8000d1c <_malloc_r+0x20>
 8000d7a:	428c      	cmp	r4, r1
 8000d7c:	684b      	ldr	r3, [r1, #4]
 8000d7e:	bf16      	itet	ne
 8000d80:	6063      	strne	r3, [r4, #4]
 8000d82:	6013      	streq	r3, [r2, #0]
 8000d84:	460c      	movne	r4, r1
 8000d86:	e7eb      	b.n	8000d60 <_malloc_r+0x64>
 8000d88:	460c      	mov	r4, r1
 8000d8a:	6849      	ldr	r1, [r1, #4]
 8000d8c:	e7cc      	b.n	8000d28 <_malloc_r+0x2c>
 8000d8e:	1cc4      	adds	r4, r0, #3
 8000d90:	f024 0403 	bic.w	r4, r4, #3
 8000d94:	42a0      	cmp	r0, r4
 8000d96:	d005      	beq.n	8000da4 <_malloc_r+0xa8>
 8000d98:	1a21      	subs	r1, r4, r0
 8000d9a:	4630      	mov	r0, r6
 8000d9c:	f000 fad0 	bl	8001340 <_sbrk_r>
 8000da0:	3001      	adds	r0, #1
 8000da2:	d0cf      	beq.n	8000d44 <_malloc_r+0x48>
 8000da4:	6025      	str	r5, [r4, #0]
 8000da6:	e7db      	b.n	8000d60 <_malloc_r+0x64>
 8000da8:	20000084 	.word	0x20000084
 8000dac:	20000088 	.word	0x20000088

08000db0 <__sfputc_r>:
 8000db0:	6893      	ldr	r3, [r2, #8]
 8000db2:	3b01      	subs	r3, #1
 8000db4:	2b00      	cmp	r3, #0
 8000db6:	b410      	push	{r4}
 8000db8:	6093      	str	r3, [r2, #8]
 8000dba:	da08      	bge.n	8000dce <__sfputc_r+0x1e>
 8000dbc:	6994      	ldr	r4, [r2, #24]
 8000dbe:	42a3      	cmp	r3, r4
 8000dc0:	db01      	blt.n	8000dc6 <__sfputc_r+0x16>
 8000dc2:	290a      	cmp	r1, #10
 8000dc4:	d103      	bne.n	8000dce <__sfputc_r+0x1e>
 8000dc6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000dca:	f7ff bcab 	b.w	8000724 <__swbuf_r>
 8000dce:	6813      	ldr	r3, [r2, #0]
 8000dd0:	1c58      	adds	r0, r3, #1
 8000dd2:	6010      	str	r0, [r2, #0]
 8000dd4:	7019      	strb	r1, [r3, #0]
 8000dd6:	4608      	mov	r0, r1
 8000dd8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ddc:	4770      	bx	lr

08000dde <__sfputs_r>:
 8000dde:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000de0:	4606      	mov	r6, r0
 8000de2:	460f      	mov	r7, r1
 8000de4:	4614      	mov	r4, r2
 8000de6:	18d5      	adds	r5, r2, r3
 8000de8:	42ac      	cmp	r4, r5
 8000dea:	d101      	bne.n	8000df0 <__sfputs_r+0x12>
 8000dec:	2000      	movs	r0, #0
 8000dee:	e007      	b.n	8000e00 <__sfputs_r+0x22>
 8000df0:	463a      	mov	r2, r7
 8000df2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000df6:	4630      	mov	r0, r6
 8000df8:	f7ff ffda 	bl	8000db0 <__sfputc_r>
 8000dfc:	1c43      	adds	r3, r0, #1
 8000dfe:	d1f3      	bne.n	8000de8 <__sfputs_r+0xa>
 8000e00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000e04 <_vfiprintf_r>:
 8000e04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000e08:	460c      	mov	r4, r1
 8000e0a:	b09d      	sub	sp, #116	; 0x74
 8000e0c:	4617      	mov	r7, r2
 8000e0e:	461d      	mov	r5, r3
 8000e10:	4606      	mov	r6, r0
 8000e12:	b118      	cbz	r0, 8000e1c <_vfiprintf_r+0x18>
 8000e14:	6983      	ldr	r3, [r0, #24]
 8000e16:	b90b      	cbnz	r3, 8000e1c <_vfiprintf_r+0x18>
 8000e18:	f7ff fe34 	bl	8000a84 <__sinit>
 8000e1c:	4b7c      	ldr	r3, [pc, #496]	; (8001010 <_vfiprintf_r+0x20c>)
 8000e1e:	429c      	cmp	r4, r3
 8000e20:	d158      	bne.n	8000ed4 <_vfiprintf_r+0xd0>
 8000e22:	6874      	ldr	r4, [r6, #4]
 8000e24:	89a3      	ldrh	r3, [r4, #12]
 8000e26:	0718      	lsls	r0, r3, #28
 8000e28:	d55e      	bpl.n	8000ee8 <_vfiprintf_r+0xe4>
 8000e2a:	6923      	ldr	r3, [r4, #16]
 8000e2c:	2b00      	cmp	r3, #0
 8000e2e:	d05b      	beq.n	8000ee8 <_vfiprintf_r+0xe4>
 8000e30:	2300      	movs	r3, #0
 8000e32:	9309      	str	r3, [sp, #36]	; 0x24
 8000e34:	2320      	movs	r3, #32
 8000e36:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000e3a:	2330      	movs	r3, #48	; 0x30
 8000e3c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000e40:	9503      	str	r5, [sp, #12]
 8000e42:	f04f 0b01 	mov.w	fp, #1
 8000e46:	46b8      	mov	r8, r7
 8000e48:	4645      	mov	r5, r8
 8000e4a:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000e4e:	b10b      	cbz	r3, 8000e54 <_vfiprintf_r+0x50>
 8000e50:	2b25      	cmp	r3, #37	; 0x25
 8000e52:	d154      	bne.n	8000efe <_vfiprintf_r+0xfa>
 8000e54:	ebb8 0a07 	subs.w	sl, r8, r7
 8000e58:	d00b      	beq.n	8000e72 <_vfiprintf_r+0x6e>
 8000e5a:	4653      	mov	r3, sl
 8000e5c:	463a      	mov	r2, r7
 8000e5e:	4621      	mov	r1, r4
 8000e60:	4630      	mov	r0, r6
 8000e62:	f7ff ffbc 	bl	8000dde <__sfputs_r>
 8000e66:	3001      	adds	r0, #1
 8000e68:	f000 80c2 	beq.w	8000ff0 <_vfiprintf_r+0x1ec>
 8000e6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000e6e:	4453      	add	r3, sl
 8000e70:	9309      	str	r3, [sp, #36]	; 0x24
 8000e72:	f898 3000 	ldrb.w	r3, [r8]
 8000e76:	2b00      	cmp	r3, #0
 8000e78:	f000 80ba 	beq.w	8000ff0 <_vfiprintf_r+0x1ec>
 8000e7c:	2300      	movs	r3, #0
 8000e7e:	f04f 32ff 	mov.w	r2, #4294967295
 8000e82:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000e86:	9304      	str	r3, [sp, #16]
 8000e88:	9307      	str	r3, [sp, #28]
 8000e8a:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000e8e:	931a      	str	r3, [sp, #104]	; 0x68
 8000e90:	46a8      	mov	r8, r5
 8000e92:	2205      	movs	r2, #5
 8000e94:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000e98:	485e      	ldr	r0, [pc, #376]	; (8001014 <_vfiprintf_r+0x210>)
 8000e9a:	f7ff f9b9 	bl	8000210 <memchr>
 8000e9e:	9b04      	ldr	r3, [sp, #16]
 8000ea0:	bb78      	cbnz	r0, 8000f02 <_vfiprintf_r+0xfe>
 8000ea2:	06d9      	lsls	r1, r3, #27
 8000ea4:	bf44      	itt	mi
 8000ea6:	2220      	movmi	r2, #32
 8000ea8:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000eac:	071a      	lsls	r2, r3, #28
 8000eae:	bf44      	itt	mi
 8000eb0:	222b      	movmi	r2, #43	; 0x2b
 8000eb2:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000eb6:	782a      	ldrb	r2, [r5, #0]
 8000eb8:	2a2a      	cmp	r2, #42	; 0x2a
 8000eba:	d02a      	beq.n	8000f12 <_vfiprintf_r+0x10e>
 8000ebc:	9a07      	ldr	r2, [sp, #28]
 8000ebe:	46a8      	mov	r8, r5
 8000ec0:	2000      	movs	r0, #0
 8000ec2:	250a      	movs	r5, #10
 8000ec4:	4641      	mov	r1, r8
 8000ec6:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000eca:	3b30      	subs	r3, #48	; 0x30
 8000ecc:	2b09      	cmp	r3, #9
 8000ece:	d969      	bls.n	8000fa4 <_vfiprintf_r+0x1a0>
 8000ed0:	b360      	cbz	r0, 8000f2c <_vfiprintf_r+0x128>
 8000ed2:	e024      	b.n	8000f1e <_vfiprintf_r+0x11a>
 8000ed4:	4b50      	ldr	r3, [pc, #320]	; (8001018 <_vfiprintf_r+0x214>)
 8000ed6:	429c      	cmp	r4, r3
 8000ed8:	d101      	bne.n	8000ede <_vfiprintf_r+0xda>
 8000eda:	68b4      	ldr	r4, [r6, #8]
 8000edc:	e7a2      	b.n	8000e24 <_vfiprintf_r+0x20>
 8000ede:	4b4f      	ldr	r3, [pc, #316]	; (800101c <_vfiprintf_r+0x218>)
 8000ee0:	429c      	cmp	r4, r3
 8000ee2:	bf08      	it	eq
 8000ee4:	68f4      	ldreq	r4, [r6, #12]
 8000ee6:	e79d      	b.n	8000e24 <_vfiprintf_r+0x20>
 8000ee8:	4621      	mov	r1, r4
 8000eea:	4630      	mov	r0, r6
 8000eec:	f7ff fc6c 	bl	80007c8 <__swsetup_r>
 8000ef0:	2800      	cmp	r0, #0
 8000ef2:	d09d      	beq.n	8000e30 <_vfiprintf_r+0x2c>
 8000ef4:	f04f 30ff 	mov.w	r0, #4294967295
 8000ef8:	b01d      	add	sp, #116	; 0x74
 8000efa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000efe:	46a8      	mov	r8, r5
 8000f00:	e7a2      	b.n	8000e48 <_vfiprintf_r+0x44>
 8000f02:	4a44      	ldr	r2, [pc, #272]	; (8001014 <_vfiprintf_r+0x210>)
 8000f04:	1a80      	subs	r0, r0, r2
 8000f06:	fa0b f000 	lsl.w	r0, fp, r0
 8000f0a:	4318      	orrs	r0, r3
 8000f0c:	9004      	str	r0, [sp, #16]
 8000f0e:	4645      	mov	r5, r8
 8000f10:	e7be      	b.n	8000e90 <_vfiprintf_r+0x8c>
 8000f12:	9a03      	ldr	r2, [sp, #12]
 8000f14:	1d11      	adds	r1, r2, #4
 8000f16:	6812      	ldr	r2, [r2, #0]
 8000f18:	9103      	str	r1, [sp, #12]
 8000f1a:	2a00      	cmp	r2, #0
 8000f1c:	db01      	blt.n	8000f22 <_vfiprintf_r+0x11e>
 8000f1e:	9207      	str	r2, [sp, #28]
 8000f20:	e004      	b.n	8000f2c <_vfiprintf_r+0x128>
 8000f22:	4252      	negs	r2, r2
 8000f24:	f043 0302 	orr.w	r3, r3, #2
 8000f28:	9207      	str	r2, [sp, #28]
 8000f2a:	9304      	str	r3, [sp, #16]
 8000f2c:	f898 3000 	ldrb.w	r3, [r8]
 8000f30:	2b2e      	cmp	r3, #46	; 0x2e
 8000f32:	d10e      	bne.n	8000f52 <_vfiprintf_r+0x14e>
 8000f34:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000f38:	2b2a      	cmp	r3, #42	; 0x2a
 8000f3a:	d138      	bne.n	8000fae <_vfiprintf_r+0x1aa>
 8000f3c:	9b03      	ldr	r3, [sp, #12]
 8000f3e:	1d1a      	adds	r2, r3, #4
 8000f40:	681b      	ldr	r3, [r3, #0]
 8000f42:	9203      	str	r2, [sp, #12]
 8000f44:	2b00      	cmp	r3, #0
 8000f46:	bfb8      	it	lt
 8000f48:	f04f 33ff 	movlt.w	r3, #4294967295
 8000f4c:	f108 0802 	add.w	r8, r8, #2
 8000f50:	9305      	str	r3, [sp, #20]
 8000f52:	4d33      	ldr	r5, [pc, #204]	; (8001020 <_vfiprintf_r+0x21c>)
 8000f54:	f898 1000 	ldrb.w	r1, [r8]
 8000f58:	2203      	movs	r2, #3
 8000f5a:	4628      	mov	r0, r5
 8000f5c:	f7ff f958 	bl	8000210 <memchr>
 8000f60:	b140      	cbz	r0, 8000f74 <_vfiprintf_r+0x170>
 8000f62:	2340      	movs	r3, #64	; 0x40
 8000f64:	1b40      	subs	r0, r0, r5
 8000f66:	fa03 f000 	lsl.w	r0, r3, r0
 8000f6a:	9b04      	ldr	r3, [sp, #16]
 8000f6c:	4303      	orrs	r3, r0
 8000f6e:	f108 0801 	add.w	r8, r8, #1
 8000f72:	9304      	str	r3, [sp, #16]
 8000f74:	f898 1000 	ldrb.w	r1, [r8]
 8000f78:	482a      	ldr	r0, [pc, #168]	; (8001024 <_vfiprintf_r+0x220>)
 8000f7a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000f7e:	2206      	movs	r2, #6
 8000f80:	f108 0701 	add.w	r7, r8, #1
 8000f84:	f7ff f944 	bl	8000210 <memchr>
 8000f88:	2800      	cmp	r0, #0
 8000f8a:	d037      	beq.n	8000ffc <_vfiprintf_r+0x1f8>
 8000f8c:	4b26      	ldr	r3, [pc, #152]	; (8001028 <_vfiprintf_r+0x224>)
 8000f8e:	bb1b      	cbnz	r3, 8000fd8 <_vfiprintf_r+0x1d4>
 8000f90:	9b03      	ldr	r3, [sp, #12]
 8000f92:	3307      	adds	r3, #7
 8000f94:	f023 0307 	bic.w	r3, r3, #7
 8000f98:	3308      	adds	r3, #8
 8000f9a:	9303      	str	r3, [sp, #12]
 8000f9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000f9e:	444b      	add	r3, r9
 8000fa0:	9309      	str	r3, [sp, #36]	; 0x24
 8000fa2:	e750      	b.n	8000e46 <_vfiprintf_r+0x42>
 8000fa4:	fb05 3202 	mla	r2, r5, r2, r3
 8000fa8:	2001      	movs	r0, #1
 8000faa:	4688      	mov	r8, r1
 8000fac:	e78a      	b.n	8000ec4 <_vfiprintf_r+0xc0>
 8000fae:	2300      	movs	r3, #0
 8000fb0:	f108 0801 	add.w	r8, r8, #1
 8000fb4:	9305      	str	r3, [sp, #20]
 8000fb6:	4619      	mov	r1, r3
 8000fb8:	250a      	movs	r5, #10
 8000fba:	4640      	mov	r0, r8
 8000fbc:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000fc0:	3a30      	subs	r2, #48	; 0x30
 8000fc2:	2a09      	cmp	r2, #9
 8000fc4:	d903      	bls.n	8000fce <_vfiprintf_r+0x1ca>
 8000fc6:	2b00      	cmp	r3, #0
 8000fc8:	d0c3      	beq.n	8000f52 <_vfiprintf_r+0x14e>
 8000fca:	9105      	str	r1, [sp, #20]
 8000fcc:	e7c1      	b.n	8000f52 <_vfiprintf_r+0x14e>
 8000fce:	fb05 2101 	mla	r1, r5, r1, r2
 8000fd2:	2301      	movs	r3, #1
 8000fd4:	4680      	mov	r8, r0
 8000fd6:	e7f0      	b.n	8000fba <_vfiprintf_r+0x1b6>
 8000fd8:	ab03      	add	r3, sp, #12
 8000fda:	9300      	str	r3, [sp, #0]
 8000fdc:	4622      	mov	r2, r4
 8000fde:	4b13      	ldr	r3, [pc, #76]	; (800102c <_vfiprintf_r+0x228>)
 8000fe0:	a904      	add	r1, sp, #16
 8000fe2:	4630      	mov	r0, r6
 8000fe4:	f3af 8000 	nop.w
 8000fe8:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000fec:	4681      	mov	r9, r0
 8000fee:	d1d5      	bne.n	8000f9c <_vfiprintf_r+0x198>
 8000ff0:	89a3      	ldrh	r3, [r4, #12]
 8000ff2:	065b      	lsls	r3, r3, #25
 8000ff4:	f53f af7e 	bmi.w	8000ef4 <_vfiprintf_r+0xf0>
 8000ff8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000ffa:	e77d      	b.n	8000ef8 <_vfiprintf_r+0xf4>
 8000ffc:	ab03      	add	r3, sp, #12
 8000ffe:	9300      	str	r3, [sp, #0]
 8001000:	4622      	mov	r2, r4
 8001002:	4b0a      	ldr	r3, [pc, #40]	; (800102c <_vfiprintf_r+0x228>)
 8001004:	a904      	add	r1, sp, #16
 8001006:	4630      	mov	r0, r6
 8001008:	f000 f888 	bl	800111c <_printf_i>
 800100c:	e7ec      	b.n	8000fe8 <_vfiprintf_r+0x1e4>
 800100e:	bf00      	nop
 8001010:	08001580 	.word	0x08001580
 8001014:	080015c0 	.word	0x080015c0
 8001018:	080015a0 	.word	0x080015a0
 800101c:	08001560 	.word	0x08001560
 8001020:	080015c6 	.word	0x080015c6
 8001024:	080015ca 	.word	0x080015ca
 8001028:	00000000 	.word	0x00000000
 800102c:	08000ddf 	.word	0x08000ddf

08001030 <_printf_common>:
 8001030:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001034:	4691      	mov	r9, r2
 8001036:	461f      	mov	r7, r3
 8001038:	688a      	ldr	r2, [r1, #8]
 800103a:	690b      	ldr	r3, [r1, #16]
 800103c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001040:	4293      	cmp	r3, r2
 8001042:	bfb8      	it	lt
 8001044:	4613      	movlt	r3, r2
 8001046:	f8c9 3000 	str.w	r3, [r9]
 800104a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800104e:	4606      	mov	r6, r0
 8001050:	460c      	mov	r4, r1
 8001052:	b112      	cbz	r2, 800105a <_printf_common+0x2a>
 8001054:	3301      	adds	r3, #1
 8001056:	f8c9 3000 	str.w	r3, [r9]
 800105a:	6823      	ldr	r3, [r4, #0]
 800105c:	0699      	lsls	r1, r3, #26
 800105e:	bf42      	ittt	mi
 8001060:	f8d9 3000 	ldrmi.w	r3, [r9]
 8001064:	3302      	addmi	r3, #2
 8001066:	f8c9 3000 	strmi.w	r3, [r9]
 800106a:	6825      	ldr	r5, [r4, #0]
 800106c:	f015 0506 	ands.w	r5, r5, #6
 8001070:	d107      	bne.n	8001082 <_printf_common+0x52>
 8001072:	f104 0a19 	add.w	sl, r4, #25
 8001076:	68e3      	ldr	r3, [r4, #12]
 8001078:	f8d9 2000 	ldr.w	r2, [r9]
 800107c:	1a9b      	subs	r3, r3, r2
 800107e:	42ab      	cmp	r3, r5
 8001080:	dc28      	bgt.n	80010d4 <_printf_common+0xa4>
 8001082:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8001086:	6822      	ldr	r2, [r4, #0]
 8001088:	3300      	adds	r3, #0
 800108a:	bf18      	it	ne
 800108c:	2301      	movne	r3, #1
 800108e:	0692      	lsls	r2, r2, #26
 8001090:	d42d      	bmi.n	80010ee <_printf_common+0xbe>
 8001092:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001096:	4639      	mov	r1, r7
 8001098:	4630      	mov	r0, r6
 800109a:	47c0      	blx	r8
 800109c:	3001      	adds	r0, #1
 800109e:	d020      	beq.n	80010e2 <_printf_common+0xb2>
 80010a0:	6823      	ldr	r3, [r4, #0]
 80010a2:	68e5      	ldr	r5, [r4, #12]
 80010a4:	f8d9 2000 	ldr.w	r2, [r9]
 80010a8:	f003 0306 	and.w	r3, r3, #6
 80010ac:	2b04      	cmp	r3, #4
 80010ae:	bf08      	it	eq
 80010b0:	1aad      	subeq	r5, r5, r2
 80010b2:	68a3      	ldr	r3, [r4, #8]
 80010b4:	6922      	ldr	r2, [r4, #16]
 80010b6:	bf0c      	ite	eq
 80010b8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80010bc:	2500      	movne	r5, #0
 80010be:	4293      	cmp	r3, r2
 80010c0:	bfc4      	itt	gt
 80010c2:	1a9b      	subgt	r3, r3, r2
 80010c4:	18ed      	addgt	r5, r5, r3
 80010c6:	f04f 0900 	mov.w	r9, #0
 80010ca:	341a      	adds	r4, #26
 80010cc:	454d      	cmp	r5, r9
 80010ce:	d11a      	bne.n	8001106 <_printf_common+0xd6>
 80010d0:	2000      	movs	r0, #0
 80010d2:	e008      	b.n	80010e6 <_printf_common+0xb6>
 80010d4:	2301      	movs	r3, #1
 80010d6:	4652      	mov	r2, sl
 80010d8:	4639      	mov	r1, r7
 80010da:	4630      	mov	r0, r6
 80010dc:	47c0      	blx	r8
 80010de:	3001      	adds	r0, #1
 80010e0:	d103      	bne.n	80010ea <_printf_common+0xba>
 80010e2:	f04f 30ff 	mov.w	r0, #4294967295
 80010e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010ea:	3501      	adds	r5, #1
 80010ec:	e7c3      	b.n	8001076 <_printf_common+0x46>
 80010ee:	18e1      	adds	r1, r4, r3
 80010f0:	1c5a      	adds	r2, r3, #1
 80010f2:	2030      	movs	r0, #48	; 0x30
 80010f4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80010f8:	4422      	add	r2, r4
 80010fa:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80010fe:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001102:	3302      	adds	r3, #2
 8001104:	e7c5      	b.n	8001092 <_printf_common+0x62>
 8001106:	2301      	movs	r3, #1
 8001108:	4622      	mov	r2, r4
 800110a:	4639      	mov	r1, r7
 800110c:	4630      	mov	r0, r6
 800110e:	47c0      	blx	r8
 8001110:	3001      	adds	r0, #1
 8001112:	d0e6      	beq.n	80010e2 <_printf_common+0xb2>
 8001114:	f109 0901 	add.w	r9, r9, #1
 8001118:	e7d8      	b.n	80010cc <_printf_common+0x9c>
	...

0800111c <_printf_i>:
 800111c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001120:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8001124:	460c      	mov	r4, r1
 8001126:	7e09      	ldrb	r1, [r1, #24]
 8001128:	b085      	sub	sp, #20
 800112a:	296e      	cmp	r1, #110	; 0x6e
 800112c:	4617      	mov	r7, r2
 800112e:	4606      	mov	r6, r0
 8001130:	4698      	mov	r8, r3
 8001132:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001134:	f000 80b3 	beq.w	800129e <_printf_i+0x182>
 8001138:	d822      	bhi.n	8001180 <_printf_i+0x64>
 800113a:	2963      	cmp	r1, #99	; 0x63
 800113c:	d036      	beq.n	80011ac <_printf_i+0x90>
 800113e:	d80a      	bhi.n	8001156 <_printf_i+0x3a>
 8001140:	2900      	cmp	r1, #0
 8001142:	f000 80b9 	beq.w	80012b8 <_printf_i+0x19c>
 8001146:	2958      	cmp	r1, #88	; 0x58
 8001148:	f000 8083 	beq.w	8001252 <_printf_i+0x136>
 800114c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001150:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8001154:	e032      	b.n	80011bc <_printf_i+0xa0>
 8001156:	2964      	cmp	r1, #100	; 0x64
 8001158:	d001      	beq.n	800115e <_printf_i+0x42>
 800115a:	2969      	cmp	r1, #105	; 0x69
 800115c:	d1f6      	bne.n	800114c <_printf_i+0x30>
 800115e:	6820      	ldr	r0, [r4, #0]
 8001160:	6813      	ldr	r3, [r2, #0]
 8001162:	0605      	lsls	r5, r0, #24
 8001164:	f103 0104 	add.w	r1, r3, #4
 8001168:	d52a      	bpl.n	80011c0 <_printf_i+0xa4>
 800116a:	681b      	ldr	r3, [r3, #0]
 800116c:	6011      	str	r1, [r2, #0]
 800116e:	2b00      	cmp	r3, #0
 8001170:	da03      	bge.n	800117a <_printf_i+0x5e>
 8001172:	222d      	movs	r2, #45	; 0x2d
 8001174:	425b      	negs	r3, r3
 8001176:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 800117a:	486f      	ldr	r0, [pc, #444]	; (8001338 <_printf_i+0x21c>)
 800117c:	220a      	movs	r2, #10
 800117e:	e039      	b.n	80011f4 <_printf_i+0xd8>
 8001180:	2973      	cmp	r1, #115	; 0x73
 8001182:	f000 809d 	beq.w	80012c0 <_printf_i+0x1a4>
 8001186:	d808      	bhi.n	800119a <_printf_i+0x7e>
 8001188:	296f      	cmp	r1, #111	; 0x6f
 800118a:	d020      	beq.n	80011ce <_printf_i+0xb2>
 800118c:	2970      	cmp	r1, #112	; 0x70
 800118e:	d1dd      	bne.n	800114c <_printf_i+0x30>
 8001190:	6823      	ldr	r3, [r4, #0]
 8001192:	f043 0320 	orr.w	r3, r3, #32
 8001196:	6023      	str	r3, [r4, #0]
 8001198:	e003      	b.n	80011a2 <_printf_i+0x86>
 800119a:	2975      	cmp	r1, #117	; 0x75
 800119c:	d017      	beq.n	80011ce <_printf_i+0xb2>
 800119e:	2978      	cmp	r1, #120	; 0x78
 80011a0:	d1d4      	bne.n	800114c <_printf_i+0x30>
 80011a2:	2378      	movs	r3, #120	; 0x78
 80011a4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80011a8:	4864      	ldr	r0, [pc, #400]	; (800133c <_printf_i+0x220>)
 80011aa:	e055      	b.n	8001258 <_printf_i+0x13c>
 80011ac:	6813      	ldr	r3, [r2, #0]
 80011ae:	1d19      	adds	r1, r3, #4
 80011b0:	681b      	ldr	r3, [r3, #0]
 80011b2:	6011      	str	r1, [r2, #0]
 80011b4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80011b8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80011bc:	2301      	movs	r3, #1
 80011be:	e08c      	b.n	80012da <_printf_i+0x1be>
 80011c0:	681b      	ldr	r3, [r3, #0]
 80011c2:	6011      	str	r1, [r2, #0]
 80011c4:	f010 0f40 	tst.w	r0, #64	; 0x40
 80011c8:	bf18      	it	ne
 80011ca:	b21b      	sxthne	r3, r3
 80011cc:	e7cf      	b.n	800116e <_printf_i+0x52>
 80011ce:	6813      	ldr	r3, [r2, #0]
 80011d0:	6825      	ldr	r5, [r4, #0]
 80011d2:	1d18      	adds	r0, r3, #4
 80011d4:	6010      	str	r0, [r2, #0]
 80011d6:	0628      	lsls	r0, r5, #24
 80011d8:	d501      	bpl.n	80011de <_printf_i+0xc2>
 80011da:	681b      	ldr	r3, [r3, #0]
 80011dc:	e002      	b.n	80011e4 <_printf_i+0xc8>
 80011de:	0668      	lsls	r0, r5, #25
 80011e0:	d5fb      	bpl.n	80011da <_printf_i+0xbe>
 80011e2:	881b      	ldrh	r3, [r3, #0]
 80011e4:	4854      	ldr	r0, [pc, #336]	; (8001338 <_printf_i+0x21c>)
 80011e6:	296f      	cmp	r1, #111	; 0x6f
 80011e8:	bf14      	ite	ne
 80011ea:	220a      	movne	r2, #10
 80011ec:	2208      	moveq	r2, #8
 80011ee:	2100      	movs	r1, #0
 80011f0:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80011f4:	6865      	ldr	r5, [r4, #4]
 80011f6:	60a5      	str	r5, [r4, #8]
 80011f8:	2d00      	cmp	r5, #0
 80011fa:	f2c0 8095 	blt.w	8001328 <_printf_i+0x20c>
 80011fe:	6821      	ldr	r1, [r4, #0]
 8001200:	f021 0104 	bic.w	r1, r1, #4
 8001204:	6021      	str	r1, [r4, #0]
 8001206:	2b00      	cmp	r3, #0
 8001208:	d13d      	bne.n	8001286 <_printf_i+0x16a>
 800120a:	2d00      	cmp	r5, #0
 800120c:	f040 808e 	bne.w	800132c <_printf_i+0x210>
 8001210:	4665      	mov	r5, ip
 8001212:	2a08      	cmp	r2, #8
 8001214:	d10b      	bne.n	800122e <_printf_i+0x112>
 8001216:	6823      	ldr	r3, [r4, #0]
 8001218:	07db      	lsls	r3, r3, #31
 800121a:	d508      	bpl.n	800122e <_printf_i+0x112>
 800121c:	6923      	ldr	r3, [r4, #16]
 800121e:	6862      	ldr	r2, [r4, #4]
 8001220:	429a      	cmp	r2, r3
 8001222:	bfde      	ittt	le
 8001224:	2330      	movle	r3, #48	; 0x30
 8001226:	f805 3c01 	strble.w	r3, [r5, #-1]
 800122a:	f105 35ff 	addle.w	r5, r5, #4294967295
 800122e:	ebac 0305 	sub.w	r3, ip, r5
 8001232:	6123      	str	r3, [r4, #16]
 8001234:	f8cd 8000 	str.w	r8, [sp]
 8001238:	463b      	mov	r3, r7
 800123a:	aa03      	add	r2, sp, #12
 800123c:	4621      	mov	r1, r4
 800123e:	4630      	mov	r0, r6
 8001240:	f7ff fef6 	bl	8001030 <_printf_common>
 8001244:	3001      	adds	r0, #1
 8001246:	d14d      	bne.n	80012e4 <_printf_i+0x1c8>
 8001248:	f04f 30ff 	mov.w	r0, #4294967295
 800124c:	b005      	add	sp, #20
 800124e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001252:	4839      	ldr	r0, [pc, #228]	; (8001338 <_printf_i+0x21c>)
 8001254:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8001258:	6813      	ldr	r3, [r2, #0]
 800125a:	6821      	ldr	r1, [r4, #0]
 800125c:	1d1d      	adds	r5, r3, #4
 800125e:	681b      	ldr	r3, [r3, #0]
 8001260:	6015      	str	r5, [r2, #0]
 8001262:	060a      	lsls	r2, r1, #24
 8001264:	d50b      	bpl.n	800127e <_printf_i+0x162>
 8001266:	07ca      	lsls	r2, r1, #31
 8001268:	bf44      	itt	mi
 800126a:	f041 0120 	orrmi.w	r1, r1, #32
 800126e:	6021      	strmi	r1, [r4, #0]
 8001270:	b91b      	cbnz	r3, 800127a <_printf_i+0x15e>
 8001272:	6822      	ldr	r2, [r4, #0]
 8001274:	f022 0220 	bic.w	r2, r2, #32
 8001278:	6022      	str	r2, [r4, #0]
 800127a:	2210      	movs	r2, #16
 800127c:	e7b7      	b.n	80011ee <_printf_i+0xd2>
 800127e:	064d      	lsls	r5, r1, #25
 8001280:	bf48      	it	mi
 8001282:	b29b      	uxthmi	r3, r3
 8001284:	e7ef      	b.n	8001266 <_printf_i+0x14a>
 8001286:	4665      	mov	r5, ip
 8001288:	fbb3 f1f2 	udiv	r1, r3, r2
 800128c:	fb02 3311 	mls	r3, r2, r1, r3
 8001290:	5cc3      	ldrb	r3, [r0, r3]
 8001292:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8001296:	460b      	mov	r3, r1
 8001298:	2900      	cmp	r1, #0
 800129a:	d1f5      	bne.n	8001288 <_printf_i+0x16c>
 800129c:	e7b9      	b.n	8001212 <_printf_i+0xf6>
 800129e:	6813      	ldr	r3, [r2, #0]
 80012a0:	6825      	ldr	r5, [r4, #0]
 80012a2:	6961      	ldr	r1, [r4, #20]
 80012a4:	1d18      	adds	r0, r3, #4
 80012a6:	6010      	str	r0, [r2, #0]
 80012a8:	0628      	lsls	r0, r5, #24
 80012aa:	681b      	ldr	r3, [r3, #0]
 80012ac:	d501      	bpl.n	80012b2 <_printf_i+0x196>
 80012ae:	6019      	str	r1, [r3, #0]
 80012b0:	e002      	b.n	80012b8 <_printf_i+0x19c>
 80012b2:	066a      	lsls	r2, r5, #25
 80012b4:	d5fb      	bpl.n	80012ae <_printf_i+0x192>
 80012b6:	8019      	strh	r1, [r3, #0]
 80012b8:	2300      	movs	r3, #0
 80012ba:	6123      	str	r3, [r4, #16]
 80012bc:	4665      	mov	r5, ip
 80012be:	e7b9      	b.n	8001234 <_printf_i+0x118>
 80012c0:	6813      	ldr	r3, [r2, #0]
 80012c2:	1d19      	adds	r1, r3, #4
 80012c4:	6011      	str	r1, [r2, #0]
 80012c6:	681d      	ldr	r5, [r3, #0]
 80012c8:	6862      	ldr	r2, [r4, #4]
 80012ca:	2100      	movs	r1, #0
 80012cc:	4628      	mov	r0, r5
 80012ce:	f7fe ff9f 	bl	8000210 <memchr>
 80012d2:	b108      	cbz	r0, 80012d8 <_printf_i+0x1bc>
 80012d4:	1b40      	subs	r0, r0, r5
 80012d6:	6060      	str	r0, [r4, #4]
 80012d8:	6863      	ldr	r3, [r4, #4]
 80012da:	6123      	str	r3, [r4, #16]
 80012dc:	2300      	movs	r3, #0
 80012de:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80012e2:	e7a7      	b.n	8001234 <_printf_i+0x118>
 80012e4:	6923      	ldr	r3, [r4, #16]
 80012e6:	462a      	mov	r2, r5
 80012e8:	4639      	mov	r1, r7
 80012ea:	4630      	mov	r0, r6
 80012ec:	47c0      	blx	r8
 80012ee:	3001      	adds	r0, #1
 80012f0:	d0aa      	beq.n	8001248 <_printf_i+0x12c>
 80012f2:	6823      	ldr	r3, [r4, #0]
 80012f4:	079b      	lsls	r3, r3, #30
 80012f6:	d413      	bmi.n	8001320 <_printf_i+0x204>
 80012f8:	68e0      	ldr	r0, [r4, #12]
 80012fa:	9b03      	ldr	r3, [sp, #12]
 80012fc:	4298      	cmp	r0, r3
 80012fe:	bfb8      	it	lt
 8001300:	4618      	movlt	r0, r3
 8001302:	e7a3      	b.n	800124c <_printf_i+0x130>
 8001304:	2301      	movs	r3, #1
 8001306:	464a      	mov	r2, r9
 8001308:	4639      	mov	r1, r7
 800130a:	4630      	mov	r0, r6
 800130c:	47c0      	blx	r8
 800130e:	3001      	adds	r0, #1
 8001310:	d09a      	beq.n	8001248 <_printf_i+0x12c>
 8001312:	3501      	adds	r5, #1
 8001314:	68e3      	ldr	r3, [r4, #12]
 8001316:	9a03      	ldr	r2, [sp, #12]
 8001318:	1a9b      	subs	r3, r3, r2
 800131a:	42ab      	cmp	r3, r5
 800131c:	dcf2      	bgt.n	8001304 <_printf_i+0x1e8>
 800131e:	e7eb      	b.n	80012f8 <_printf_i+0x1dc>
 8001320:	2500      	movs	r5, #0
 8001322:	f104 0919 	add.w	r9, r4, #25
 8001326:	e7f5      	b.n	8001314 <_printf_i+0x1f8>
 8001328:	2b00      	cmp	r3, #0
 800132a:	d1ac      	bne.n	8001286 <_printf_i+0x16a>
 800132c:	7803      	ldrb	r3, [r0, #0]
 800132e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001332:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001336:	e76c      	b.n	8001212 <_printf_i+0xf6>
 8001338:	080015d1 	.word	0x080015d1
 800133c:	080015e2 	.word	0x080015e2

08001340 <_sbrk_r>:
 8001340:	b538      	push	{r3, r4, r5, lr}
 8001342:	4c06      	ldr	r4, [pc, #24]	; (800135c <_sbrk_r+0x1c>)
 8001344:	2300      	movs	r3, #0
 8001346:	4605      	mov	r5, r0
 8001348:	4608      	mov	r0, r1
 800134a:	6023      	str	r3, [r4, #0]
 800134c:	f7ff f8e6 	bl	800051c <_sbrk>
 8001350:	1c43      	adds	r3, r0, #1
 8001352:	d102      	bne.n	800135a <_sbrk_r+0x1a>
 8001354:	6823      	ldr	r3, [r4, #0]
 8001356:	b103      	cbz	r3, 800135a <_sbrk_r+0x1a>
 8001358:	602b      	str	r3, [r5, #0]
 800135a:	bd38      	pop	{r3, r4, r5, pc}
 800135c:	2000008c 	.word	0x2000008c

08001360 <__sread>:
 8001360:	b510      	push	{r4, lr}
 8001362:	460c      	mov	r4, r1
 8001364:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001368:	f000 f896 	bl	8001498 <_read_r>
 800136c:	2800      	cmp	r0, #0
 800136e:	bfab      	itete	ge
 8001370:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001372:	89a3      	ldrhlt	r3, [r4, #12]
 8001374:	181b      	addge	r3, r3, r0
 8001376:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800137a:	bfac      	ite	ge
 800137c:	6563      	strge	r3, [r4, #84]	; 0x54
 800137e:	81a3      	strhlt	r3, [r4, #12]
 8001380:	bd10      	pop	{r4, pc}

08001382 <__swrite>:
 8001382:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001386:	461f      	mov	r7, r3
 8001388:	898b      	ldrh	r3, [r1, #12]
 800138a:	05db      	lsls	r3, r3, #23
 800138c:	4605      	mov	r5, r0
 800138e:	460c      	mov	r4, r1
 8001390:	4616      	mov	r6, r2
 8001392:	d505      	bpl.n	80013a0 <__swrite+0x1e>
 8001394:	2302      	movs	r3, #2
 8001396:	2200      	movs	r2, #0
 8001398:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800139c:	f000 f868 	bl	8001470 <_lseek_r>
 80013a0:	89a3      	ldrh	r3, [r4, #12]
 80013a2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013a6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80013aa:	81a3      	strh	r3, [r4, #12]
 80013ac:	4632      	mov	r2, r6
 80013ae:	463b      	mov	r3, r7
 80013b0:	4628      	mov	r0, r5
 80013b2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80013b6:	f000 b817 	b.w	80013e8 <_write_r>

080013ba <__sseek>:
 80013ba:	b510      	push	{r4, lr}
 80013bc:	460c      	mov	r4, r1
 80013be:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013c2:	f000 f855 	bl	8001470 <_lseek_r>
 80013c6:	1c43      	adds	r3, r0, #1
 80013c8:	89a3      	ldrh	r3, [r4, #12]
 80013ca:	bf15      	itete	ne
 80013cc:	6560      	strne	r0, [r4, #84]	; 0x54
 80013ce:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80013d2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80013d6:	81a3      	strheq	r3, [r4, #12]
 80013d8:	bf18      	it	ne
 80013da:	81a3      	strhne	r3, [r4, #12]
 80013dc:	bd10      	pop	{r4, pc}

080013de <__sclose>:
 80013de:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013e2:	f000 b813 	b.w	800140c <_close_r>
	...

080013e8 <_write_r>:
 80013e8:	b538      	push	{r3, r4, r5, lr}
 80013ea:	4c07      	ldr	r4, [pc, #28]	; (8001408 <_write_r+0x20>)
 80013ec:	4605      	mov	r5, r0
 80013ee:	4608      	mov	r0, r1
 80013f0:	4611      	mov	r1, r2
 80013f2:	2200      	movs	r2, #0
 80013f4:	6022      	str	r2, [r4, #0]
 80013f6:	461a      	mov	r2, r3
 80013f8:	f7ff f83f 	bl	800047a <_write>
 80013fc:	1c43      	adds	r3, r0, #1
 80013fe:	d102      	bne.n	8001406 <_write_r+0x1e>
 8001400:	6823      	ldr	r3, [r4, #0]
 8001402:	b103      	cbz	r3, 8001406 <_write_r+0x1e>
 8001404:	602b      	str	r3, [r5, #0]
 8001406:	bd38      	pop	{r3, r4, r5, pc}
 8001408:	2000008c 	.word	0x2000008c

0800140c <_close_r>:
 800140c:	b538      	push	{r3, r4, r5, lr}
 800140e:	4c06      	ldr	r4, [pc, #24]	; (8001428 <_close_r+0x1c>)
 8001410:	2300      	movs	r3, #0
 8001412:	4605      	mov	r5, r0
 8001414:	4608      	mov	r0, r1
 8001416:	6023      	str	r3, [r4, #0]
 8001418:	f7ff f84b 	bl	80004b2 <_close>
 800141c:	1c43      	adds	r3, r0, #1
 800141e:	d102      	bne.n	8001426 <_close_r+0x1a>
 8001420:	6823      	ldr	r3, [r4, #0]
 8001422:	b103      	cbz	r3, 8001426 <_close_r+0x1a>
 8001424:	602b      	str	r3, [r5, #0]
 8001426:	bd38      	pop	{r3, r4, r5, pc}
 8001428:	2000008c 	.word	0x2000008c

0800142c <_fstat_r>:
 800142c:	b538      	push	{r3, r4, r5, lr}
 800142e:	4c07      	ldr	r4, [pc, #28]	; (800144c <_fstat_r+0x20>)
 8001430:	2300      	movs	r3, #0
 8001432:	4605      	mov	r5, r0
 8001434:	4608      	mov	r0, r1
 8001436:	4611      	mov	r1, r2
 8001438:	6023      	str	r3, [r4, #0]
 800143a:	f7ff f846 	bl	80004ca <_fstat>
 800143e:	1c43      	adds	r3, r0, #1
 8001440:	d102      	bne.n	8001448 <_fstat_r+0x1c>
 8001442:	6823      	ldr	r3, [r4, #0]
 8001444:	b103      	cbz	r3, 8001448 <_fstat_r+0x1c>
 8001446:	602b      	str	r3, [r5, #0]
 8001448:	bd38      	pop	{r3, r4, r5, pc}
 800144a:	bf00      	nop
 800144c:	2000008c 	.word	0x2000008c

08001450 <_isatty_r>:
 8001450:	b538      	push	{r3, r4, r5, lr}
 8001452:	4c06      	ldr	r4, [pc, #24]	; (800146c <_isatty_r+0x1c>)
 8001454:	2300      	movs	r3, #0
 8001456:	4605      	mov	r5, r0
 8001458:	4608      	mov	r0, r1
 800145a:	6023      	str	r3, [r4, #0]
 800145c:	f7ff f845 	bl	80004ea <_isatty>
 8001460:	1c43      	adds	r3, r0, #1
 8001462:	d102      	bne.n	800146a <_isatty_r+0x1a>
 8001464:	6823      	ldr	r3, [r4, #0]
 8001466:	b103      	cbz	r3, 800146a <_isatty_r+0x1a>
 8001468:	602b      	str	r3, [r5, #0]
 800146a:	bd38      	pop	{r3, r4, r5, pc}
 800146c:	2000008c 	.word	0x2000008c

08001470 <_lseek_r>:
 8001470:	b538      	push	{r3, r4, r5, lr}
 8001472:	4c07      	ldr	r4, [pc, #28]	; (8001490 <_lseek_r+0x20>)
 8001474:	4605      	mov	r5, r0
 8001476:	4608      	mov	r0, r1
 8001478:	4611      	mov	r1, r2
 800147a:	2200      	movs	r2, #0
 800147c:	6022      	str	r2, [r4, #0]
 800147e:	461a      	mov	r2, r3
 8001480:	f7ff f83e 	bl	8000500 <_lseek>
 8001484:	1c43      	adds	r3, r0, #1
 8001486:	d102      	bne.n	800148e <_lseek_r+0x1e>
 8001488:	6823      	ldr	r3, [r4, #0]
 800148a:	b103      	cbz	r3, 800148e <_lseek_r+0x1e>
 800148c:	602b      	str	r3, [r5, #0]
 800148e:	bd38      	pop	{r3, r4, r5, pc}
 8001490:	2000008c 	.word	0x2000008c

08001494 <__malloc_lock>:
 8001494:	4770      	bx	lr

08001496 <__malloc_unlock>:
 8001496:	4770      	bx	lr

08001498 <_read_r>:
 8001498:	b538      	push	{r3, r4, r5, lr}
 800149a:	4c07      	ldr	r4, [pc, #28]	; (80014b8 <_read_r+0x20>)
 800149c:	4605      	mov	r5, r0
 800149e:	4608      	mov	r0, r1
 80014a0:	4611      	mov	r1, r2
 80014a2:	2200      	movs	r2, #0
 80014a4:	6022      	str	r2, [r4, #0]
 80014a6:	461a      	mov	r2, r3
 80014a8:	f7fe ffca 	bl	8000440 <_read>
 80014ac:	1c43      	adds	r3, r0, #1
 80014ae:	d102      	bne.n	80014b6 <_read_r+0x1e>
 80014b0:	6823      	ldr	r3, [r4, #0]
 80014b2:	b103      	cbz	r3, 80014b6 <_read_r+0x1e>
 80014b4:	602b      	str	r3, [r5, #0]
 80014b6:	bd38      	pop	{r3, r4, r5, pc}
 80014b8:	2000008c 	.word	0x2000008c

080014bc <_init>:
 80014bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014be:	bf00      	nop
 80014c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014c2:	bc08      	pop	{r3}
 80014c4:	469e      	mov	lr, r3
 80014c6:	4770      	bx	lr

080014c8 <_fini>:
 80014c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014ca:	bf00      	nop
 80014cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014ce:	bc08      	pop	{r3}
 80014d0:	469e      	mov	lr, r3
 80014d2:	4770      	bx	lr
