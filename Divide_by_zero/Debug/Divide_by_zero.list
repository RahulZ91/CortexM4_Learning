
Divide_by_zero.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001224  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001d4  080013f4  080013f4  000113f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080015c8  080015c8  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080015c8  080015c8  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080015c8  080015c8  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080015c8  080015c8  000115c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080015cc  080015cc  000115cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080015d0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  08001634  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  08001634  00020090  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000217a  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000624  00000000  00000000  0002220e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000140  00000000  00000000  00022838  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000108  00000000  00000000  00022978  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002a7a  00000000  00000000  00022a80  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000138a  00000000  00000000  000254fa  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00009107  00000000  00000000  00026884  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002f98b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000af4  00000000  00000000  0002fa08  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080013dc 	.word	0x080013dc

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	080013dc 	.word	0x080013dc

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <main>:
#include<stdio.h>
#include<stdint.h>

int div_test(int x,int y);
int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b082      	sub	sp, #8
 80002b4:	af00      	add	r7, sp, #0
	// access the SCB and then the SHSCR for the cortex M4 processor
	uint32_t *pSHCRS=(uint32_t *)0xE000ED24; // pointer that points to a memory location at 0xE000ED24
 80002b6:	4b12      	ldr	r3, [pc, #72]	; (8000300 <main+0x50>)
 80002b8:	607b      	str	r3, [r7, #4]

	// enable the bits for mem manage,bus fault and usage fault
	*pSHCRS |= (1<<16);
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	601a      	str	r2, [r3, #0]
	*pSHCRS |= (1<<17);
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	601a      	str	r2, [r3, #0]
	*pSHCRS |= (1<<18);
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	601a      	str	r2, [r3, #0]

	// enable the divide by zero trap - control and configuration regsiter
	uint32_t *pDivZero=(uint32_t *)0xE000ED14; // pointer to base address of ccr
 80002de:	4b09      	ldr	r3, [pc, #36]	; (8000304 <main+0x54>)
 80002e0:	603b      	str	r3, [r7, #0]
	*pDivZero |= (1<<4);
 80002e2:	683b      	ldr	r3, [r7, #0]
 80002e4:	681b      	ldr	r3, [r3, #0]
 80002e6:	f043 0210 	orr.w	r2, r3, #16
 80002ea:	683b      	ldr	r3, [r7, #0]
 80002ec:	601a      	str	r2, [r3, #0]

	// call a function to test
	div_test(5,0);
 80002ee:	2100      	movs	r1, #0
 80002f0:	2005      	movs	r0, #5
 80002f2:	f000 f88b 	bl	800040c <div_test>
 80002f6:	2300      	movs	r3, #0

}
 80002f8:	4618      	mov	r0, r3
 80002fa:	3708      	adds	r7, #8
 80002fc:	46bd      	mov	sp, r7
 80002fe:	bd80      	pop	{r7, pc}
 8000300:	e000ed24 	.word	0xe000ed24
 8000304:	e000ed14 	.word	0xe000ed14

08000308 <BusFault_Handler>:

void BusFault_Handler()
{
 8000308:	b580      	push	{r7, lr}
 800030a:	af00      	add	r7, sp, #0
	printf("Exception: Bus fault");
 800030c:	4801      	ldr	r0, [pc, #4]	; (8000314 <BusFault_Handler+0xc>)
 800030e:	f000 f981 	bl	8000614 <iprintf>
	while(1);
 8000312:	e7fe      	b.n	8000312 <BusFault_Handler+0xa>
 8000314:	080013f4 	.word	0x080013f4

08000318 <MemManage_Handler>:
}

void MemManage_Handler()
{
 8000318:	b580      	push	{r7, lr}
 800031a:	af00      	add	r7, sp, #0
	printf("Exception: Mem manage");
 800031c:	4801      	ldr	r0, [pc, #4]	; (8000324 <MemManage_Handler+0xc>)
 800031e:	f000 f979 	bl	8000614 <iprintf>
	while(1);
 8000322:	e7fe      	b.n	8000322 <MemManage_Handler+0xa>
 8000324:	0800140c 	.word	0x0800140c

08000328 <UsageFault_Handler>:
// code in assembly avoids the epilogue and the prologue to the function

__attribute__((naked)) void UsageFault_Handler(void)
{
	// this function contains code in only assembly
	__asm("MRS r0,MSP");
 8000328:	f3ef 8008 	mrs	r0, MSP
	__asm("B UsageFault_Handler_c"); // branches to UsageFault_Handler_c function pBaseStack contains the value of r0 which is the base address of the MSP
 800032c:	f000 b802 	b.w	8000334 <UsageFault_Handler_c>
}
 8000330:	bf00      	nop
	...

08000334 <UsageFault_Handler_c>:

void UsageFault_Handler_c(uint32_t *pBaseStack)
{
 8000334:	b580      	push	{r7, lr}
 8000336:	b084      	sub	sp, #16
 8000338:	af00      	add	r7, sp, #0
 800033a:	6078      	str	r0, [r7, #4]
	uint32_t *pUFSR=(uint32_t *)0xE000ED2A;
 800033c:	4b23      	ldr	r3, [pc, #140]	; (80003cc <UsageFault_Handler_c+0x98>)
 800033e:	60fb      	str	r3, [r7, #12]
	printf("Exception: Usage fault");
 8000340:	4823      	ldr	r0, [pc, #140]	; (80003d0 <UsageFault_Handler_c+0x9c>)
 8000342:	f000 f967 	bl	8000614 <iprintf>
	printf("Status register for Usage fault = %lx\n",((*pUFSR)&0xFFFF));
 8000346:	68fb      	ldr	r3, [r7, #12]
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	b29b      	uxth	r3, r3
 800034c:	4619      	mov	r1, r3
 800034e:	4821      	ldr	r0, [pc, #132]	; (80003d4 <UsageFault_Handler_c+0xa0>)
 8000350:	f000 f960 	bl	8000614 <iprintf>
	printf("MSP value = %p\n",pBaseStack);
 8000354:	6879      	ldr	r1, [r7, #4]
 8000356:	4820      	ldr	r0, [pc, #128]	; (80003d8 <UsageFault_Handler_c+0xa4>)
 8000358:	f000 f95c 	bl	8000614 <iprintf>
	printf("Value of r0 = %lx\n",pBaseStack[0]);
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	4619      	mov	r1, r3
 8000362:	481e      	ldr	r0, [pc, #120]	; (80003dc <UsageFault_Handler_c+0xa8>)
 8000364:	f000 f956 	bl	8000614 <iprintf>
	printf("Value of r1 = %lx\n",pBaseStack[1]);
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	3304      	adds	r3, #4
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	4619      	mov	r1, r3
 8000370:	481b      	ldr	r0, [pc, #108]	; (80003e0 <UsageFault_Handler_c+0xac>)
 8000372:	f000 f94f 	bl	8000614 <iprintf>
	printf("Value of r2 = %lx\n",pBaseStack[2]);
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	3308      	adds	r3, #8
 800037a:	681b      	ldr	r3, [r3, #0]
 800037c:	4619      	mov	r1, r3
 800037e:	4819      	ldr	r0, [pc, #100]	; (80003e4 <UsageFault_Handler_c+0xb0>)
 8000380:	f000 f948 	bl	8000614 <iprintf>
	printf("Value of r3 = %lx\n",pBaseStack[3]);
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	330c      	adds	r3, #12
 8000388:	681b      	ldr	r3, [r3, #0]
 800038a:	4619      	mov	r1, r3
 800038c:	4816      	ldr	r0, [pc, #88]	; (80003e8 <UsageFault_Handler_c+0xb4>)
 800038e:	f000 f941 	bl	8000614 <iprintf>
	printf("Value of r12 = %lx\n",pBaseStack[4]);
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	3310      	adds	r3, #16
 8000396:	681b      	ldr	r3, [r3, #0]
 8000398:	4619      	mov	r1, r3
 800039a:	4814      	ldr	r0, [pc, #80]	; (80003ec <UsageFault_Handler_c+0xb8>)
 800039c:	f000 f93a 	bl	8000614 <iprintf>
	printf("Value of LR = %lx\n",pBaseStack[5]);
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	3314      	adds	r3, #20
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	4619      	mov	r1, r3
 80003a8:	4811      	ldr	r0, [pc, #68]	; (80003f0 <UsageFault_Handler_c+0xbc>)
 80003aa:	f000 f933 	bl	8000614 <iprintf>
	printf("Value of PC = %lx\n",pBaseStack[6]);
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	3318      	adds	r3, #24
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	4619      	mov	r1, r3
 80003b6:	480f      	ldr	r0, [pc, #60]	; (80003f4 <UsageFault_Handler_c+0xc0>)
 80003b8:	f000 f92c 	bl	8000614 <iprintf>
	printf("Value of XPSR = %lx\n",pBaseStack[7]);
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	331c      	adds	r3, #28
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	4619      	mov	r1, r3
 80003c4:	480c      	ldr	r0, [pc, #48]	; (80003f8 <UsageFault_Handler_c+0xc4>)
 80003c6:	f000 f925 	bl	8000614 <iprintf>

	while(1);
 80003ca:	e7fe      	b.n	80003ca <UsageFault_Handler_c+0x96>
 80003cc:	e000ed2a 	.word	0xe000ed2a
 80003d0:	08001424 	.word	0x08001424
 80003d4:	0800143c 	.word	0x0800143c
 80003d8:	08001464 	.word	0x08001464
 80003dc:	08001474 	.word	0x08001474
 80003e0:	08001488 	.word	0x08001488
 80003e4:	0800149c 	.word	0x0800149c
 80003e8:	080014b0 	.word	0x080014b0
 80003ec:	080014c4 	.word	0x080014c4
 80003f0:	080014d8 	.word	0x080014d8
 80003f4:	080014ec 	.word	0x080014ec
 80003f8:	08001500 	.word	0x08001500

080003fc <HardFault_Handler>:
}

void HardFault_Handler()
{
 80003fc:	b580      	push	{r7, lr}
 80003fe:	af00      	add	r7, sp, #0
	printf("Exception: Hard fault");
 8000400:	4801      	ldr	r0, [pc, #4]	; (8000408 <HardFault_Handler+0xc>)
 8000402:	f000 f907 	bl	8000614 <iprintf>
	while(1);
 8000406:	e7fe      	b.n	8000406 <HardFault_Handler+0xa>
 8000408:	08001518 	.word	0x08001518

0800040c <div_test>:
}

int div_test(int x,int y)
{
 800040c:	b480      	push	{r7}
 800040e:	b083      	sub	sp, #12
 8000410:	af00      	add	r7, sp, #0
 8000412:	6078      	str	r0, [r7, #4]
 8000414:	6039      	str	r1, [r7, #0]
	return x/y;
 8000416:	687a      	ldr	r2, [r7, #4]
 8000418:	683b      	ldr	r3, [r7, #0]
 800041a:	fb92 f3f3 	sdiv	r3, r2, r3
}
 800041e:	4618      	mov	r0, r3
 8000420:	370c      	adds	r7, #12
 8000422:	46bd      	mov	sp, r7
 8000424:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000428:	4770      	bx	lr

0800042a <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800042a:	b580      	push	{r7, lr}
 800042c:	b086      	sub	sp, #24
 800042e:	af00      	add	r7, sp, #0
 8000430:	60f8      	str	r0, [r7, #12]
 8000432:	60b9      	str	r1, [r7, #8]
 8000434:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000436:	2300      	movs	r3, #0
 8000438:	617b      	str	r3, [r7, #20]
 800043a:	e00a      	b.n	8000452 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800043c:	f3af 8000 	nop.w
 8000440:	4601      	mov	r1, r0
 8000442:	68bb      	ldr	r3, [r7, #8]
 8000444:	1c5a      	adds	r2, r3, #1
 8000446:	60ba      	str	r2, [r7, #8]
 8000448:	b2ca      	uxtb	r2, r1
 800044a:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800044c:	697b      	ldr	r3, [r7, #20]
 800044e:	3301      	adds	r3, #1
 8000450:	617b      	str	r3, [r7, #20]
 8000452:	697a      	ldr	r2, [r7, #20]
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	429a      	cmp	r2, r3
 8000458:	dbf0      	blt.n	800043c <_read+0x12>
	}

return len;
 800045a:	687b      	ldr	r3, [r7, #4]
}
 800045c:	4618      	mov	r0, r3
 800045e:	3718      	adds	r7, #24
 8000460:	46bd      	mov	sp, r7
 8000462:	bd80      	pop	{r7, pc}

08000464 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000464:	b580      	push	{r7, lr}
 8000466:	b086      	sub	sp, #24
 8000468:	af00      	add	r7, sp, #0
 800046a:	60f8      	str	r0, [r7, #12]
 800046c:	60b9      	str	r1, [r7, #8]
 800046e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000470:	2300      	movs	r3, #0
 8000472:	617b      	str	r3, [r7, #20]
 8000474:	e009      	b.n	800048a <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000476:	68bb      	ldr	r3, [r7, #8]
 8000478:	1c5a      	adds	r2, r3, #1
 800047a:	60ba      	str	r2, [r7, #8]
 800047c:	781b      	ldrb	r3, [r3, #0]
 800047e:	4618      	mov	r0, r3
 8000480:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000484:	697b      	ldr	r3, [r7, #20]
 8000486:	3301      	adds	r3, #1
 8000488:	617b      	str	r3, [r7, #20]
 800048a:	697a      	ldr	r2, [r7, #20]
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	429a      	cmp	r2, r3
 8000490:	dbf1      	blt.n	8000476 <_write+0x12>
	}
	return len;
 8000492:	687b      	ldr	r3, [r7, #4]
}
 8000494:	4618      	mov	r0, r3
 8000496:	3718      	adds	r7, #24
 8000498:	46bd      	mov	sp, r7
 800049a:	bd80      	pop	{r7, pc}

0800049c <_close>:

int _close(int file)
{
 800049c:	b480      	push	{r7}
 800049e:	b083      	sub	sp, #12
 80004a0:	af00      	add	r7, sp, #0
 80004a2:	6078      	str	r0, [r7, #4]
	return -1;
 80004a4:	f04f 33ff 	mov.w	r3, #4294967295
}
 80004a8:	4618      	mov	r0, r3
 80004aa:	370c      	adds	r7, #12
 80004ac:	46bd      	mov	sp, r7
 80004ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004b2:	4770      	bx	lr

080004b4 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004b4:	b480      	push	{r7}
 80004b6:	b083      	sub	sp, #12
 80004b8:	af00      	add	r7, sp, #0
 80004ba:	6078      	str	r0, [r7, #4]
 80004bc:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80004be:	683b      	ldr	r3, [r7, #0]
 80004c0:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80004c4:	605a      	str	r2, [r3, #4]
	return 0;
 80004c6:	2300      	movs	r3, #0
}
 80004c8:	4618      	mov	r0, r3
 80004ca:	370c      	adds	r7, #12
 80004cc:	46bd      	mov	sp, r7
 80004ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d2:	4770      	bx	lr

080004d4 <_isatty>:

int _isatty(int file)
{
 80004d4:	b480      	push	{r7}
 80004d6:	b083      	sub	sp, #12
 80004d8:	af00      	add	r7, sp, #0
 80004da:	6078      	str	r0, [r7, #4]
	return 1;
 80004dc:	2301      	movs	r3, #1
}
 80004de:	4618      	mov	r0, r3
 80004e0:	370c      	adds	r7, #12
 80004e2:	46bd      	mov	sp, r7
 80004e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004e8:	4770      	bx	lr

080004ea <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004ea:	b480      	push	{r7}
 80004ec:	b085      	sub	sp, #20
 80004ee:	af00      	add	r7, sp, #0
 80004f0:	60f8      	str	r0, [r7, #12]
 80004f2:	60b9      	str	r1, [r7, #8]
 80004f4:	607a      	str	r2, [r7, #4]
	return 0;
 80004f6:	2300      	movs	r3, #0
}
 80004f8:	4618      	mov	r0, r3
 80004fa:	3714      	adds	r7, #20
 80004fc:	46bd      	mov	sp, r7
 80004fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000502:	4770      	bx	lr

08000504 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8000504:	b580      	push	{r7, lr}
 8000506:	b084      	sub	sp, #16
 8000508:	af00      	add	r7, sp, #0
 800050a:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800050c:	4b11      	ldr	r3, [pc, #68]	; (8000554 <_sbrk+0x50>)
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	2b00      	cmp	r3, #0
 8000512:	d102      	bne.n	800051a <_sbrk+0x16>
		heap_end = &end;
 8000514:	4b0f      	ldr	r3, [pc, #60]	; (8000554 <_sbrk+0x50>)
 8000516:	4a10      	ldr	r2, [pc, #64]	; (8000558 <_sbrk+0x54>)
 8000518:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 800051a:	4b0e      	ldr	r3, [pc, #56]	; (8000554 <_sbrk+0x50>)
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8000520:	4b0c      	ldr	r3, [pc, #48]	; (8000554 <_sbrk+0x50>)
 8000522:	681a      	ldr	r2, [r3, #0]
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	4413      	add	r3, r2
 8000528:	466a      	mov	r2, sp
 800052a:	4293      	cmp	r3, r2
 800052c:	d907      	bls.n	800053e <_sbrk+0x3a>
	{
		errno = ENOMEM;
 800052e:	f000 f83f 	bl	80005b0 <__errno>
 8000532:	4602      	mov	r2, r0
 8000534:	230c      	movs	r3, #12
 8000536:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 8000538:	f04f 33ff 	mov.w	r3, #4294967295
 800053c:	e006      	b.n	800054c <_sbrk+0x48>
	}

	heap_end += incr;
 800053e:	4b05      	ldr	r3, [pc, #20]	; (8000554 <_sbrk+0x50>)
 8000540:	681a      	ldr	r2, [r3, #0]
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	4413      	add	r3, r2
 8000546:	4a03      	ldr	r2, [pc, #12]	; (8000554 <_sbrk+0x50>)
 8000548:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800054a:	68fb      	ldr	r3, [r7, #12]
}
 800054c:	4618      	mov	r0, r3
 800054e:	3710      	adds	r7, #16
 8000550:	46bd      	mov	sp, r7
 8000552:	bd80      	pop	{r7, pc}
 8000554:	20000080 	.word	0x20000080
 8000558:	20000090 	.word	0x20000090

0800055c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800055c:	480d      	ldr	r0, [pc, #52]	; (8000594 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800055e:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000560:	480d      	ldr	r0, [pc, #52]	; (8000598 <LoopForever+0x6>)
  ldr r1, =_edata
 8000562:	490e      	ldr	r1, [pc, #56]	; (800059c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000564:	4a0e      	ldr	r2, [pc, #56]	; (80005a0 <LoopForever+0xe>)
  movs r3, #0
 8000566:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000568:	e002      	b.n	8000570 <LoopCopyDataInit>

0800056a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800056a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800056c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800056e:	3304      	adds	r3, #4

08000570 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000570:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000572:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000574:	d3f9      	bcc.n	800056a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000576:	4a0b      	ldr	r2, [pc, #44]	; (80005a4 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000578:	4c0b      	ldr	r4, [pc, #44]	; (80005a8 <LoopForever+0x16>)
  movs r3, #0
 800057a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800057c:	e001      	b.n	8000582 <LoopFillZerobss>

0800057e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800057e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000580:	3204      	adds	r2, #4

08000582 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000582:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000584:	d3fb      	bcc.n	800057e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000586:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800058a:	f000 f817 	bl	80005bc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800058e:	f7ff fe8f 	bl	80002b0 <main>

08000592 <LoopForever>:

LoopForever:
    b LoopForever
 8000592:	e7fe      	b.n	8000592 <LoopForever>
  ldr   r0, =_estack
 8000594:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000598:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800059c:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80005a0:	080015d0 	.word	0x080015d0
  ldr r2, =_sbss
 80005a4:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80005a8:	20000090 	.word	0x20000090

080005ac <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005ac:	e7fe      	b.n	80005ac <ADC_IRQHandler>
	...

080005b0 <__errno>:
 80005b0:	4b01      	ldr	r3, [pc, #4]	; (80005b8 <__errno+0x8>)
 80005b2:	6818      	ldr	r0, [r3, #0]
 80005b4:	4770      	bx	lr
 80005b6:	bf00      	nop
 80005b8:	20000000 	.word	0x20000000

080005bc <__libc_init_array>:
 80005bc:	b570      	push	{r4, r5, r6, lr}
 80005be:	4e0d      	ldr	r6, [pc, #52]	; (80005f4 <__libc_init_array+0x38>)
 80005c0:	4c0d      	ldr	r4, [pc, #52]	; (80005f8 <__libc_init_array+0x3c>)
 80005c2:	1ba4      	subs	r4, r4, r6
 80005c4:	10a4      	asrs	r4, r4, #2
 80005c6:	2500      	movs	r5, #0
 80005c8:	42a5      	cmp	r5, r4
 80005ca:	d109      	bne.n	80005e0 <__libc_init_array+0x24>
 80005cc:	4e0b      	ldr	r6, [pc, #44]	; (80005fc <__libc_init_array+0x40>)
 80005ce:	4c0c      	ldr	r4, [pc, #48]	; (8000600 <__libc_init_array+0x44>)
 80005d0:	f000 ff04 	bl	80013dc <_init>
 80005d4:	1ba4      	subs	r4, r4, r6
 80005d6:	10a4      	asrs	r4, r4, #2
 80005d8:	2500      	movs	r5, #0
 80005da:	42a5      	cmp	r5, r4
 80005dc:	d105      	bne.n	80005ea <__libc_init_array+0x2e>
 80005de:	bd70      	pop	{r4, r5, r6, pc}
 80005e0:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005e4:	4798      	blx	r3
 80005e6:	3501      	adds	r5, #1
 80005e8:	e7ee      	b.n	80005c8 <__libc_init_array+0xc>
 80005ea:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005ee:	4798      	blx	r3
 80005f0:	3501      	adds	r5, #1
 80005f2:	e7f2      	b.n	80005da <__libc_init_array+0x1e>
 80005f4:	080015c8 	.word	0x080015c8
 80005f8:	080015c8 	.word	0x080015c8
 80005fc:	080015c8 	.word	0x080015c8
 8000600:	080015cc 	.word	0x080015cc

08000604 <memset>:
 8000604:	4402      	add	r2, r0
 8000606:	4603      	mov	r3, r0
 8000608:	4293      	cmp	r3, r2
 800060a:	d100      	bne.n	800060e <memset+0xa>
 800060c:	4770      	bx	lr
 800060e:	f803 1b01 	strb.w	r1, [r3], #1
 8000612:	e7f9      	b.n	8000608 <memset+0x4>

08000614 <iprintf>:
 8000614:	b40f      	push	{r0, r1, r2, r3}
 8000616:	4b0a      	ldr	r3, [pc, #40]	; (8000640 <iprintf+0x2c>)
 8000618:	b513      	push	{r0, r1, r4, lr}
 800061a:	681c      	ldr	r4, [r3, #0]
 800061c:	b124      	cbz	r4, 8000628 <iprintf+0x14>
 800061e:	69a3      	ldr	r3, [r4, #24]
 8000620:	b913      	cbnz	r3, 8000628 <iprintf+0x14>
 8000622:	4620      	mov	r0, r4
 8000624:	f000 f84e 	bl	80006c4 <__sinit>
 8000628:	ab05      	add	r3, sp, #20
 800062a:	9a04      	ldr	r2, [sp, #16]
 800062c:	68a1      	ldr	r1, [r4, #8]
 800062e:	9301      	str	r3, [sp, #4]
 8000630:	4620      	mov	r0, r4
 8000632:	f000 f955 	bl	80008e0 <_vfiprintf_r>
 8000636:	b002      	add	sp, #8
 8000638:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800063c:	b004      	add	sp, #16
 800063e:	4770      	bx	lr
 8000640:	20000000 	.word	0x20000000

08000644 <std>:
 8000644:	2300      	movs	r3, #0
 8000646:	b510      	push	{r4, lr}
 8000648:	4604      	mov	r4, r0
 800064a:	e9c0 3300 	strd	r3, r3, [r0]
 800064e:	6083      	str	r3, [r0, #8]
 8000650:	8181      	strh	r1, [r0, #12]
 8000652:	6643      	str	r3, [r0, #100]	; 0x64
 8000654:	81c2      	strh	r2, [r0, #14]
 8000656:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800065a:	6183      	str	r3, [r0, #24]
 800065c:	4619      	mov	r1, r3
 800065e:	2208      	movs	r2, #8
 8000660:	305c      	adds	r0, #92	; 0x5c
 8000662:	f7ff ffcf 	bl	8000604 <memset>
 8000666:	4b05      	ldr	r3, [pc, #20]	; (800067c <std+0x38>)
 8000668:	6263      	str	r3, [r4, #36]	; 0x24
 800066a:	4b05      	ldr	r3, [pc, #20]	; (8000680 <std+0x3c>)
 800066c:	62a3      	str	r3, [r4, #40]	; 0x28
 800066e:	4b05      	ldr	r3, [pc, #20]	; (8000684 <std+0x40>)
 8000670:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000672:	4b05      	ldr	r3, [pc, #20]	; (8000688 <std+0x44>)
 8000674:	6224      	str	r4, [r4, #32]
 8000676:	6323      	str	r3, [r4, #48]	; 0x30
 8000678:	bd10      	pop	{r4, pc}
 800067a:	bf00      	nop
 800067c:	08000e3d 	.word	0x08000e3d
 8000680:	08000e5f 	.word	0x08000e5f
 8000684:	08000e97 	.word	0x08000e97
 8000688:	08000ebb 	.word	0x08000ebb

0800068c <_cleanup_r>:
 800068c:	4901      	ldr	r1, [pc, #4]	; (8000694 <_cleanup_r+0x8>)
 800068e:	f000 b885 	b.w	800079c <_fwalk_reent>
 8000692:	bf00      	nop
 8000694:	08001195 	.word	0x08001195

08000698 <__sfmoreglue>:
 8000698:	b570      	push	{r4, r5, r6, lr}
 800069a:	1e4a      	subs	r2, r1, #1
 800069c:	2568      	movs	r5, #104	; 0x68
 800069e:	4355      	muls	r5, r2
 80006a0:	460e      	mov	r6, r1
 80006a2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80006a6:	f000 f897 	bl	80007d8 <_malloc_r>
 80006aa:	4604      	mov	r4, r0
 80006ac:	b140      	cbz	r0, 80006c0 <__sfmoreglue+0x28>
 80006ae:	2100      	movs	r1, #0
 80006b0:	e9c0 1600 	strd	r1, r6, [r0]
 80006b4:	300c      	adds	r0, #12
 80006b6:	60a0      	str	r0, [r4, #8]
 80006b8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80006bc:	f7ff ffa2 	bl	8000604 <memset>
 80006c0:	4620      	mov	r0, r4
 80006c2:	bd70      	pop	{r4, r5, r6, pc}

080006c4 <__sinit>:
 80006c4:	6983      	ldr	r3, [r0, #24]
 80006c6:	b510      	push	{r4, lr}
 80006c8:	4604      	mov	r4, r0
 80006ca:	bb33      	cbnz	r3, 800071a <__sinit+0x56>
 80006cc:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 80006d0:	6503      	str	r3, [r0, #80]	; 0x50
 80006d2:	4b12      	ldr	r3, [pc, #72]	; (800071c <__sinit+0x58>)
 80006d4:	4a12      	ldr	r2, [pc, #72]	; (8000720 <__sinit+0x5c>)
 80006d6:	681b      	ldr	r3, [r3, #0]
 80006d8:	6282      	str	r2, [r0, #40]	; 0x28
 80006da:	4298      	cmp	r0, r3
 80006dc:	bf04      	itt	eq
 80006de:	2301      	moveq	r3, #1
 80006e0:	6183      	streq	r3, [r0, #24]
 80006e2:	f000 f81f 	bl	8000724 <__sfp>
 80006e6:	6060      	str	r0, [r4, #4]
 80006e8:	4620      	mov	r0, r4
 80006ea:	f000 f81b 	bl	8000724 <__sfp>
 80006ee:	60a0      	str	r0, [r4, #8]
 80006f0:	4620      	mov	r0, r4
 80006f2:	f000 f817 	bl	8000724 <__sfp>
 80006f6:	2200      	movs	r2, #0
 80006f8:	60e0      	str	r0, [r4, #12]
 80006fa:	2104      	movs	r1, #4
 80006fc:	6860      	ldr	r0, [r4, #4]
 80006fe:	f7ff ffa1 	bl	8000644 <std>
 8000702:	2201      	movs	r2, #1
 8000704:	2109      	movs	r1, #9
 8000706:	68a0      	ldr	r0, [r4, #8]
 8000708:	f7ff ff9c 	bl	8000644 <std>
 800070c:	2202      	movs	r2, #2
 800070e:	2112      	movs	r1, #18
 8000710:	68e0      	ldr	r0, [r4, #12]
 8000712:	f7ff ff97 	bl	8000644 <std>
 8000716:	2301      	movs	r3, #1
 8000718:	61a3      	str	r3, [r4, #24]
 800071a:	bd10      	pop	{r4, pc}
 800071c:	08001530 	.word	0x08001530
 8000720:	0800068d 	.word	0x0800068d

08000724 <__sfp>:
 8000724:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000726:	4b1b      	ldr	r3, [pc, #108]	; (8000794 <__sfp+0x70>)
 8000728:	681e      	ldr	r6, [r3, #0]
 800072a:	69b3      	ldr	r3, [r6, #24]
 800072c:	4607      	mov	r7, r0
 800072e:	b913      	cbnz	r3, 8000736 <__sfp+0x12>
 8000730:	4630      	mov	r0, r6
 8000732:	f7ff ffc7 	bl	80006c4 <__sinit>
 8000736:	3648      	adds	r6, #72	; 0x48
 8000738:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800073c:	3b01      	subs	r3, #1
 800073e:	d503      	bpl.n	8000748 <__sfp+0x24>
 8000740:	6833      	ldr	r3, [r6, #0]
 8000742:	b133      	cbz	r3, 8000752 <__sfp+0x2e>
 8000744:	6836      	ldr	r6, [r6, #0]
 8000746:	e7f7      	b.n	8000738 <__sfp+0x14>
 8000748:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800074c:	b16d      	cbz	r5, 800076a <__sfp+0x46>
 800074e:	3468      	adds	r4, #104	; 0x68
 8000750:	e7f4      	b.n	800073c <__sfp+0x18>
 8000752:	2104      	movs	r1, #4
 8000754:	4638      	mov	r0, r7
 8000756:	f7ff ff9f 	bl	8000698 <__sfmoreglue>
 800075a:	6030      	str	r0, [r6, #0]
 800075c:	2800      	cmp	r0, #0
 800075e:	d1f1      	bne.n	8000744 <__sfp+0x20>
 8000760:	230c      	movs	r3, #12
 8000762:	603b      	str	r3, [r7, #0]
 8000764:	4604      	mov	r4, r0
 8000766:	4620      	mov	r0, r4
 8000768:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800076a:	4b0b      	ldr	r3, [pc, #44]	; (8000798 <__sfp+0x74>)
 800076c:	6665      	str	r5, [r4, #100]	; 0x64
 800076e:	e9c4 5500 	strd	r5, r5, [r4]
 8000772:	60a5      	str	r5, [r4, #8]
 8000774:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000778:	e9c4 5505 	strd	r5, r5, [r4, #20]
 800077c:	2208      	movs	r2, #8
 800077e:	4629      	mov	r1, r5
 8000780:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000784:	f7ff ff3e 	bl	8000604 <memset>
 8000788:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800078c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000790:	e7e9      	b.n	8000766 <__sfp+0x42>
 8000792:	bf00      	nop
 8000794:	08001530 	.word	0x08001530
 8000798:	ffff0001 	.word	0xffff0001

0800079c <_fwalk_reent>:
 800079c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007a0:	4680      	mov	r8, r0
 80007a2:	4689      	mov	r9, r1
 80007a4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80007a8:	2600      	movs	r6, #0
 80007aa:	b914      	cbnz	r4, 80007b2 <_fwalk_reent+0x16>
 80007ac:	4630      	mov	r0, r6
 80007ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80007b2:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 80007b6:	3f01      	subs	r7, #1
 80007b8:	d501      	bpl.n	80007be <_fwalk_reent+0x22>
 80007ba:	6824      	ldr	r4, [r4, #0]
 80007bc:	e7f5      	b.n	80007aa <_fwalk_reent+0xe>
 80007be:	89ab      	ldrh	r3, [r5, #12]
 80007c0:	2b01      	cmp	r3, #1
 80007c2:	d907      	bls.n	80007d4 <_fwalk_reent+0x38>
 80007c4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80007c8:	3301      	adds	r3, #1
 80007ca:	d003      	beq.n	80007d4 <_fwalk_reent+0x38>
 80007cc:	4629      	mov	r1, r5
 80007ce:	4640      	mov	r0, r8
 80007d0:	47c8      	blx	r9
 80007d2:	4306      	orrs	r6, r0
 80007d4:	3568      	adds	r5, #104	; 0x68
 80007d6:	e7ee      	b.n	80007b6 <_fwalk_reent+0x1a>

080007d8 <_malloc_r>:
 80007d8:	b570      	push	{r4, r5, r6, lr}
 80007da:	1ccd      	adds	r5, r1, #3
 80007dc:	f025 0503 	bic.w	r5, r5, #3
 80007e0:	3508      	adds	r5, #8
 80007e2:	2d0c      	cmp	r5, #12
 80007e4:	bf38      	it	cc
 80007e6:	250c      	movcc	r5, #12
 80007e8:	2d00      	cmp	r5, #0
 80007ea:	4606      	mov	r6, r0
 80007ec:	db01      	blt.n	80007f2 <_malloc_r+0x1a>
 80007ee:	42a9      	cmp	r1, r5
 80007f0:	d903      	bls.n	80007fa <_malloc_r+0x22>
 80007f2:	230c      	movs	r3, #12
 80007f4:	6033      	str	r3, [r6, #0]
 80007f6:	2000      	movs	r0, #0
 80007f8:	bd70      	pop	{r4, r5, r6, pc}
 80007fa:	f000 fd6b 	bl	80012d4 <__malloc_lock>
 80007fe:	4a21      	ldr	r2, [pc, #132]	; (8000884 <_malloc_r+0xac>)
 8000800:	6814      	ldr	r4, [r2, #0]
 8000802:	4621      	mov	r1, r4
 8000804:	b991      	cbnz	r1, 800082c <_malloc_r+0x54>
 8000806:	4c20      	ldr	r4, [pc, #128]	; (8000888 <_malloc_r+0xb0>)
 8000808:	6823      	ldr	r3, [r4, #0]
 800080a:	b91b      	cbnz	r3, 8000814 <_malloc_r+0x3c>
 800080c:	4630      	mov	r0, r6
 800080e:	f000 fb05 	bl	8000e1c <_sbrk_r>
 8000812:	6020      	str	r0, [r4, #0]
 8000814:	4629      	mov	r1, r5
 8000816:	4630      	mov	r0, r6
 8000818:	f000 fb00 	bl	8000e1c <_sbrk_r>
 800081c:	1c43      	adds	r3, r0, #1
 800081e:	d124      	bne.n	800086a <_malloc_r+0x92>
 8000820:	230c      	movs	r3, #12
 8000822:	6033      	str	r3, [r6, #0]
 8000824:	4630      	mov	r0, r6
 8000826:	f000 fd56 	bl	80012d6 <__malloc_unlock>
 800082a:	e7e4      	b.n	80007f6 <_malloc_r+0x1e>
 800082c:	680b      	ldr	r3, [r1, #0]
 800082e:	1b5b      	subs	r3, r3, r5
 8000830:	d418      	bmi.n	8000864 <_malloc_r+0x8c>
 8000832:	2b0b      	cmp	r3, #11
 8000834:	d90f      	bls.n	8000856 <_malloc_r+0x7e>
 8000836:	600b      	str	r3, [r1, #0]
 8000838:	50cd      	str	r5, [r1, r3]
 800083a:	18cc      	adds	r4, r1, r3
 800083c:	4630      	mov	r0, r6
 800083e:	f000 fd4a 	bl	80012d6 <__malloc_unlock>
 8000842:	f104 000b 	add.w	r0, r4, #11
 8000846:	1d23      	adds	r3, r4, #4
 8000848:	f020 0007 	bic.w	r0, r0, #7
 800084c:	1ac3      	subs	r3, r0, r3
 800084e:	d0d3      	beq.n	80007f8 <_malloc_r+0x20>
 8000850:	425a      	negs	r2, r3
 8000852:	50e2      	str	r2, [r4, r3]
 8000854:	e7d0      	b.n	80007f8 <_malloc_r+0x20>
 8000856:	428c      	cmp	r4, r1
 8000858:	684b      	ldr	r3, [r1, #4]
 800085a:	bf16      	itet	ne
 800085c:	6063      	strne	r3, [r4, #4]
 800085e:	6013      	streq	r3, [r2, #0]
 8000860:	460c      	movne	r4, r1
 8000862:	e7eb      	b.n	800083c <_malloc_r+0x64>
 8000864:	460c      	mov	r4, r1
 8000866:	6849      	ldr	r1, [r1, #4]
 8000868:	e7cc      	b.n	8000804 <_malloc_r+0x2c>
 800086a:	1cc4      	adds	r4, r0, #3
 800086c:	f024 0403 	bic.w	r4, r4, #3
 8000870:	42a0      	cmp	r0, r4
 8000872:	d005      	beq.n	8000880 <_malloc_r+0xa8>
 8000874:	1a21      	subs	r1, r4, r0
 8000876:	4630      	mov	r0, r6
 8000878:	f000 fad0 	bl	8000e1c <_sbrk_r>
 800087c:	3001      	adds	r0, #1
 800087e:	d0cf      	beq.n	8000820 <_malloc_r+0x48>
 8000880:	6025      	str	r5, [r4, #0]
 8000882:	e7db      	b.n	800083c <_malloc_r+0x64>
 8000884:	20000084 	.word	0x20000084
 8000888:	20000088 	.word	0x20000088

0800088c <__sfputc_r>:
 800088c:	6893      	ldr	r3, [r2, #8]
 800088e:	3b01      	subs	r3, #1
 8000890:	2b00      	cmp	r3, #0
 8000892:	b410      	push	{r4}
 8000894:	6093      	str	r3, [r2, #8]
 8000896:	da08      	bge.n	80008aa <__sfputc_r+0x1e>
 8000898:	6994      	ldr	r4, [r2, #24]
 800089a:	42a3      	cmp	r3, r4
 800089c:	db01      	blt.n	80008a2 <__sfputc_r+0x16>
 800089e:	290a      	cmp	r1, #10
 80008a0:	d103      	bne.n	80008aa <__sfputc_r+0x1e>
 80008a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80008a6:	f000 bb0d 	b.w	8000ec4 <__swbuf_r>
 80008aa:	6813      	ldr	r3, [r2, #0]
 80008ac:	1c58      	adds	r0, r3, #1
 80008ae:	6010      	str	r0, [r2, #0]
 80008b0:	7019      	strb	r1, [r3, #0]
 80008b2:	4608      	mov	r0, r1
 80008b4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80008b8:	4770      	bx	lr

080008ba <__sfputs_r>:
 80008ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008bc:	4606      	mov	r6, r0
 80008be:	460f      	mov	r7, r1
 80008c0:	4614      	mov	r4, r2
 80008c2:	18d5      	adds	r5, r2, r3
 80008c4:	42ac      	cmp	r4, r5
 80008c6:	d101      	bne.n	80008cc <__sfputs_r+0x12>
 80008c8:	2000      	movs	r0, #0
 80008ca:	e007      	b.n	80008dc <__sfputs_r+0x22>
 80008cc:	463a      	mov	r2, r7
 80008ce:	f814 1b01 	ldrb.w	r1, [r4], #1
 80008d2:	4630      	mov	r0, r6
 80008d4:	f7ff ffda 	bl	800088c <__sfputc_r>
 80008d8:	1c43      	adds	r3, r0, #1
 80008da:	d1f3      	bne.n	80008c4 <__sfputs_r+0xa>
 80008dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080008e0 <_vfiprintf_r>:
 80008e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80008e4:	460c      	mov	r4, r1
 80008e6:	b09d      	sub	sp, #116	; 0x74
 80008e8:	4617      	mov	r7, r2
 80008ea:	461d      	mov	r5, r3
 80008ec:	4606      	mov	r6, r0
 80008ee:	b118      	cbz	r0, 80008f8 <_vfiprintf_r+0x18>
 80008f0:	6983      	ldr	r3, [r0, #24]
 80008f2:	b90b      	cbnz	r3, 80008f8 <_vfiprintf_r+0x18>
 80008f4:	f7ff fee6 	bl	80006c4 <__sinit>
 80008f8:	4b7c      	ldr	r3, [pc, #496]	; (8000aec <_vfiprintf_r+0x20c>)
 80008fa:	429c      	cmp	r4, r3
 80008fc:	d158      	bne.n	80009b0 <_vfiprintf_r+0xd0>
 80008fe:	6874      	ldr	r4, [r6, #4]
 8000900:	89a3      	ldrh	r3, [r4, #12]
 8000902:	0718      	lsls	r0, r3, #28
 8000904:	d55e      	bpl.n	80009c4 <_vfiprintf_r+0xe4>
 8000906:	6923      	ldr	r3, [r4, #16]
 8000908:	2b00      	cmp	r3, #0
 800090a:	d05b      	beq.n	80009c4 <_vfiprintf_r+0xe4>
 800090c:	2300      	movs	r3, #0
 800090e:	9309      	str	r3, [sp, #36]	; 0x24
 8000910:	2320      	movs	r3, #32
 8000912:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000916:	2330      	movs	r3, #48	; 0x30
 8000918:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800091c:	9503      	str	r5, [sp, #12]
 800091e:	f04f 0b01 	mov.w	fp, #1
 8000922:	46b8      	mov	r8, r7
 8000924:	4645      	mov	r5, r8
 8000926:	f815 3b01 	ldrb.w	r3, [r5], #1
 800092a:	b10b      	cbz	r3, 8000930 <_vfiprintf_r+0x50>
 800092c:	2b25      	cmp	r3, #37	; 0x25
 800092e:	d154      	bne.n	80009da <_vfiprintf_r+0xfa>
 8000930:	ebb8 0a07 	subs.w	sl, r8, r7
 8000934:	d00b      	beq.n	800094e <_vfiprintf_r+0x6e>
 8000936:	4653      	mov	r3, sl
 8000938:	463a      	mov	r2, r7
 800093a:	4621      	mov	r1, r4
 800093c:	4630      	mov	r0, r6
 800093e:	f7ff ffbc 	bl	80008ba <__sfputs_r>
 8000942:	3001      	adds	r0, #1
 8000944:	f000 80c2 	beq.w	8000acc <_vfiprintf_r+0x1ec>
 8000948:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800094a:	4453      	add	r3, sl
 800094c:	9309      	str	r3, [sp, #36]	; 0x24
 800094e:	f898 3000 	ldrb.w	r3, [r8]
 8000952:	2b00      	cmp	r3, #0
 8000954:	f000 80ba 	beq.w	8000acc <_vfiprintf_r+0x1ec>
 8000958:	2300      	movs	r3, #0
 800095a:	f04f 32ff 	mov.w	r2, #4294967295
 800095e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000962:	9304      	str	r3, [sp, #16]
 8000964:	9307      	str	r3, [sp, #28]
 8000966:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800096a:	931a      	str	r3, [sp, #104]	; 0x68
 800096c:	46a8      	mov	r8, r5
 800096e:	2205      	movs	r2, #5
 8000970:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000974:	485e      	ldr	r0, [pc, #376]	; (8000af0 <_vfiprintf_r+0x210>)
 8000976:	f7ff fc4b 	bl	8000210 <memchr>
 800097a:	9b04      	ldr	r3, [sp, #16]
 800097c:	bb78      	cbnz	r0, 80009de <_vfiprintf_r+0xfe>
 800097e:	06d9      	lsls	r1, r3, #27
 8000980:	bf44      	itt	mi
 8000982:	2220      	movmi	r2, #32
 8000984:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000988:	071a      	lsls	r2, r3, #28
 800098a:	bf44      	itt	mi
 800098c:	222b      	movmi	r2, #43	; 0x2b
 800098e:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000992:	782a      	ldrb	r2, [r5, #0]
 8000994:	2a2a      	cmp	r2, #42	; 0x2a
 8000996:	d02a      	beq.n	80009ee <_vfiprintf_r+0x10e>
 8000998:	9a07      	ldr	r2, [sp, #28]
 800099a:	46a8      	mov	r8, r5
 800099c:	2000      	movs	r0, #0
 800099e:	250a      	movs	r5, #10
 80009a0:	4641      	mov	r1, r8
 80009a2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80009a6:	3b30      	subs	r3, #48	; 0x30
 80009a8:	2b09      	cmp	r3, #9
 80009aa:	d969      	bls.n	8000a80 <_vfiprintf_r+0x1a0>
 80009ac:	b360      	cbz	r0, 8000a08 <_vfiprintf_r+0x128>
 80009ae:	e024      	b.n	80009fa <_vfiprintf_r+0x11a>
 80009b0:	4b50      	ldr	r3, [pc, #320]	; (8000af4 <_vfiprintf_r+0x214>)
 80009b2:	429c      	cmp	r4, r3
 80009b4:	d101      	bne.n	80009ba <_vfiprintf_r+0xda>
 80009b6:	68b4      	ldr	r4, [r6, #8]
 80009b8:	e7a2      	b.n	8000900 <_vfiprintf_r+0x20>
 80009ba:	4b4f      	ldr	r3, [pc, #316]	; (8000af8 <_vfiprintf_r+0x218>)
 80009bc:	429c      	cmp	r4, r3
 80009be:	bf08      	it	eq
 80009c0:	68f4      	ldreq	r4, [r6, #12]
 80009c2:	e79d      	b.n	8000900 <_vfiprintf_r+0x20>
 80009c4:	4621      	mov	r1, r4
 80009c6:	4630      	mov	r0, r6
 80009c8:	f000 fae0 	bl	8000f8c <__swsetup_r>
 80009cc:	2800      	cmp	r0, #0
 80009ce:	d09d      	beq.n	800090c <_vfiprintf_r+0x2c>
 80009d0:	f04f 30ff 	mov.w	r0, #4294967295
 80009d4:	b01d      	add	sp, #116	; 0x74
 80009d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80009da:	46a8      	mov	r8, r5
 80009dc:	e7a2      	b.n	8000924 <_vfiprintf_r+0x44>
 80009de:	4a44      	ldr	r2, [pc, #272]	; (8000af0 <_vfiprintf_r+0x210>)
 80009e0:	1a80      	subs	r0, r0, r2
 80009e2:	fa0b f000 	lsl.w	r0, fp, r0
 80009e6:	4318      	orrs	r0, r3
 80009e8:	9004      	str	r0, [sp, #16]
 80009ea:	4645      	mov	r5, r8
 80009ec:	e7be      	b.n	800096c <_vfiprintf_r+0x8c>
 80009ee:	9a03      	ldr	r2, [sp, #12]
 80009f0:	1d11      	adds	r1, r2, #4
 80009f2:	6812      	ldr	r2, [r2, #0]
 80009f4:	9103      	str	r1, [sp, #12]
 80009f6:	2a00      	cmp	r2, #0
 80009f8:	db01      	blt.n	80009fe <_vfiprintf_r+0x11e>
 80009fa:	9207      	str	r2, [sp, #28]
 80009fc:	e004      	b.n	8000a08 <_vfiprintf_r+0x128>
 80009fe:	4252      	negs	r2, r2
 8000a00:	f043 0302 	orr.w	r3, r3, #2
 8000a04:	9207      	str	r2, [sp, #28]
 8000a06:	9304      	str	r3, [sp, #16]
 8000a08:	f898 3000 	ldrb.w	r3, [r8]
 8000a0c:	2b2e      	cmp	r3, #46	; 0x2e
 8000a0e:	d10e      	bne.n	8000a2e <_vfiprintf_r+0x14e>
 8000a10:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000a14:	2b2a      	cmp	r3, #42	; 0x2a
 8000a16:	d138      	bne.n	8000a8a <_vfiprintf_r+0x1aa>
 8000a18:	9b03      	ldr	r3, [sp, #12]
 8000a1a:	1d1a      	adds	r2, r3, #4
 8000a1c:	681b      	ldr	r3, [r3, #0]
 8000a1e:	9203      	str	r2, [sp, #12]
 8000a20:	2b00      	cmp	r3, #0
 8000a22:	bfb8      	it	lt
 8000a24:	f04f 33ff 	movlt.w	r3, #4294967295
 8000a28:	f108 0802 	add.w	r8, r8, #2
 8000a2c:	9305      	str	r3, [sp, #20]
 8000a2e:	4d33      	ldr	r5, [pc, #204]	; (8000afc <_vfiprintf_r+0x21c>)
 8000a30:	f898 1000 	ldrb.w	r1, [r8]
 8000a34:	2203      	movs	r2, #3
 8000a36:	4628      	mov	r0, r5
 8000a38:	f7ff fbea 	bl	8000210 <memchr>
 8000a3c:	b140      	cbz	r0, 8000a50 <_vfiprintf_r+0x170>
 8000a3e:	2340      	movs	r3, #64	; 0x40
 8000a40:	1b40      	subs	r0, r0, r5
 8000a42:	fa03 f000 	lsl.w	r0, r3, r0
 8000a46:	9b04      	ldr	r3, [sp, #16]
 8000a48:	4303      	orrs	r3, r0
 8000a4a:	f108 0801 	add.w	r8, r8, #1
 8000a4e:	9304      	str	r3, [sp, #16]
 8000a50:	f898 1000 	ldrb.w	r1, [r8]
 8000a54:	482a      	ldr	r0, [pc, #168]	; (8000b00 <_vfiprintf_r+0x220>)
 8000a56:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000a5a:	2206      	movs	r2, #6
 8000a5c:	f108 0701 	add.w	r7, r8, #1
 8000a60:	f7ff fbd6 	bl	8000210 <memchr>
 8000a64:	2800      	cmp	r0, #0
 8000a66:	d037      	beq.n	8000ad8 <_vfiprintf_r+0x1f8>
 8000a68:	4b26      	ldr	r3, [pc, #152]	; (8000b04 <_vfiprintf_r+0x224>)
 8000a6a:	bb1b      	cbnz	r3, 8000ab4 <_vfiprintf_r+0x1d4>
 8000a6c:	9b03      	ldr	r3, [sp, #12]
 8000a6e:	3307      	adds	r3, #7
 8000a70:	f023 0307 	bic.w	r3, r3, #7
 8000a74:	3308      	adds	r3, #8
 8000a76:	9303      	str	r3, [sp, #12]
 8000a78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000a7a:	444b      	add	r3, r9
 8000a7c:	9309      	str	r3, [sp, #36]	; 0x24
 8000a7e:	e750      	b.n	8000922 <_vfiprintf_r+0x42>
 8000a80:	fb05 3202 	mla	r2, r5, r2, r3
 8000a84:	2001      	movs	r0, #1
 8000a86:	4688      	mov	r8, r1
 8000a88:	e78a      	b.n	80009a0 <_vfiprintf_r+0xc0>
 8000a8a:	2300      	movs	r3, #0
 8000a8c:	f108 0801 	add.w	r8, r8, #1
 8000a90:	9305      	str	r3, [sp, #20]
 8000a92:	4619      	mov	r1, r3
 8000a94:	250a      	movs	r5, #10
 8000a96:	4640      	mov	r0, r8
 8000a98:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000a9c:	3a30      	subs	r2, #48	; 0x30
 8000a9e:	2a09      	cmp	r2, #9
 8000aa0:	d903      	bls.n	8000aaa <_vfiprintf_r+0x1ca>
 8000aa2:	2b00      	cmp	r3, #0
 8000aa4:	d0c3      	beq.n	8000a2e <_vfiprintf_r+0x14e>
 8000aa6:	9105      	str	r1, [sp, #20]
 8000aa8:	e7c1      	b.n	8000a2e <_vfiprintf_r+0x14e>
 8000aaa:	fb05 2101 	mla	r1, r5, r1, r2
 8000aae:	2301      	movs	r3, #1
 8000ab0:	4680      	mov	r8, r0
 8000ab2:	e7f0      	b.n	8000a96 <_vfiprintf_r+0x1b6>
 8000ab4:	ab03      	add	r3, sp, #12
 8000ab6:	9300      	str	r3, [sp, #0]
 8000ab8:	4622      	mov	r2, r4
 8000aba:	4b13      	ldr	r3, [pc, #76]	; (8000b08 <_vfiprintf_r+0x228>)
 8000abc:	a904      	add	r1, sp, #16
 8000abe:	4630      	mov	r0, r6
 8000ac0:	f3af 8000 	nop.w
 8000ac4:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000ac8:	4681      	mov	r9, r0
 8000aca:	d1d5      	bne.n	8000a78 <_vfiprintf_r+0x198>
 8000acc:	89a3      	ldrh	r3, [r4, #12]
 8000ace:	065b      	lsls	r3, r3, #25
 8000ad0:	f53f af7e 	bmi.w	80009d0 <_vfiprintf_r+0xf0>
 8000ad4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000ad6:	e77d      	b.n	80009d4 <_vfiprintf_r+0xf4>
 8000ad8:	ab03      	add	r3, sp, #12
 8000ada:	9300      	str	r3, [sp, #0]
 8000adc:	4622      	mov	r2, r4
 8000ade:	4b0a      	ldr	r3, [pc, #40]	; (8000b08 <_vfiprintf_r+0x228>)
 8000ae0:	a904      	add	r1, sp, #16
 8000ae2:	4630      	mov	r0, r6
 8000ae4:	f000 f888 	bl	8000bf8 <_printf_i>
 8000ae8:	e7ec      	b.n	8000ac4 <_vfiprintf_r+0x1e4>
 8000aea:	bf00      	nop
 8000aec:	08001554 	.word	0x08001554
 8000af0:	08001594 	.word	0x08001594
 8000af4:	08001574 	.word	0x08001574
 8000af8:	08001534 	.word	0x08001534
 8000afc:	0800159a 	.word	0x0800159a
 8000b00:	0800159e 	.word	0x0800159e
 8000b04:	00000000 	.word	0x00000000
 8000b08:	080008bb 	.word	0x080008bb

08000b0c <_printf_common>:
 8000b0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b10:	4691      	mov	r9, r2
 8000b12:	461f      	mov	r7, r3
 8000b14:	688a      	ldr	r2, [r1, #8]
 8000b16:	690b      	ldr	r3, [r1, #16]
 8000b18:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000b1c:	4293      	cmp	r3, r2
 8000b1e:	bfb8      	it	lt
 8000b20:	4613      	movlt	r3, r2
 8000b22:	f8c9 3000 	str.w	r3, [r9]
 8000b26:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000b2a:	4606      	mov	r6, r0
 8000b2c:	460c      	mov	r4, r1
 8000b2e:	b112      	cbz	r2, 8000b36 <_printf_common+0x2a>
 8000b30:	3301      	adds	r3, #1
 8000b32:	f8c9 3000 	str.w	r3, [r9]
 8000b36:	6823      	ldr	r3, [r4, #0]
 8000b38:	0699      	lsls	r1, r3, #26
 8000b3a:	bf42      	ittt	mi
 8000b3c:	f8d9 3000 	ldrmi.w	r3, [r9]
 8000b40:	3302      	addmi	r3, #2
 8000b42:	f8c9 3000 	strmi.w	r3, [r9]
 8000b46:	6825      	ldr	r5, [r4, #0]
 8000b48:	f015 0506 	ands.w	r5, r5, #6
 8000b4c:	d107      	bne.n	8000b5e <_printf_common+0x52>
 8000b4e:	f104 0a19 	add.w	sl, r4, #25
 8000b52:	68e3      	ldr	r3, [r4, #12]
 8000b54:	f8d9 2000 	ldr.w	r2, [r9]
 8000b58:	1a9b      	subs	r3, r3, r2
 8000b5a:	42ab      	cmp	r3, r5
 8000b5c:	dc28      	bgt.n	8000bb0 <_printf_common+0xa4>
 8000b5e:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8000b62:	6822      	ldr	r2, [r4, #0]
 8000b64:	3300      	adds	r3, #0
 8000b66:	bf18      	it	ne
 8000b68:	2301      	movne	r3, #1
 8000b6a:	0692      	lsls	r2, r2, #26
 8000b6c:	d42d      	bmi.n	8000bca <_printf_common+0xbe>
 8000b6e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000b72:	4639      	mov	r1, r7
 8000b74:	4630      	mov	r0, r6
 8000b76:	47c0      	blx	r8
 8000b78:	3001      	adds	r0, #1
 8000b7a:	d020      	beq.n	8000bbe <_printf_common+0xb2>
 8000b7c:	6823      	ldr	r3, [r4, #0]
 8000b7e:	68e5      	ldr	r5, [r4, #12]
 8000b80:	f8d9 2000 	ldr.w	r2, [r9]
 8000b84:	f003 0306 	and.w	r3, r3, #6
 8000b88:	2b04      	cmp	r3, #4
 8000b8a:	bf08      	it	eq
 8000b8c:	1aad      	subeq	r5, r5, r2
 8000b8e:	68a3      	ldr	r3, [r4, #8]
 8000b90:	6922      	ldr	r2, [r4, #16]
 8000b92:	bf0c      	ite	eq
 8000b94:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000b98:	2500      	movne	r5, #0
 8000b9a:	4293      	cmp	r3, r2
 8000b9c:	bfc4      	itt	gt
 8000b9e:	1a9b      	subgt	r3, r3, r2
 8000ba0:	18ed      	addgt	r5, r5, r3
 8000ba2:	f04f 0900 	mov.w	r9, #0
 8000ba6:	341a      	adds	r4, #26
 8000ba8:	454d      	cmp	r5, r9
 8000baa:	d11a      	bne.n	8000be2 <_printf_common+0xd6>
 8000bac:	2000      	movs	r0, #0
 8000bae:	e008      	b.n	8000bc2 <_printf_common+0xb6>
 8000bb0:	2301      	movs	r3, #1
 8000bb2:	4652      	mov	r2, sl
 8000bb4:	4639      	mov	r1, r7
 8000bb6:	4630      	mov	r0, r6
 8000bb8:	47c0      	blx	r8
 8000bba:	3001      	adds	r0, #1
 8000bbc:	d103      	bne.n	8000bc6 <_printf_common+0xba>
 8000bbe:	f04f 30ff 	mov.w	r0, #4294967295
 8000bc2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bc6:	3501      	adds	r5, #1
 8000bc8:	e7c3      	b.n	8000b52 <_printf_common+0x46>
 8000bca:	18e1      	adds	r1, r4, r3
 8000bcc:	1c5a      	adds	r2, r3, #1
 8000bce:	2030      	movs	r0, #48	; 0x30
 8000bd0:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000bd4:	4422      	add	r2, r4
 8000bd6:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000bda:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000bde:	3302      	adds	r3, #2
 8000be0:	e7c5      	b.n	8000b6e <_printf_common+0x62>
 8000be2:	2301      	movs	r3, #1
 8000be4:	4622      	mov	r2, r4
 8000be6:	4639      	mov	r1, r7
 8000be8:	4630      	mov	r0, r6
 8000bea:	47c0      	blx	r8
 8000bec:	3001      	adds	r0, #1
 8000bee:	d0e6      	beq.n	8000bbe <_printf_common+0xb2>
 8000bf0:	f109 0901 	add.w	r9, r9, #1
 8000bf4:	e7d8      	b.n	8000ba8 <_printf_common+0x9c>
	...

08000bf8 <_printf_i>:
 8000bf8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000bfc:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8000c00:	460c      	mov	r4, r1
 8000c02:	7e09      	ldrb	r1, [r1, #24]
 8000c04:	b085      	sub	sp, #20
 8000c06:	296e      	cmp	r1, #110	; 0x6e
 8000c08:	4617      	mov	r7, r2
 8000c0a:	4606      	mov	r6, r0
 8000c0c:	4698      	mov	r8, r3
 8000c0e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8000c10:	f000 80b3 	beq.w	8000d7a <_printf_i+0x182>
 8000c14:	d822      	bhi.n	8000c5c <_printf_i+0x64>
 8000c16:	2963      	cmp	r1, #99	; 0x63
 8000c18:	d036      	beq.n	8000c88 <_printf_i+0x90>
 8000c1a:	d80a      	bhi.n	8000c32 <_printf_i+0x3a>
 8000c1c:	2900      	cmp	r1, #0
 8000c1e:	f000 80b9 	beq.w	8000d94 <_printf_i+0x19c>
 8000c22:	2958      	cmp	r1, #88	; 0x58
 8000c24:	f000 8083 	beq.w	8000d2e <_printf_i+0x136>
 8000c28:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c2c:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8000c30:	e032      	b.n	8000c98 <_printf_i+0xa0>
 8000c32:	2964      	cmp	r1, #100	; 0x64
 8000c34:	d001      	beq.n	8000c3a <_printf_i+0x42>
 8000c36:	2969      	cmp	r1, #105	; 0x69
 8000c38:	d1f6      	bne.n	8000c28 <_printf_i+0x30>
 8000c3a:	6820      	ldr	r0, [r4, #0]
 8000c3c:	6813      	ldr	r3, [r2, #0]
 8000c3e:	0605      	lsls	r5, r0, #24
 8000c40:	f103 0104 	add.w	r1, r3, #4
 8000c44:	d52a      	bpl.n	8000c9c <_printf_i+0xa4>
 8000c46:	681b      	ldr	r3, [r3, #0]
 8000c48:	6011      	str	r1, [r2, #0]
 8000c4a:	2b00      	cmp	r3, #0
 8000c4c:	da03      	bge.n	8000c56 <_printf_i+0x5e>
 8000c4e:	222d      	movs	r2, #45	; 0x2d
 8000c50:	425b      	negs	r3, r3
 8000c52:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8000c56:	486f      	ldr	r0, [pc, #444]	; (8000e14 <_printf_i+0x21c>)
 8000c58:	220a      	movs	r2, #10
 8000c5a:	e039      	b.n	8000cd0 <_printf_i+0xd8>
 8000c5c:	2973      	cmp	r1, #115	; 0x73
 8000c5e:	f000 809d 	beq.w	8000d9c <_printf_i+0x1a4>
 8000c62:	d808      	bhi.n	8000c76 <_printf_i+0x7e>
 8000c64:	296f      	cmp	r1, #111	; 0x6f
 8000c66:	d020      	beq.n	8000caa <_printf_i+0xb2>
 8000c68:	2970      	cmp	r1, #112	; 0x70
 8000c6a:	d1dd      	bne.n	8000c28 <_printf_i+0x30>
 8000c6c:	6823      	ldr	r3, [r4, #0]
 8000c6e:	f043 0320 	orr.w	r3, r3, #32
 8000c72:	6023      	str	r3, [r4, #0]
 8000c74:	e003      	b.n	8000c7e <_printf_i+0x86>
 8000c76:	2975      	cmp	r1, #117	; 0x75
 8000c78:	d017      	beq.n	8000caa <_printf_i+0xb2>
 8000c7a:	2978      	cmp	r1, #120	; 0x78
 8000c7c:	d1d4      	bne.n	8000c28 <_printf_i+0x30>
 8000c7e:	2378      	movs	r3, #120	; 0x78
 8000c80:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000c84:	4864      	ldr	r0, [pc, #400]	; (8000e18 <_printf_i+0x220>)
 8000c86:	e055      	b.n	8000d34 <_printf_i+0x13c>
 8000c88:	6813      	ldr	r3, [r2, #0]
 8000c8a:	1d19      	adds	r1, r3, #4
 8000c8c:	681b      	ldr	r3, [r3, #0]
 8000c8e:	6011      	str	r1, [r2, #0]
 8000c90:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c94:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000c98:	2301      	movs	r3, #1
 8000c9a:	e08c      	b.n	8000db6 <_printf_i+0x1be>
 8000c9c:	681b      	ldr	r3, [r3, #0]
 8000c9e:	6011      	str	r1, [r2, #0]
 8000ca0:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000ca4:	bf18      	it	ne
 8000ca6:	b21b      	sxthne	r3, r3
 8000ca8:	e7cf      	b.n	8000c4a <_printf_i+0x52>
 8000caa:	6813      	ldr	r3, [r2, #0]
 8000cac:	6825      	ldr	r5, [r4, #0]
 8000cae:	1d18      	adds	r0, r3, #4
 8000cb0:	6010      	str	r0, [r2, #0]
 8000cb2:	0628      	lsls	r0, r5, #24
 8000cb4:	d501      	bpl.n	8000cba <_printf_i+0xc2>
 8000cb6:	681b      	ldr	r3, [r3, #0]
 8000cb8:	e002      	b.n	8000cc0 <_printf_i+0xc8>
 8000cba:	0668      	lsls	r0, r5, #25
 8000cbc:	d5fb      	bpl.n	8000cb6 <_printf_i+0xbe>
 8000cbe:	881b      	ldrh	r3, [r3, #0]
 8000cc0:	4854      	ldr	r0, [pc, #336]	; (8000e14 <_printf_i+0x21c>)
 8000cc2:	296f      	cmp	r1, #111	; 0x6f
 8000cc4:	bf14      	ite	ne
 8000cc6:	220a      	movne	r2, #10
 8000cc8:	2208      	moveq	r2, #8
 8000cca:	2100      	movs	r1, #0
 8000ccc:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000cd0:	6865      	ldr	r5, [r4, #4]
 8000cd2:	60a5      	str	r5, [r4, #8]
 8000cd4:	2d00      	cmp	r5, #0
 8000cd6:	f2c0 8095 	blt.w	8000e04 <_printf_i+0x20c>
 8000cda:	6821      	ldr	r1, [r4, #0]
 8000cdc:	f021 0104 	bic.w	r1, r1, #4
 8000ce0:	6021      	str	r1, [r4, #0]
 8000ce2:	2b00      	cmp	r3, #0
 8000ce4:	d13d      	bne.n	8000d62 <_printf_i+0x16a>
 8000ce6:	2d00      	cmp	r5, #0
 8000ce8:	f040 808e 	bne.w	8000e08 <_printf_i+0x210>
 8000cec:	4665      	mov	r5, ip
 8000cee:	2a08      	cmp	r2, #8
 8000cf0:	d10b      	bne.n	8000d0a <_printf_i+0x112>
 8000cf2:	6823      	ldr	r3, [r4, #0]
 8000cf4:	07db      	lsls	r3, r3, #31
 8000cf6:	d508      	bpl.n	8000d0a <_printf_i+0x112>
 8000cf8:	6923      	ldr	r3, [r4, #16]
 8000cfa:	6862      	ldr	r2, [r4, #4]
 8000cfc:	429a      	cmp	r2, r3
 8000cfe:	bfde      	ittt	le
 8000d00:	2330      	movle	r3, #48	; 0x30
 8000d02:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000d06:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000d0a:	ebac 0305 	sub.w	r3, ip, r5
 8000d0e:	6123      	str	r3, [r4, #16]
 8000d10:	f8cd 8000 	str.w	r8, [sp]
 8000d14:	463b      	mov	r3, r7
 8000d16:	aa03      	add	r2, sp, #12
 8000d18:	4621      	mov	r1, r4
 8000d1a:	4630      	mov	r0, r6
 8000d1c:	f7ff fef6 	bl	8000b0c <_printf_common>
 8000d20:	3001      	adds	r0, #1
 8000d22:	d14d      	bne.n	8000dc0 <_printf_i+0x1c8>
 8000d24:	f04f 30ff 	mov.w	r0, #4294967295
 8000d28:	b005      	add	sp, #20
 8000d2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000d2e:	4839      	ldr	r0, [pc, #228]	; (8000e14 <_printf_i+0x21c>)
 8000d30:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8000d34:	6813      	ldr	r3, [r2, #0]
 8000d36:	6821      	ldr	r1, [r4, #0]
 8000d38:	1d1d      	adds	r5, r3, #4
 8000d3a:	681b      	ldr	r3, [r3, #0]
 8000d3c:	6015      	str	r5, [r2, #0]
 8000d3e:	060a      	lsls	r2, r1, #24
 8000d40:	d50b      	bpl.n	8000d5a <_printf_i+0x162>
 8000d42:	07ca      	lsls	r2, r1, #31
 8000d44:	bf44      	itt	mi
 8000d46:	f041 0120 	orrmi.w	r1, r1, #32
 8000d4a:	6021      	strmi	r1, [r4, #0]
 8000d4c:	b91b      	cbnz	r3, 8000d56 <_printf_i+0x15e>
 8000d4e:	6822      	ldr	r2, [r4, #0]
 8000d50:	f022 0220 	bic.w	r2, r2, #32
 8000d54:	6022      	str	r2, [r4, #0]
 8000d56:	2210      	movs	r2, #16
 8000d58:	e7b7      	b.n	8000cca <_printf_i+0xd2>
 8000d5a:	064d      	lsls	r5, r1, #25
 8000d5c:	bf48      	it	mi
 8000d5e:	b29b      	uxthmi	r3, r3
 8000d60:	e7ef      	b.n	8000d42 <_printf_i+0x14a>
 8000d62:	4665      	mov	r5, ip
 8000d64:	fbb3 f1f2 	udiv	r1, r3, r2
 8000d68:	fb02 3311 	mls	r3, r2, r1, r3
 8000d6c:	5cc3      	ldrb	r3, [r0, r3]
 8000d6e:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8000d72:	460b      	mov	r3, r1
 8000d74:	2900      	cmp	r1, #0
 8000d76:	d1f5      	bne.n	8000d64 <_printf_i+0x16c>
 8000d78:	e7b9      	b.n	8000cee <_printf_i+0xf6>
 8000d7a:	6813      	ldr	r3, [r2, #0]
 8000d7c:	6825      	ldr	r5, [r4, #0]
 8000d7e:	6961      	ldr	r1, [r4, #20]
 8000d80:	1d18      	adds	r0, r3, #4
 8000d82:	6010      	str	r0, [r2, #0]
 8000d84:	0628      	lsls	r0, r5, #24
 8000d86:	681b      	ldr	r3, [r3, #0]
 8000d88:	d501      	bpl.n	8000d8e <_printf_i+0x196>
 8000d8a:	6019      	str	r1, [r3, #0]
 8000d8c:	e002      	b.n	8000d94 <_printf_i+0x19c>
 8000d8e:	066a      	lsls	r2, r5, #25
 8000d90:	d5fb      	bpl.n	8000d8a <_printf_i+0x192>
 8000d92:	8019      	strh	r1, [r3, #0]
 8000d94:	2300      	movs	r3, #0
 8000d96:	6123      	str	r3, [r4, #16]
 8000d98:	4665      	mov	r5, ip
 8000d9a:	e7b9      	b.n	8000d10 <_printf_i+0x118>
 8000d9c:	6813      	ldr	r3, [r2, #0]
 8000d9e:	1d19      	adds	r1, r3, #4
 8000da0:	6011      	str	r1, [r2, #0]
 8000da2:	681d      	ldr	r5, [r3, #0]
 8000da4:	6862      	ldr	r2, [r4, #4]
 8000da6:	2100      	movs	r1, #0
 8000da8:	4628      	mov	r0, r5
 8000daa:	f7ff fa31 	bl	8000210 <memchr>
 8000dae:	b108      	cbz	r0, 8000db4 <_printf_i+0x1bc>
 8000db0:	1b40      	subs	r0, r0, r5
 8000db2:	6060      	str	r0, [r4, #4]
 8000db4:	6863      	ldr	r3, [r4, #4]
 8000db6:	6123      	str	r3, [r4, #16]
 8000db8:	2300      	movs	r3, #0
 8000dba:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000dbe:	e7a7      	b.n	8000d10 <_printf_i+0x118>
 8000dc0:	6923      	ldr	r3, [r4, #16]
 8000dc2:	462a      	mov	r2, r5
 8000dc4:	4639      	mov	r1, r7
 8000dc6:	4630      	mov	r0, r6
 8000dc8:	47c0      	blx	r8
 8000dca:	3001      	adds	r0, #1
 8000dcc:	d0aa      	beq.n	8000d24 <_printf_i+0x12c>
 8000dce:	6823      	ldr	r3, [r4, #0]
 8000dd0:	079b      	lsls	r3, r3, #30
 8000dd2:	d413      	bmi.n	8000dfc <_printf_i+0x204>
 8000dd4:	68e0      	ldr	r0, [r4, #12]
 8000dd6:	9b03      	ldr	r3, [sp, #12]
 8000dd8:	4298      	cmp	r0, r3
 8000dda:	bfb8      	it	lt
 8000ddc:	4618      	movlt	r0, r3
 8000dde:	e7a3      	b.n	8000d28 <_printf_i+0x130>
 8000de0:	2301      	movs	r3, #1
 8000de2:	464a      	mov	r2, r9
 8000de4:	4639      	mov	r1, r7
 8000de6:	4630      	mov	r0, r6
 8000de8:	47c0      	blx	r8
 8000dea:	3001      	adds	r0, #1
 8000dec:	d09a      	beq.n	8000d24 <_printf_i+0x12c>
 8000dee:	3501      	adds	r5, #1
 8000df0:	68e3      	ldr	r3, [r4, #12]
 8000df2:	9a03      	ldr	r2, [sp, #12]
 8000df4:	1a9b      	subs	r3, r3, r2
 8000df6:	42ab      	cmp	r3, r5
 8000df8:	dcf2      	bgt.n	8000de0 <_printf_i+0x1e8>
 8000dfa:	e7eb      	b.n	8000dd4 <_printf_i+0x1dc>
 8000dfc:	2500      	movs	r5, #0
 8000dfe:	f104 0919 	add.w	r9, r4, #25
 8000e02:	e7f5      	b.n	8000df0 <_printf_i+0x1f8>
 8000e04:	2b00      	cmp	r3, #0
 8000e06:	d1ac      	bne.n	8000d62 <_printf_i+0x16a>
 8000e08:	7803      	ldrb	r3, [r0, #0]
 8000e0a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000e0e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e12:	e76c      	b.n	8000cee <_printf_i+0xf6>
 8000e14:	080015a5 	.word	0x080015a5
 8000e18:	080015b6 	.word	0x080015b6

08000e1c <_sbrk_r>:
 8000e1c:	b538      	push	{r3, r4, r5, lr}
 8000e1e:	4c06      	ldr	r4, [pc, #24]	; (8000e38 <_sbrk_r+0x1c>)
 8000e20:	2300      	movs	r3, #0
 8000e22:	4605      	mov	r5, r0
 8000e24:	4608      	mov	r0, r1
 8000e26:	6023      	str	r3, [r4, #0]
 8000e28:	f7ff fb6c 	bl	8000504 <_sbrk>
 8000e2c:	1c43      	adds	r3, r0, #1
 8000e2e:	d102      	bne.n	8000e36 <_sbrk_r+0x1a>
 8000e30:	6823      	ldr	r3, [r4, #0]
 8000e32:	b103      	cbz	r3, 8000e36 <_sbrk_r+0x1a>
 8000e34:	602b      	str	r3, [r5, #0]
 8000e36:	bd38      	pop	{r3, r4, r5, pc}
 8000e38:	2000008c 	.word	0x2000008c

08000e3c <__sread>:
 8000e3c:	b510      	push	{r4, lr}
 8000e3e:	460c      	mov	r4, r1
 8000e40:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e44:	f000 fa96 	bl	8001374 <_read_r>
 8000e48:	2800      	cmp	r0, #0
 8000e4a:	bfab      	itete	ge
 8000e4c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000e4e:	89a3      	ldrhlt	r3, [r4, #12]
 8000e50:	181b      	addge	r3, r3, r0
 8000e52:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000e56:	bfac      	ite	ge
 8000e58:	6563      	strge	r3, [r4, #84]	; 0x54
 8000e5a:	81a3      	strhlt	r3, [r4, #12]
 8000e5c:	bd10      	pop	{r4, pc}

08000e5e <__swrite>:
 8000e5e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e62:	461f      	mov	r7, r3
 8000e64:	898b      	ldrh	r3, [r1, #12]
 8000e66:	05db      	lsls	r3, r3, #23
 8000e68:	4605      	mov	r5, r0
 8000e6a:	460c      	mov	r4, r1
 8000e6c:	4616      	mov	r6, r2
 8000e6e:	d505      	bpl.n	8000e7c <__swrite+0x1e>
 8000e70:	2302      	movs	r3, #2
 8000e72:	2200      	movs	r2, #0
 8000e74:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e78:	f000 f9b6 	bl	80011e8 <_lseek_r>
 8000e7c:	89a3      	ldrh	r3, [r4, #12]
 8000e7e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000e82:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000e86:	81a3      	strh	r3, [r4, #12]
 8000e88:	4632      	mov	r2, r6
 8000e8a:	463b      	mov	r3, r7
 8000e8c:	4628      	mov	r0, r5
 8000e8e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000e92:	f000 b869 	b.w	8000f68 <_write_r>

08000e96 <__sseek>:
 8000e96:	b510      	push	{r4, lr}
 8000e98:	460c      	mov	r4, r1
 8000e9a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e9e:	f000 f9a3 	bl	80011e8 <_lseek_r>
 8000ea2:	1c43      	adds	r3, r0, #1
 8000ea4:	89a3      	ldrh	r3, [r4, #12]
 8000ea6:	bf15      	itete	ne
 8000ea8:	6560      	strne	r0, [r4, #84]	; 0x54
 8000eaa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000eae:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000eb2:	81a3      	strheq	r3, [r4, #12]
 8000eb4:	bf18      	it	ne
 8000eb6:	81a3      	strhne	r3, [r4, #12]
 8000eb8:	bd10      	pop	{r4, pc}

08000eba <__sclose>:
 8000eba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ebe:	f000 b8d3 	b.w	8001068 <_close_r>
	...

08000ec4 <__swbuf_r>:
 8000ec4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ec6:	460e      	mov	r6, r1
 8000ec8:	4614      	mov	r4, r2
 8000eca:	4605      	mov	r5, r0
 8000ecc:	b118      	cbz	r0, 8000ed6 <__swbuf_r+0x12>
 8000ece:	6983      	ldr	r3, [r0, #24]
 8000ed0:	b90b      	cbnz	r3, 8000ed6 <__swbuf_r+0x12>
 8000ed2:	f7ff fbf7 	bl	80006c4 <__sinit>
 8000ed6:	4b21      	ldr	r3, [pc, #132]	; (8000f5c <__swbuf_r+0x98>)
 8000ed8:	429c      	cmp	r4, r3
 8000eda:	d12a      	bne.n	8000f32 <__swbuf_r+0x6e>
 8000edc:	686c      	ldr	r4, [r5, #4]
 8000ede:	69a3      	ldr	r3, [r4, #24]
 8000ee0:	60a3      	str	r3, [r4, #8]
 8000ee2:	89a3      	ldrh	r3, [r4, #12]
 8000ee4:	071a      	lsls	r2, r3, #28
 8000ee6:	d52e      	bpl.n	8000f46 <__swbuf_r+0x82>
 8000ee8:	6923      	ldr	r3, [r4, #16]
 8000eea:	b363      	cbz	r3, 8000f46 <__swbuf_r+0x82>
 8000eec:	6923      	ldr	r3, [r4, #16]
 8000eee:	6820      	ldr	r0, [r4, #0]
 8000ef0:	1ac0      	subs	r0, r0, r3
 8000ef2:	6963      	ldr	r3, [r4, #20]
 8000ef4:	b2f6      	uxtb	r6, r6
 8000ef6:	4283      	cmp	r3, r0
 8000ef8:	4637      	mov	r7, r6
 8000efa:	dc04      	bgt.n	8000f06 <__swbuf_r+0x42>
 8000efc:	4621      	mov	r1, r4
 8000efe:	4628      	mov	r0, r5
 8000f00:	f000 f948 	bl	8001194 <_fflush_r>
 8000f04:	bb28      	cbnz	r0, 8000f52 <__swbuf_r+0x8e>
 8000f06:	68a3      	ldr	r3, [r4, #8]
 8000f08:	3b01      	subs	r3, #1
 8000f0a:	60a3      	str	r3, [r4, #8]
 8000f0c:	6823      	ldr	r3, [r4, #0]
 8000f0e:	1c5a      	adds	r2, r3, #1
 8000f10:	6022      	str	r2, [r4, #0]
 8000f12:	701e      	strb	r6, [r3, #0]
 8000f14:	6963      	ldr	r3, [r4, #20]
 8000f16:	3001      	adds	r0, #1
 8000f18:	4283      	cmp	r3, r0
 8000f1a:	d004      	beq.n	8000f26 <__swbuf_r+0x62>
 8000f1c:	89a3      	ldrh	r3, [r4, #12]
 8000f1e:	07db      	lsls	r3, r3, #31
 8000f20:	d519      	bpl.n	8000f56 <__swbuf_r+0x92>
 8000f22:	2e0a      	cmp	r6, #10
 8000f24:	d117      	bne.n	8000f56 <__swbuf_r+0x92>
 8000f26:	4621      	mov	r1, r4
 8000f28:	4628      	mov	r0, r5
 8000f2a:	f000 f933 	bl	8001194 <_fflush_r>
 8000f2e:	b190      	cbz	r0, 8000f56 <__swbuf_r+0x92>
 8000f30:	e00f      	b.n	8000f52 <__swbuf_r+0x8e>
 8000f32:	4b0b      	ldr	r3, [pc, #44]	; (8000f60 <__swbuf_r+0x9c>)
 8000f34:	429c      	cmp	r4, r3
 8000f36:	d101      	bne.n	8000f3c <__swbuf_r+0x78>
 8000f38:	68ac      	ldr	r4, [r5, #8]
 8000f3a:	e7d0      	b.n	8000ede <__swbuf_r+0x1a>
 8000f3c:	4b09      	ldr	r3, [pc, #36]	; (8000f64 <__swbuf_r+0xa0>)
 8000f3e:	429c      	cmp	r4, r3
 8000f40:	bf08      	it	eq
 8000f42:	68ec      	ldreq	r4, [r5, #12]
 8000f44:	e7cb      	b.n	8000ede <__swbuf_r+0x1a>
 8000f46:	4621      	mov	r1, r4
 8000f48:	4628      	mov	r0, r5
 8000f4a:	f000 f81f 	bl	8000f8c <__swsetup_r>
 8000f4e:	2800      	cmp	r0, #0
 8000f50:	d0cc      	beq.n	8000eec <__swbuf_r+0x28>
 8000f52:	f04f 37ff 	mov.w	r7, #4294967295
 8000f56:	4638      	mov	r0, r7
 8000f58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f5a:	bf00      	nop
 8000f5c:	08001554 	.word	0x08001554
 8000f60:	08001574 	.word	0x08001574
 8000f64:	08001534 	.word	0x08001534

08000f68 <_write_r>:
 8000f68:	b538      	push	{r3, r4, r5, lr}
 8000f6a:	4c07      	ldr	r4, [pc, #28]	; (8000f88 <_write_r+0x20>)
 8000f6c:	4605      	mov	r5, r0
 8000f6e:	4608      	mov	r0, r1
 8000f70:	4611      	mov	r1, r2
 8000f72:	2200      	movs	r2, #0
 8000f74:	6022      	str	r2, [r4, #0]
 8000f76:	461a      	mov	r2, r3
 8000f78:	f7ff fa74 	bl	8000464 <_write>
 8000f7c:	1c43      	adds	r3, r0, #1
 8000f7e:	d102      	bne.n	8000f86 <_write_r+0x1e>
 8000f80:	6823      	ldr	r3, [r4, #0]
 8000f82:	b103      	cbz	r3, 8000f86 <_write_r+0x1e>
 8000f84:	602b      	str	r3, [r5, #0]
 8000f86:	bd38      	pop	{r3, r4, r5, pc}
 8000f88:	2000008c 	.word	0x2000008c

08000f8c <__swsetup_r>:
 8000f8c:	4b32      	ldr	r3, [pc, #200]	; (8001058 <__swsetup_r+0xcc>)
 8000f8e:	b570      	push	{r4, r5, r6, lr}
 8000f90:	681d      	ldr	r5, [r3, #0]
 8000f92:	4606      	mov	r6, r0
 8000f94:	460c      	mov	r4, r1
 8000f96:	b125      	cbz	r5, 8000fa2 <__swsetup_r+0x16>
 8000f98:	69ab      	ldr	r3, [r5, #24]
 8000f9a:	b913      	cbnz	r3, 8000fa2 <__swsetup_r+0x16>
 8000f9c:	4628      	mov	r0, r5
 8000f9e:	f7ff fb91 	bl	80006c4 <__sinit>
 8000fa2:	4b2e      	ldr	r3, [pc, #184]	; (800105c <__swsetup_r+0xd0>)
 8000fa4:	429c      	cmp	r4, r3
 8000fa6:	d10f      	bne.n	8000fc8 <__swsetup_r+0x3c>
 8000fa8:	686c      	ldr	r4, [r5, #4]
 8000faa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000fae:	b29a      	uxth	r2, r3
 8000fb0:	0715      	lsls	r5, r2, #28
 8000fb2:	d42c      	bmi.n	800100e <__swsetup_r+0x82>
 8000fb4:	06d0      	lsls	r0, r2, #27
 8000fb6:	d411      	bmi.n	8000fdc <__swsetup_r+0x50>
 8000fb8:	2209      	movs	r2, #9
 8000fba:	6032      	str	r2, [r6, #0]
 8000fbc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000fc0:	81a3      	strh	r3, [r4, #12]
 8000fc2:	f04f 30ff 	mov.w	r0, #4294967295
 8000fc6:	e03e      	b.n	8001046 <__swsetup_r+0xba>
 8000fc8:	4b25      	ldr	r3, [pc, #148]	; (8001060 <__swsetup_r+0xd4>)
 8000fca:	429c      	cmp	r4, r3
 8000fcc:	d101      	bne.n	8000fd2 <__swsetup_r+0x46>
 8000fce:	68ac      	ldr	r4, [r5, #8]
 8000fd0:	e7eb      	b.n	8000faa <__swsetup_r+0x1e>
 8000fd2:	4b24      	ldr	r3, [pc, #144]	; (8001064 <__swsetup_r+0xd8>)
 8000fd4:	429c      	cmp	r4, r3
 8000fd6:	bf08      	it	eq
 8000fd8:	68ec      	ldreq	r4, [r5, #12]
 8000fda:	e7e6      	b.n	8000faa <__swsetup_r+0x1e>
 8000fdc:	0751      	lsls	r1, r2, #29
 8000fde:	d512      	bpl.n	8001006 <__swsetup_r+0x7a>
 8000fe0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000fe2:	b141      	cbz	r1, 8000ff6 <__swsetup_r+0x6a>
 8000fe4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000fe8:	4299      	cmp	r1, r3
 8000fea:	d002      	beq.n	8000ff2 <__swsetup_r+0x66>
 8000fec:	4630      	mov	r0, r6
 8000fee:	f000 f973 	bl	80012d8 <_free_r>
 8000ff2:	2300      	movs	r3, #0
 8000ff4:	6363      	str	r3, [r4, #52]	; 0x34
 8000ff6:	89a3      	ldrh	r3, [r4, #12]
 8000ff8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000ffc:	81a3      	strh	r3, [r4, #12]
 8000ffe:	2300      	movs	r3, #0
 8001000:	6063      	str	r3, [r4, #4]
 8001002:	6923      	ldr	r3, [r4, #16]
 8001004:	6023      	str	r3, [r4, #0]
 8001006:	89a3      	ldrh	r3, [r4, #12]
 8001008:	f043 0308 	orr.w	r3, r3, #8
 800100c:	81a3      	strh	r3, [r4, #12]
 800100e:	6923      	ldr	r3, [r4, #16]
 8001010:	b94b      	cbnz	r3, 8001026 <__swsetup_r+0x9a>
 8001012:	89a3      	ldrh	r3, [r4, #12]
 8001014:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001018:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800101c:	d003      	beq.n	8001026 <__swsetup_r+0x9a>
 800101e:	4621      	mov	r1, r4
 8001020:	4630      	mov	r0, r6
 8001022:	f000 f917 	bl	8001254 <__smakebuf_r>
 8001026:	89a2      	ldrh	r2, [r4, #12]
 8001028:	f012 0301 	ands.w	r3, r2, #1
 800102c:	d00c      	beq.n	8001048 <__swsetup_r+0xbc>
 800102e:	2300      	movs	r3, #0
 8001030:	60a3      	str	r3, [r4, #8]
 8001032:	6963      	ldr	r3, [r4, #20]
 8001034:	425b      	negs	r3, r3
 8001036:	61a3      	str	r3, [r4, #24]
 8001038:	6923      	ldr	r3, [r4, #16]
 800103a:	b953      	cbnz	r3, 8001052 <__swsetup_r+0xc6>
 800103c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001040:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8001044:	d1ba      	bne.n	8000fbc <__swsetup_r+0x30>
 8001046:	bd70      	pop	{r4, r5, r6, pc}
 8001048:	0792      	lsls	r2, r2, #30
 800104a:	bf58      	it	pl
 800104c:	6963      	ldrpl	r3, [r4, #20]
 800104e:	60a3      	str	r3, [r4, #8]
 8001050:	e7f2      	b.n	8001038 <__swsetup_r+0xac>
 8001052:	2000      	movs	r0, #0
 8001054:	e7f7      	b.n	8001046 <__swsetup_r+0xba>
 8001056:	bf00      	nop
 8001058:	20000000 	.word	0x20000000
 800105c:	08001554 	.word	0x08001554
 8001060:	08001574 	.word	0x08001574
 8001064:	08001534 	.word	0x08001534

08001068 <_close_r>:
 8001068:	b538      	push	{r3, r4, r5, lr}
 800106a:	4c06      	ldr	r4, [pc, #24]	; (8001084 <_close_r+0x1c>)
 800106c:	2300      	movs	r3, #0
 800106e:	4605      	mov	r5, r0
 8001070:	4608      	mov	r0, r1
 8001072:	6023      	str	r3, [r4, #0]
 8001074:	f7ff fa12 	bl	800049c <_close>
 8001078:	1c43      	adds	r3, r0, #1
 800107a:	d102      	bne.n	8001082 <_close_r+0x1a>
 800107c:	6823      	ldr	r3, [r4, #0]
 800107e:	b103      	cbz	r3, 8001082 <_close_r+0x1a>
 8001080:	602b      	str	r3, [r5, #0]
 8001082:	bd38      	pop	{r3, r4, r5, pc}
 8001084:	2000008c 	.word	0x2000008c

08001088 <__sflush_r>:
 8001088:	898a      	ldrh	r2, [r1, #12]
 800108a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800108e:	4605      	mov	r5, r0
 8001090:	0710      	lsls	r0, r2, #28
 8001092:	460c      	mov	r4, r1
 8001094:	d458      	bmi.n	8001148 <__sflush_r+0xc0>
 8001096:	684b      	ldr	r3, [r1, #4]
 8001098:	2b00      	cmp	r3, #0
 800109a:	dc05      	bgt.n	80010a8 <__sflush_r+0x20>
 800109c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800109e:	2b00      	cmp	r3, #0
 80010a0:	dc02      	bgt.n	80010a8 <__sflush_r+0x20>
 80010a2:	2000      	movs	r0, #0
 80010a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80010a8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80010aa:	2e00      	cmp	r6, #0
 80010ac:	d0f9      	beq.n	80010a2 <__sflush_r+0x1a>
 80010ae:	2300      	movs	r3, #0
 80010b0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80010b4:	682f      	ldr	r7, [r5, #0]
 80010b6:	6a21      	ldr	r1, [r4, #32]
 80010b8:	602b      	str	r3, [r5, #0]
 80010ba:	d032      	beq.n	8001122 <__sflush_r+0x9a>
 80010bc:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80010be:	89a3      	ldrh	r3, [r4, #12]
 80010c0:	075a      	lsls	r2, r3, #29
 80010c2:	d505      	bpl.n	80010d0 <__sflush_r+0x48>
 80010c4:	6863      	ldr	r3, [r4, #4]
 80010c6:	1ac0      	subs	r0, r0, r3
 80010c8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80010ca:	b10b      	cbz	r3, 80010d0 <__sflush_r+0x48>
 80010cc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80010ce:	1ac0      	subs	r0, r0, r3
 80010d0:	2300      	movs	r3, #0
 80010d2:	4602      	mov	r2, r0
 80010d4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80010d6:	6a21      	ldr	r1, [r4, #32]
 80010d8:	4628      	mov	r0, r5
 80010da:	47b0      	blx	r6
 80010dc:	1c43      	adds	r3, r0, #1
 80010de:	89a3      	ldrh	r3, [r4, #12]
 80010e0:	d106      	bne.n	80010f0 <__sflush_r+0x68>
 80010e2:	6829      	ldr	r1, [r5, #0]
 80010e4:	291d      	cmp	r1, #29
 80010e6:	d848      	bhi.n	800117a <__sflush_r+0xf2>
 80010e8:	4a29      	ldr	r2, [pc, #164]	; (8001190 <__sflush_r+0x108>)
 80010ea:	40ca      	lsrs	r2, r1
 80010ec:	07d6      	lsls	r6, r2, #31
 80010ee:	d544      	bpl.n	800117a <__sflush_r+0xf2>
 80010f0:	2200      	movs	r2, #0
 80010f2:	6062      	str	r2, [r4, #4]
 80010f4:	04d9      	lsls	r1, r3, #19
 80010f6:	6922      	ldr	r2, [r4, #16]
 80010f8:	6022      	str	r2, [r4, #0]
 80010fa:	d504      	bpl.n	8001106 <__sflush_r+0x7e>
 80010fc:	1c42      	adds	r2, r0, #1
 80010fe:	d101      	bne.n	8001104 <__sflush_r+0x7c>
 8001100:	682b      	ldr	r3, [r5, #0]
 8001102:	b903      	cbnz	r3, 8001106 <__sflush_r+0x7e>
 8001104:	6560      	str	r0, [r4, #84]	; 0x54
 8001106:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001108:	602f      	str	r7, [r5, #0]
 800110a:	2900      	cmp	r1, #0
 800110c:	d0c9      	beq.n	80010a2 <__sflush_r+0x1a>
 800110e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001112:	4299      	cmp	r1, r3
 8001114:	d002      	beq.n	800111c <__sflush_r+0x94>
 8001116:	4628      	mov	r0, r5
 8001118:	f000 f8de 	bl	80012d8 <_free_r>
 800111c:	2000      	movs	r0, #0
 800111e:	6360      	str	r0, [r4, #52]	; 0x34
 8001120:	e7c0      	b.n	80010a4 <__sflush_r+0x1c>
 8001122:	2301      	movs	r3, #1
 8001124:	4628      	mov	r0, r5
 8001126:	47b0      	blx	r6
 8001128:	1c41      	adds	r1, r0, #1
 800112a:	d1c8      	bne.n	80010be <__sflush_r+0x36>
 800112c:	682b      	ldr	r3, [r5, #0]
 800112e:	2b00      	cmp	r3, #0
 8001130:	d0c5      	beq.n	80010be <__sflush_r+0x36>
 8001132:	2b1d      	cmp	r3, #29
 8001134:	d001      	beq.n	800113a <__sflush_r+0xb2>
 8001136:	2b16      	cmp	r3, #22
 8001138:	d101      	bne.n	800113e <__sflush_r+0xb6>
 800113a:	602f      	str	r7, [r5, #0]
 800113c:	e7b1      	b.n	80010a2 <__sflush_r+0x1a>
 800113e:	89a3      	ldrh	r3, [r4, #12]
 8001140:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001144:	81a3      	strh	r3, [r4, #12]
 8001146:	e7ad      	b.n	80010a4 <__sflush_r+0x1c>
 8001148:	690f      	ldr	r7, [r1, #16]
 800114a:	2f00      	cmp	r7, #0
 800114c:	d0a9      	beq.n	80010a2 <__sflush_r+0x1a>
 800114e:	0793      	lsls	r3, r2, #30
 8001150:	680e      	ldr	r6, [r1, #0]
 8001152:	bf08      	it	eq
 8001154:	694b      	ldreq	r3, [r1, #20]
 8001156:	600f      	str	r7, [r1, #0]
 8001158:	bf18      	it	ne
 800115a:	2300      	movne	r3, #0
 800115c:	eba6 0807 	sub.w	r8, r6, r7
 8001160:	608b      	str	r3, [r1, #8]
 8001162:	f1b8 0f00 	cmp.w	r8, #0
 8001166:	dd9c      	ble.n	80010a2 <__sflush_r+0x1a>
 8001168:	4643      	mov	r3, r8
 800116a:	463a      	mov	r2, r7
 800116c:	6a21      	ldr	r1, [r4, #32]
 800116e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001170:	4628      	mov	r0, r5
 8001172:	47b0      	blx	r6
 8001174:	2800      	cmp	r0, #0
 8001176:	dc06      	bgt.n	8001186 <__sflush_r+0xfe>
 8001178:	89a3      	ldrh	r3, [r4, #12]
 800117a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800117e:	81a3      	strh	r3, [r4, #12]
 8001180:	f04f 30ff 	mov.w	r0, #4294967295
 8001184:	e78e      	b.n	80010a4 <__sflush_r+0x1c>
 8001186:	4407      	add	r7, r0
 8001188:	eba8 0800 	sub.w	r8, r8, r0
 800118c:	e7e9      	b.n	8001162 <__sflush_r+0xda>
 800118e:	bf00      	nop
 8001190:	20400001 	.word	0x20400001

08001194 <_fflush_r>:
 8001194:	b538      	push	{r3, r4, r5, lr}
 8001196:	690b      	ldr	r3, [r1, #16]
 8001198:	4605      	mov	r5, r0
 800119a:	460c      	mov	r4, r1
 800119c:	b1db      	cbz	r3, 80011d6 <_fflush_r+0x42>
 800119e:	b118      	cbz	r0, 80011a8 <_fflush_r+0x14>
 80011a0:	6983      	ldr	r3, [r0, #24]
 80011a2:	b90b      	cbnz	r3, 80011a8 <_fflush_r+0x14>
 80011a4:	f7ff fa8e 	bl	80006c4 <__sinit>
 80011a8:	4b0c      	ldr	r3, [pc, #48]	; (80011dc <_fflush_r+0x48>)
 80011aa:	429c      	cmp	r4, r3
 80011ac:	d109      	bne.n	80011c2 <_fflush_r+0x2e>
 80011ae:	686c      	ldr	r4, [r5, #4]
 80011b0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011b4:	b17b      	cbz	r3, 80011d6 <_fflush_r+0x42>
 80011b6:	4621      	mov	r1, r4
 80011b8:	4628      	mov	r0, r5
 80011ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80011be:	f7ff bf63 	b.w	8001088 <__sflush_r>
 80011c2:	4b07      	ldr	r3, [pc, #28]	; (80011e0 <_fflush_r+0x4c>)
 80011c4:	429c      	cmp	r4, r3
 80011c6:	d101      	bne.n	80011cc <_fflush_r+0x38>
 80011c8:	68ac      	ldr	r4, [r5, #8]
 80011ca:	e7f1      	b.n	80011b0 <_fflush_r+0x1c>
 80011cc:	4b05      	ldr	r3, [pc, #20]	; (80011e4 <_fflush_r+0x50>)
 80011ce:	429c      	cmp	r4, r3
 80011d0:	bf08      	it	eq
 80011d2:	68ec      	ldreq	r4, [r5, #12]
 80011d4:	e7ec      	b.n	80011b0 <_fflush_r+0x1c>
 80011d6:	2000      	movs	r0, #0
 80011d8:	bd38      	pop	{r3, r4, r5, pc}
 80011da:	bf00      	nop
 80011dc:	08001554 	.word	0x08001554
 80011e0:	08001574 	.word	0x08001574
 80011e4:	08001534 	.word	0x08001534

080011e8 <_lseek_r>:
 80011e8:	b538      	push	{r3, r4, r5, lr}
 80011ea:	4c07      	ldr	r4, [pc, #28]	; (8001208 <_lseek_r+0x20>)
 80011ec:	4605      	mov	r5, r0
 80011ee:	4608      	mov	r0, r1
 80011f0:	4611      	mov	r1, r2
 80011f2:	2200      	movs	r2, #0
 80011f4:	6022      	str	r2, [r4, #0]
 80011f6:	461a      	mov	r2, r3
 80011f8:	f7ff f977 	bl	80004ea <_lseek>
 80011fc:	1c43      	adds	r3, r0, #1
 80011fe:	d102      	bne.n	8001206 <_lseek_r+0x1e>
 8001200:	6823      	ldr	r3, [r4, #0]
 8001202:	b103      	cbz	r3, 8001206 <_lseek_r+0x1e>
 8001204:	602b      	str	r3, [r5, #0]
 8001206:	bd38      	pop	{r3, r4, r5, pc}
 8001208:	2000008c 	.word	0x2000008c

0800120c <__swhatbuf_r>:
 800120c:	b570      	push	{r4, r5, r6, lr}
 800120e:	460e      	mov	r6, r1
 8001210:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001214:	2900      	cmp	r1, #0
 8001216:	b096      	sub	sp, #88	; 0x58
 8001218:	4614      	mov	r4, r2
 800121a:	461d      	mov	r5, r3
 800121c:	da07      	bge.n	800122e <__swhatbuf_r+0x22>
 800121e:	2300      	movs	r3, #0
 8001220:	602b      	str	r3, [r5, #0]
 8001222:	89b3      	ldrh	r3, [r6, #12]
 8001224:	061a      	lsls	r2, r3, #24
 8001226:	d410      	bmi.n	800124a <__swhatbuf_r+0x3e>
 8001228:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800122c:	e00e      	b.n	800124c <__swhatbuf_r+0x40>
 800122e:	466a      	mov	r2, sp
 8001230:	f000 f8b2 	bl	8001398 <_fstat_r>
 8001234:	2800      	cmp	r0, #0
 8001236:	dbf2      	blt.n	800121e <__swhatbuf_r+0x12>
 8001238:	9a01      	ldr	r2, [sp, #4]
 800123a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800123e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001242:	425a      	negs	r2, r3
 8001244:	415a      	adcs	r2, r3
 8001246:	602a      	str	r2, [r5, #0]
 8001248:	e7ee      	b.n	8001228 <__swhatbuf_r+0x1c>
 800124a:	2340      	movs	r3, #64	; 0x40
 800124c:	2000      	movs	r0, #0
 800124e:	6023      	str	r3, [r4, #0]
 8001250:	b016      	add	sp, #88	; 0x58
 8001252:	bd70      	pop	{r4, r5, r6, pc}

08001254 <__smakebuf_r>:
 8001254:	898b      	ldrh	r3, [r1, #12]
 8001256:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001258:	079d      	lsls	r5, r3, #30
 800125a:	4606      	mov	r6, r0
 800125c:	460c      	mov	r4, r1
 800125e:	d507      	bpl.n	8001270 <__smakebuf_r+0x1c>
 8001260:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001264:	6023      	str	r3, [r4, #0]
 8001266:	6123      	str	r3, [r4, #16]
 8001268:	2301      	movs	r3, #1
 800126a:	6163      	str	r3, [r4, #20]
 800126c:	b002      	add	sp, #8
 800126e:	bd70      	pop	{r4, r5, r6, pc}
 8001270:	ab01      	add	r3, sp, #4
 8001272:	466a      	mov	r2, sp
 8001274:	f7ff ffca 	bl	800120c <__swhatbuf_r>
 8001278:	9900      	ldr	r1, [sp, #0]
 800127a:	4605      	mov	r5, r0
 800127c:	4630      	mov	r0, r6
 800127e:	f7ff faab 	bl	80007d8 <_malloc_r>
 8001282:	b948      	cbnz	r0, 8001298 <__smakebuf_r+0x44>
 8001284:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001288:	059a      	lsls	r2, r3, #22
 800128a:	d4ef      	bmi.n	800126c <__smakebuf_r+0x18>
 800128c:	f023 0303 	bic.w	r3, r3, #3
 8001290:	f043 0302 	orr.w	r3, r3, #2
 8001294:	81a3      	strh	r3, [r4, #12]
 8001296:	e7e3      	b.n	8001260 <__smakebuf_r+0xc>
 8001298:	4b0d      	ldr	r3, [pc, #52]	; (80012d0 <__smakebuf_r+0x7c>)
 800129a:	62b3      	str	r3, [r6, #40]	; 0x28
 800129c:	89a3      	ldrh	r3, [r4, #12]
 800129e:	6020      	str	r0, [r4, #0]
 80012a0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80012a4:	81a3      	strh	r3, [r4, #12]
 80012a6:	9b00      	ldr	r3, [sp, #0]
 80012a8:	6163      	str	r3, [r4, #20]
 80012aa:	9b01      	ldr	r3, [sp, #4]
 80012ac:	6120      	str	r0, [r4, #16]
 80012ae:	b15b      	cbz	r3, 80012c8 <__smakebuf_r+0x74>
 80012b0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012b4:	4630      	mov	r0, r6
 80012b6:	f000 f881 	bl	80013bc <_isatty_r>
 80012ba:	b128      	cbz	r0, 80012c8 <__smakebuf_r+0x74>
 80012bc:	89a3      	ldrh	r3, [r4, #12]
 80012be:	f023 0303 	bic.w	r3, r3, #3
 80012c2:	f043 0301 	orr.w	r3, r3, #1
 80012c6:	81a3      	strh	r3, [r4, #12]
 80012c8:	89a3      	ldrh	r3, [r4, #12]
 80012ca:	431d      	orrs	r5, r3
 80012cc:	81a5      	strh	r5, [r4, #12]
 80012ce:	e7cd      	b.n	800126c <__smakebuf_r+0x18>
 80012d0:	0800068d 	.word	0x0800068d

080012d4 <__malloc_lock>:
 80012d4:	4770      	bx	lr

080012d6 <__malloc_unlock>:
 80012d6:	4770      	bx	lr

080012d8 <_free_r>:
 80012d8:	b538      	push	{r3, r4, r5, lr}
 80012da:	4605      	mov	r5, r0
 80012dc:	2900      	cmp	r1, #0
 80012de:	d045      	beq.n	800136c <_free_r+0x94>
 80012e0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80012e4:	1f0c      	subs	r4, r1, #4
 80012e6:	2b00      	cmp	r3, #0
 80012e8:	bfb8      	it	lt
 80012ea:	18e4      	addlt	r4, r4, r3
 80012ec:	f7ff fff2 	bl	80012d4 <__malloc_lock>
 80012f0:	4a1f      	ldr	r2, [pc, #124]	; (8001370 <_free_r+0x98>)
 80012f2:	6813      	ldr	r3, [r2, #0]
 80012f4:	4610      	mov	r0, r2
 80012f6:	b933      	cbnz	r3, 8001306 <_free_r+0x2e>
 80012f8:	6063      	str	r3, [r4, #4]
 80012fa:	6014      	str	r4, [r2, #0]
 80012fc:	4628      	mov	r0, r5
 80012fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001302:	f7ff bfe8 	b.w	80012d6 <__malloc_unlock>
 8001306:	42a3      	cmp	r3, r4
 8001308:	d90c      	bls.n	8001324 <_free_r+0x4c>
 800130a:	6821      	ldr	r1, [r4, #0]
 800130c:	1862      	adds	r2, r4, r1
 800130e:	4293      	cmp	r3, r2
 8001310:	bf04      	itt	eq
 8001312:	681a      	ldreq	r2, [r3, #0]
 8001314:	685b      	ldreq	r3, [r3, #4]
 8001316:	6063      	str	r3, [r4, #4]
 8001318:	bf04      	itt	eq
 800131a:	1852      	addeq	r2, r2, r1
 800131c:	6022      	streq	r2, [r4, #0]
 800131e:	6004      	str	r4, [r0, #0]
 8001320:	e7ec      	b.n	80012fc <_free_r+0x24>
 8001322:	4613      	mov	r3, r2
 8001324:	685a      	ldr	r2, [r3, #4]
 8001326:	b10a      	cbz	r2, 800132c <_free_r+0x54>
 8001328:	42a2      	cmp	r2, r4
 800132a:	d9fa      	bls.n	8001322 <_free_r+0x4a>
 800132c:	6819      	ldr	r1, [r3, #0]
 800132e:	1858      	adds	r0, r3, r1
 8001330:	42a0      	cmp	r0, r4
 8001332:	d10b      	bne.n	800134c <_free_r+0x74>
 8001334:	6820      	ldr	r0, [r4, #0]
 8001336:	4401      	add	r1, r0
 8001338:	1858      	adds	r0, r3, r1
 800133a:	4282      	cmp	r2, r0
 800133c:	6019      	str	r1, [r3, #0]
 800133e:	d1dd      	bne.n	80012fc <_free_r+0x24>
 8001340:	6810      	ldr	r0, [r2, #0]
 8001342:	6852      	ldr	r2, [r2, #4]
 8001344:	605a      	str	r2, [r3, #4]
 8001346:	4401      	add	r1, r0
 8001348:	6019      	str	r1, [r3, #0]
 800134a:	e7d7      	b.n	80012fc <_free_r+0x24>
 800134c:	d902      	bls.n	8001354 <_free_r+0x7c>
 800134e:	230c      	movs	r3, #12
 8001350:	602b      	str	r3, [r5, #0]
 8001352:	e7d3      	b.n	80012fc <_free_r+0x24>
 8001354:	6820      	ldr	r0, [r4, #0]
 8001356:	1821      	adds	r1, r4, r0
 8001358:	428a      	cmp	r2, r1
 800135a:	bf04      	itt	eq
 800135c:	6811      	ldreq	r1, [r2, #0]
 800135e:	6852      	ldreq	r2, [r2, #4]
 8001360:	6062      	str	r2, [r4, #4]
 8001362:	bf04      	itt	eq
 8001364:	1809      	addeq	r1, r1, r0
 8001366:	6021      	streq	r1, [r4, #0]
 8001368:	605c      	str	r4, [r3, #4]
 800136a:	e7c7      	b.n	80012fc <_free_r+0x24>
 800136c:	bd38      	pop	{r3, r4, r5, pc}
 800136e:	bf00      	nop
 8001370:	20000084 	.word	0x20000084

08001374 <_read_r>:
 8001374:	b538      	push	{r3, r4, r5, lr}
 8001376:	4c07      	ldr	r4, [pc, #28]	; (8001394 <_read_r+0x20>)
 8001378:	4605      	mov	r5, r0
 800137a:	4608      	mov	r0, r1
 800137c:	4611      	mov	r1, r2
 800137e:	2200      	movs	r2, #0
 8001380:	6022      	str	r2, [r4, #0]
 8001382:	461a      	mov	r2, r3
 8001384:	f7ff f851 	bl	800042a <_read>
 8001388:	1c43      	adds	r3, r0, #1
 800138a:	d102      	bne.n	8001392 <_read_r+0x1e>
 800138c:	6823      	ldr	r3, [r4, #0]
 800138e:	b103      	cbz	r3, 8001392 <_read_r+0x1e>
 8001390:	602b      	str	r3, [r5, #0]
 8001392:	bd38      	pop	{r3, r4, r5, pc}
 8001394:	2000008c 	.word	0x2000008c

08001398 <_fstat_r>:
 8001398:	b538      	push	{r3, r4, r5, lr}
 800139a:	4c07      	ldr	r4, [pc, #28]	; (80013b8 <_fstat_r+0x20>)
 800139c:	2300      	movs	r3, #0
 800139e:	4605      	mov	r5, r0
 80013a0:	4608      	mov	r0, r1
 80013a2:	4611      	mov	r1, r2
 80013a4:	6023      	str	r3, [r4, #0]
 80013a6:	f7ff f885 	bl	80004b4 <_fstat>
 80013aa:	1c43      	adds	r3, r0, #1
 80013ac:	d102      	bne.n	80013b4 <_fstat_r+0x1c>
 80013ae:	6823      	ldr	r3, [r4, #0]
 80013b0:	b103      	cbz	r3, 80013b4 <_fstat_r+0x1c>
 80013b2:	602b      	str	r3, [r5, #0]
 80013b4:	bd38      	pop	{r3, r4, r5, pc}
 80013b6:	bf00      	nop
 80013b8:	2000008c 	.word	0x2000008c

080013bc <_isatty_r>:
 80013bc:	b538      	push	{r3, r4, r5, lr}
 80013be:	4c06      	ldr	r4, [pc, #24]	; (80013d8 <_isatty_r+0x1c>)
 80013c0:	2300      	movs	r3, #0
 80013c2:	4605      	mov	r5, r0
 80013c4:	4608      	mov	r0, r1
 80013c6:	6023      	str	r3, [r4, #0]
 80013c8:	f7ff f884 	bl	80004d4 <_isatty>
 80013cc:	1c43      	adds	r3, r0, #1
 80013ce:	d102      	bne.n	80013d6 <_isatty_r+0x1a>
 80013d0:	6823      	ldr	r3, [r4, #0]
 80013d2:	b103      	cbz	r3, 80013d6 <_isatty_r+0x1a>
 80013d4:	602b      	str	r3, [r5, #0]
 80013d6:	bd38      	pop	{r3, r4, r5, pc}
 80013d8:	2000008c 	.word	0x2000008c

080013dc <_init>:
 80013dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013de:	bf00      	nop
 80013e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013e2:	bc08      	pop	{r3}
 80013e4:	469e      	mov	lr, r3
 80013e6:	4770      	bx	lr

080013e8 <_fini>:
 80013e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013ea:	bf00      	nop
 80013ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013ee:	bc08      	pop	{r3}
 80013f0:	469e      	mov	lr, r3
 80013f2:	4770      	bx	lr
